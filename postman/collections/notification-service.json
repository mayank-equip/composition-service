{
	"info": {
		"_postman_id": "7e10e05b-150b-4e75-9ce8-5976e1ff387b",
		"name": "notification-service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "19609580-7e10e05b-150b-4e75-9ce8-5976e1ff387b"
	},
	"item": [
		{
			"name": "CareTeam Chat notifications",
			"item": [
				{
					"name": "Add Patient1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f580645a-405a-47f0-8ec7-cf4ddccb2f65",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"patientId1\", jsonData.id);",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"senderUsername\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"senderPassword\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "afebe6ee-dd61-4f07-9587-72e851476c0d",
								"exec": [
									"let ld = require('lodash');",
									"",
									"let gendersList = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"let pronounsList = [",
									"    \"He/Him/His\",",
									"    \"She/Her/Hers\",",
									"    \"They/Them/Theirs\",",
									"    \"Other\"",
									"];",
									"",
									"let ethnicitiesList = [",
									"    \"Asian\",",
									"    \"Black/African American\",",
									"    \"White/Caucasian\",",
									"    \"Hispanic/Latinx\",",
									"    \"Native American, Indian American, or Alaska Native\",",
									"    \"Native Hawaiian or other Pacific Islander\",",
									"    \"Middle Eastern or North African\",",
									"    \"Prefer not to answer\",",
									"    \"Other\"",
									"];",
									"",
									"let languagesList = [",
									"    \"English\",",
									"    \"Spanish\",",
									"    \"Chinese\",",
									"    \"French\",",
									"    \"Tagalog\",",
									"    \"Vietnamese\",",
									"    \"Korean\",",
									"    \"German\",",
									"    \"Russian\",",
									"    \"Italian\",",
									"    \"Portuguese\",",
									"    \"Polish\",",
									"    \"Japanese\",",
									"    \"Persian\",",
									"    \"Greek\",",
									"    \"Serbo-Croatian\",",
									"    \"Armenian\",",
									"    \"Yiddish\",",
									"    \"American Sign Language (ASL)\"",
									"];",
									"",
									"let sexList = [",
									"    \"Male\",",
									"    \"Female\"",
									"];",
									"",
									"let timezonesList = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\"",
									"];",
									"",
									"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"patientFirstName1\", firstName);",
									"pm.environment.set(\"patientLastName1\", lastName);",
									"pm.environment.set(\"patientEmail\", email);",
									"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientChosenName1\", chosenName);",
									"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
									"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
									"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientCountry\", \"US\");",
									"pm.environment.set(\"patientZip\", zip.toString());",
									"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
									"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
									"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientSex\", ld.sample(sexList));",
									"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
									"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ba464e94-fae8-401f-a31e-c2fc587a502f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientFirstName1}}\",\n    \"lastName\": \"{{patientLastName1}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName1}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Patient2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "20f84144-f723-4e80-b917-1a7ace2069c3",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"patientId2\", jsonData.id);",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"senderUsername\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"senderPassword\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "29d85d11-d3e6-4e13-b73b-613c2f6de6f5",
								"exec": [
									"let ld = require('lodash');",
									"",
									"let gendersList = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"let pronounsList = [",
									"    \"He/Him/His\",",
									"    \"She/Her/Hers\",",
									"    \"They/Them/Theirs\",",
									"    \"Other\"",
									"];",
									"",
									"let ethnicitiesList = [",
									"    \"Asian\",",
									"    \"Black/African American\",",
									"    \"White/Caucasian\",",
									"    \"Hispanic/Latinx\",",
									"    \"Native American, Indian American, or Alaska Native\",",
									"    \"Native Hawaiian or other Pacific Islander\",",
									"    \"Middle Eastern or North African\",",
									"    \"Prefer not to answer\",",
									"    \"Other\"",
									"];",
									"",
									"let languagesList = [",
									"    \"English\",",
									"    \"Spanish\",",
									"    \"Chinese\",",
									"    \"French\",",
									"    \"Tagalog\",",
									"    \"Vietnamese\",",
									"    \"Korean\",",
									"    \"German\",",
									"    \"Russian\",",
									"    \"Italian\",",
									"    \"Portuguese\",",
									"    \"Polish\",",
									"    \"Japanese\",",
									"    \"Persian\",",
									"    \"Greek\",",
									"    \"Serbo-Croatian\",",
									"    \"Armenian\",",
									"    \"Yiddish\",",
									"    \"American Sign Language (ASL)\"",
									"];",
									"",
									"let sexList = [",
									"    \"Male\",",
									"    \"Female\"",
									"];",
									"",
									"let timezonesList = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\"",
									"];",
									"",
									"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"patientFirstName2\", firstName);",
									"pm.environment.set(\"patientLastName2\", lastName);",
									"pm.environment.set(\"patientEmail\", email);",
									"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientChosenName2\", chosenName);",
									"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
									"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
									"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientCountry\", \"US\");",
									"pm.environment.set(\"patientZip\", zip.toString());",
									"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
									"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
									"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientSex\", ld.sample(sexList));",
									"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
									"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "aa61cc47-1e8a-443d-90d3-e5c53654af30",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientFirstName2}}\",\n    \"lastName\": \"{{patientLastName2}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName2}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create care team Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bd59bd1-bb87-4a86-b6cd-c45028e211e8",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"careTeamExternalId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3666e25f-64d4-417c-959f-9a1ad81efa2a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientExternalId\": \"{{patientId1}}\",\n    \"type\": \"care\",\n    \"providers\": [\n        \"{{receiverExternalId}}\",\n        \"{{senderExternalId}}\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/care-team",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"care-team"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save chat mention notification - patient1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d01542bc-1830-417a-b4c7-6b5e48281e9b",
								"exec": [
									"let ld = require('lodash');",
									"",
									"const eventTypes = [\"CHAT_MENTION\", \"CHAT_REPLY\", \"ADDED_TO_CARE_TEAM\", \"REMOVED_FROM_CARE_TEAM\", \"UPDATED_INSURANCE_STATUS\", \"UPDATED_MEDICAL_CLEARANCE_STATUS\", \"COMPLETED_INTAKE_SURVEY\", \"UPDATED_CONTACTS\"];",
									"",
									"const priorities = [\"HIGH\", \"MEDIUM\", \"LOW\"];",
									"",
									"const notificationActions = [\"OPEN_CARE_TEAM\", \"OPEN_PATIENT_PROFILE\", \"OPEN_CONTACTS\", \"OPEN_CHAT\"];",
									"",
									"const source = [\"CHAT\", \"USER\", \"INQUIRY_REFERRAL\", \"CLINICAL_DATA\"];",
									"",
									"pm.environment.set(\"eventType\", ld.sample(eventTypes));",
									"pm.environment.set(\"messageId1\", ld.random(1000000000,9999999999));",
									"pm.environment.set(\"message1\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"priority1\", ld.sample(priorities));",
									"pm.environment.set(\"notificationAction\", ld.sample(notificationActions));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ec7a267d-bedd-4957-85cf-5f4efebb3cef",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.notificationExternalId).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"notificationExternalId1\", jsonData.notificationExternalId);",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"receiverUsername\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"receiverPassword\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "25feecc2-6d08-45ed-b755-b12d10d6ca40",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"subjectId\":\"{{patientId1}}\",\n    \"senderId\":\"{{senderExternalId}}\",\n    \"eventType\":\"CHAT_MENTION\",\n        \"data\":{\n            \"messageId\": {{messageId1}},\n            \"channelName\": \"Care Team\",\n            \"channelUri\": \"MAUD_CARETEAM_{{patientId1}}\",\n            \"message\": \"{{message1}}\",\n            \"sender\": {\n                \"metadata\": {\n                    \"userType\": \"Provider\",\n                    \"providerType\": \"{{senderType}}\"\n                },\n                \"user_id\": \"{{senderExternalId}}\",\n                \"profile_url\": \"\",\n                \"nickname\": \"{{senderFirstName}} {{senderLastName}}\"\n            }\n        },\n    \"targets\":[\n        {\"id\":\"{{receiverExternalId}}\",\"type\":\"Provider\"}\n    ],\n    \"priority\": \"{{priority1}}\",\n    \"action\": \"OPEN_CHAT\",\n    \"source\": \"CHAT\",\n    \"groupBy\": \"MAUD_CARETEAM_{{patientId1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify added notification for patient1 care channel",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e3cfe02-7ec3-462d-8949-7d0c3c6d2bac",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            \"notificationExternalId\": \"\"+pm.environment.get(\"notificationExternalId1\")+\"\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId1\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName1\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName1\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName1\")+\"\"",
									"            },",
									"            \"eventType\": \"CHAT_MENTION\",",
									"            \"senderId\": \"\"+pm.environment.get(\"senderExternalId\")+\"\",",
									"            \"sender\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"senderExternalId\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"senderFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"senderLastName\")+\"\"",
									"            },",
									"            \"data\": {",
									"                \"messageId\": pm.environment.get(\"messageId1\"),",
									"                \"channelName\": \"Care Team\",",
									"                \"channelUri\": \"MAUD_CARETEAM_\"+pm.environment.get(\"patientId1\")+\"\",",
									"                \"message\": \"\"+pm.environment.get(\"message1\")+\"\",",
									"                \"sender\": {",
									"                    \"metadata\": {",
									"                        \"userType\": \"Provider\",",
									"                        \"providerType\": \"\"+pm.environment.get(\"senderType\")+\"\"",
									"                    },",
									"                    \"user_id\": \"\"+pm.environment.get(\"senderExternalId\")+\"\",",
									"                    \"nickname\": \"\"+pm.environment.get(\"senderFirstName\")+\" \"+pm.environment.get(\"senderLastName\")+\"\"",
									"                }",
									"            },",
									"            \"priority\": \"\"+pm.environment.get(\"priority1\")+\"\",",
									"            \"action\": \"OPEN_CHAT\",",
									"            \"source\": \"CHAT\",",
									"            //\"createdAt\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\",",
									"            \"groupBy\": \"MAUD_CARETEAM_\"+pm.environment.get(\"patientId1\")+\"\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"/*pm.test(\"Verify response does not contains the records older than 7 days\", function () {",
									"    var flag = false;",
									"    for(let i=0; i<pm.response.json().data.length; i++){ ",
									"        var act_date_str = pm.response.json().data[i].createdAt;",
									"        var act_date = moment(act_date_str).format('YYYY-MM-DD');",
									"        var from = moment().subtract(7, 'days').format('YYYY-MM-DD');",
									"        var to = moment().format('YYYY-MM-DD');",
									"        if (from <= act_date && to >= act_date){",
									"            flag = true;",
									"            continue;",
									"        }",
									"        else{",
									"            flag = false;",
									"            break;",
									"        }",
									"    }",
									"    if(flag)",
									"        console.log(\"PASS\");",
									"    else",
									"        pm.expect.fail(\"Response contain the records which are older than 7 days\");",
									"});*/",
									"",
									"pm.environment.set(\"pageSize\", jsonData.pageSize);",
									"pm.environment.set(\"totalCount\", jsonData.totalCount);",
									"pm.environment.set(\"totalUnreadCount\", jsonData.totalUnreadCount);",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"senderUsername\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"senderPassword\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "30d66318-1679-4a6a-b79d-7bc1e2e8fdd3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Save chat reply notification - patient1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bad735f3-6a7c-4295-8018-8ee1d14e69e3",
								"exec": [
									"let ld = require('lodash');",
									"",
									"const eventTypes = [\"CHAT_MENTION\", \"CHAT_REPLY\", \"ADDED_TO_CARE_TEAM\", \"REMOVED_FROM_CARE_TEAM\", \"UPDATED_INSURANCE_STATUS\", \"UPDATED_MEDICAL_CLEARANCE_STATUS\", \"COMPLETED_INTAKE_SURVEY\", \"UPDATED_CONTACTS\"];",
									"",
									"const priorities = [\"HIGH\", \"MEDIUM\", \"LOW\"];",
									"",
									"const notificationActions = [\"OPEN_CARE_TEAM\", \"OPEN_PATIENT_PROFILE\", \"OPEN_CONTACTS\", \"OPEN_CHAT\"];",
									"",
									"const source = [\"CHAT\", \"USER\", \"INQUIRY_REFERRAL\", \"CLINICAL_DATA\"];",
									"",
									"pm.environment.set(\"eventType\", ld.sample(eventTypes));",
									"pm.environment.set(\"messageId2\", ld.random(1000000000,9999999999));",
									"pm.environment.set(\"message2\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"priority2\", ld.sample(priorities));",
									"pm.environment.set(\"notificationAction\", ld.sample(notificationActions));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "644bc845-2a15-49ec-a583-dcd3437b3f19",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.notificationExternalId).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"notificationExternalId2\", jsonData.notificationExternalId);",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"receiverUsername\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"receiverPassword\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "51254a91-be8c-4082-b720-c28069a026ce",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"subjectId\":\"{{patientId1}}\",\n    \"senderId\":\"{{senderExternalId}}\",\n    \"eventType\":\"CHAT_REPLY\",\n        \"data\":{\n            \"messageId\": {{messageId2}},\n            \"channelName\": \"Care Team\",\n            \"channelUri\": \"MAUD_CARETEAM_{{patientId1}}\",\n            \"message\": \"{{message2}}\",\n            \"sender\": {\n                \"metadata\": {\n                    \"userType\": \"Provider\",\n                    \"providerType\": \"{{senderType}}\"\n                },\n                \"user_id\": \"{{senderExternalId}}\",\n                \"profile_url\": \"\",\n                \"nickname\": \"{{senderFirstName}} {{senderLastName}}\"\n            }\n        },\n    \"targets\":[\n        {\"id\":\"{{receiverExternalId}}\",\"type\":\"Provider\"}\n    ],\n    \"priority\": \"{{priority2}}\",\n    \"action\": \"OPEN_CHAT\",\n    \"source\": \"CHAT\",\n    \"groupBy\": \"MAUD_CARETEAM_{{patientId1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify added multiple notifications for patient1 care channel",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c734a57-be90-4008-aecf-6ec69dcf69b2",
								"exec": [
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            \"notificationExternalId\": \"\"+pm.environment.get(\"notificationExternalId2\")+\"\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId1\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName1\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName1\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName1\")+\"\"",
									"            },",
									"            \"eventType\": \"CHAT_REPLY\",",
									"            \"senderId\": \"\"+pm.environment.get(\"senderExternalId\")+\"\",",
									"            \"sender\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"senderExternalId\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"senderFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"senderLastName\")+\"\"",
									"            },",
									"            \"data\": {",
									"                \"messageId\": pm.environment.get(\"messageId2\"),",
									"                \"channelName\": \"Care Team\",",
									"                \"channelUri\": \"MAUD_CARETEAM_\"+pm.environment.get(\"patientId1\")+\"\",",
									"                \"message\": \"\"+pm.environment.get(\"message2\")+\"\",",
									"                \"sender\": {",
									"                    \"metadata\": {",
									"                        \"userType\": \"Provider\",",
									"                        \"providerType\": \"\"+pm.environment.get(\"senderType\")+\"\"",
									"                    },",
									"                    \"user_id\": \"\"+pm.environment.get(\"senderExternalId\")+\"\",",
									"                    \"nickname\": \"\"+pm.environment.get(\"senderFirstName\")+\" \"+pm.environment.get(\"senderLastName\")+\"\"",
									"                }",
									"            },",
									"            \"priority\": \"\"+pm.environment.get(\"priority2\")+\"\",",
									"            \"action\": \"OPEN_CHAT\",",
									"            \"source\": \"CHAT\",",
									"            //\"createdAt\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\",",
									"            \"groupBy\": \"MAUD_CARETEAM_\"+pm.environment.get(\"patientId1\")+\"\",",
									"",
									"            \"relatedNotifications\": [",
									"                {",
									"                    \"id\": \"\"+pm.environment.get(\"notificationExternalId1\")+\"\",",
									"                    \"status\": \"NEW\",",
									"                    \"eventType\": \"CHAT_MENTION\"",
									"                }",
									"            ]",
									"        };",
									"",
									"pm.test(\"Validate grouping notification by channel\", function () {",
									"",
									"    //for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[0].createdAt;",
									"        delete jsonData.data[0].updatedAt;",
									"        delete jsonData.data[0].relatedNotifications[0].createdAt;",
									"        delete jsonData.data[0].relatedNotifications[0].updatedAt;",
									"    //}",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"pageSize\", jsonData.pageSize);",
									"pm.environment.set(\"totalCount\", jsonData.totalCount);",
									"pm.environment.set(\"totalUnreadCount\", jsonData.totalUnreadCount);",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"senderUsername\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"senderPassword\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "76fcdd14-4906-425d-bc91-237b7eac40c3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Save chat mention notification - patient2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "24f49113-1086-42b7-91fb-db3cdf698c63",
								"exec": [
									"let ld = require('lodash');",
									"",
									"const eventTypes = [\"CHAT_MENTION\", \"CHAT_REPLY\", \"ADDED_TO_CARE_TEAM\", \"REMOVED_FROM_CARE_TEAM\", \"UPDATED_INSURANCE_STATUS\", \"UPDATED_MEDICAL_CLEARANCE_STATUS\", \"COMPLETED_INTAKE_SURVEY\", \"UPDATED_CONTACTS\"];",
									"",
									"const priorities = [\"HIGH\", \"MEDIUM\", \"LOW\"];",
									"",
									"const notificationActions = [\"OPEN_CARE_TEAM\", \"OPEN_PATIENT_PROFILE\", \"OPEN_CONTACTS\", \"OPEN_CHAT\"];",
									"",
									"const source = [\"CHAT\", \"USER\", \"INQUIRY_REFERRAL\", \"CLINICAL_DATA\"];",
									"",
									"pm.environment.set(\"eventType\", ld.sample(eventTypes));",
									"pm.environment.set(\"messageId3\", ld.random(1000000000,9999999999));",
									"pm.environment.set(\"message3\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"priority3\", ld.sample(priorities));",
									"pm.environment.set(\"notificationAction\", ld.sample(notificationActions));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "00e886d8-c922-4b65-8268-c99e02f23669",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.notificationExternalId).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"notificationExternalId3\", jsonData.notificationExternalId);",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"receiverUsername\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"receiverPassword\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f394caa5-433b-4bf0-a10c-8fae73815719",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"subjectId\":\"{{patientId2}}\",\n    \"senderId\":\"{{senderExternalId}}\",\n    \"eventType\":\"CHAT_MENTION\",\n        \"data\":{\n            \"messageId\": {{messageId3}},\n            \"channelName\": \"Care Team\",\n            \"channelUri\": \"MAUD_CARETEAM_{{patientId2}}\",\n            \"message\": \"{{message3}}\",\n            \"sender\": {\n                \"metadata\": {\n                    \"userType\": \"Provider\",\n                    \"providerType\": \"{{senderType}}\"\n                },\n                \"user_id\": \"{{senderExternalId}}\",\n                \"profile_url\": \"\",\n                \"nickname\": \"{{senderFirstName}} {{senderLastName}}\"\n            }\n        },\n    \"targets\":[\n        {\"id\":\"{{receiverExternalId}}\",\"type\":\"Provider\"}\n    ],\n    \"priority\": \"{{priority3}}\",\n    \"action\": \"OPEN_CHAT\",\n    \"source\": \"CHAT\",\n    \"groupBy\": \"MAUD_CARETEAM_{{patientId2}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify notification details of patient1 and patient2 care channel",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54ff5689-6904-4d06-97d7-9842120422d9",
								"exec": [
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_sub_notification1 = {",
									"            \"notificationExternalId\": \"\"+pm.environment.get(\"notificationExternalId2\")+\"\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId1\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName1\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName1\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName1\")+\"\"",
									"            },",
									"            \"eventType\": \"CHAT_REPLY\",",
									"            \"senderId\": \"\"+pm.environment.get(\"senderExternalId\")+\"\",",
									"            \"sender\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"senderExternalId\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"senderFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"senderLastName\")+\"\"",
									"            },",
									"            \"data\": {",
									"                \"messageId\": pm.environment.get(\"messageId2\"),",
									"                \"channelName\": \"Care Team\",",
									"                \"channelUri\": \"MAUD_CARETEAM_\"+pm.environment.get(\"patientId1\")+\"\",",
									"                \"message\": \"\"+pm.environment.get(\"message2\")+\"\",",
									"                \"sender\": {",
									"                    \"metadata\": {",
									"                        \"userType\": \"Provider\",",
									"                        \"providerType\": \"\"+pm.environment.get(\"senderType\")+\"\"",
									"                    },",
									"                    \"user_id\": \"\"+pm.environment.get(\"senderExternalId\")+\"\",",
									"                    \"nickname\": \"\"+pm.environment.get(\"senderFirstName\")+\" \"+pm.environment.get(\"senderLastName\")+\"\"",
									"                }",
									"            },",
									"            \"priority\": \"\"+pm.environment.get(\"priority2\")+\"\",",
									"            \"action\": \"OPEN_CHAT\",",
									"            \"source\": \"CHAT\",",
									"            //\"createdAt\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\",",
									"            \"groupBy\": \"MAUD_CARETEAM_\"+pm.environment.get(\"patientId1\")+\"\",",
									"",
									"            \"relatedNotifications\": [",
									"                {",
									"                    \"id\": \"\"+pm.environment.get(\"notificationExternalId1\")+\"\",",
									"                    \"status\": \"NEW\",",
									"                    \"eventType\": \"CHAT_MENTION\"",
									"                }",
									"            ]",
									"        };",
									"",
									"let exp_sub_notification2 = {",
									"            \"notificationExternalId\": \"\"+pm.environment.get(\"notificationExternalId3\")+\"\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId2\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName2\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName2\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName2\")+\"\"",
									"            },",
									"            \"eventType\": \"CHAT_MENTION\",",
									"            \"senderId\": \"\"+pm.environment.get(\"senderExternalId\")+\"\",",
									"            \"sender\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"senderExternalId\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"senderFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"senderLastName\")+\"\"",
									"            },",
									"            \"data\": {",
									"                \"messageId\": pm.environment.get(\"messageId3\"),",
									"                \"channelName\": \"Care Team\",",
									"                \"channelUri\": \"MAUD_CARETEAM_\"+pm.environment.get(\"patientId2\")+\"\",",
									"                \"message\": \"\"+pm.environment.get(\"message3\")+\"\",",
									"                \"sender\": {",
									"                    \"metadata\": {",
									"                        \"userType\": \"Provider\",",
									"                        \"providerType\": \"\"+pm.environment.get(\"senderType\")+\"\"",
									"                    },",
									"                    \"user_id\": \"\"+pm.environment.get(\"senderExternalId\")+\"\",",
									"                    \"nickname\": \"\"+pm.environment.get(\"senderFirstName\")+\" \"+pm.environment.get(\"senderLastName\")+\"\"",
									"                }",
									"            },",
									"            \"priority\": \"\"+pm.environment.get(\"priority3\")+\"\",",
									"            \"action\": \"OPEN_CHAT\",",
									"            \"source\": \"CHAT\",",
									"            //\"createdAt\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\",",
									"            \"groupBy\": \"MAUD_CARETEAM_\"+pm.environment.get(\"patientId2\")+\"\"",
									"        };",
									"",
									"pm.test(\"Verify notification for the patient 1\", function () {",
									"",
									"    //for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[1].createdAt;",
									"        delete jsonData.data[1].updatedAt;",
									"        delete jsonData.data[1].relatedNotifications[0].createdAt;",
									"        delete jsonData.data[1].relatedNotifications[0].updatedAt;",
									"    //}",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_sub_notification1: \" + JSON.stringify(exp_sub_notification1).replace(/\\\\/g, ''));",
									"    pm.expect(jsonData.data[1]).to.deep.include(exp_sub_notification1);",
									"});",
									"",
									"pm.test(\"Verify notification for the patient 2\", function () {",
									"",
									"    //for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[1].createdAt;",
									"        delete jsonData.data[1].updatedAt;",
									"        delete jsonData.data[1].relatedNotifications[0].createdAt;",
									"        delete jsonData.data[1].relatedNotifications[0].updatedAt;",
									"    //}",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_sub_notification2: \" + JSON.stringify(exp_sub_notification2).replace(/\\\\/g, ''));",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_sub_notification2);",
									"});",
									"",
									"pm.test(\"Validate notification counter is increased on adding new notification\", function () {",
									"    //pm.expect(jsonData.pageSize).to.equal(pm.environment.get(\"pageSize\"));",
									"    pm.expect(jsonData.totalCount).to.equal(pm.environment.get(\"totalCount\")+1);",
									"    pm.expect(jsonData.totalUnreadCount).to.equal(pm.environment.get(\"totalUnreadCount\")+1);",
									"});",
									"",
									"pm.environment.set(\"pageSize\", jsonData.pageSize);",
									"pm.environment.set(\"totalCount\", jsonData.totalCount);",
									"pm.environment.set(\"totalUnreadCount\", jsonData.totalUnreadCount);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a9574993-c824-4f61-97a0-ff57b6d2e9b5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Read notifications",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "443b60a3-1b33-4eae-b1bb-d1e3b88dd484",
								"exec": [
									"let ld = require('lodash');",
									"",
									"const eventTypes = [\"CHAT_MENTION\", \"CHAT_REPLY\", \"ADDED_TO_CARE_TEAM\", \"REMOVED_FROM_CARE_TEAM\", \"UPDATED_INSURANCE_STATUS\", \"UPDATED_MEDICAL_CLEARANCE_STATUS\", \"COMPLETED_INTAKE_SURVEY\", \"UPDATED_CONTACTS\"];",
									"",
									"const priorities = [\"HIGH\", \"MEDIUM\", \"LOW\"];",
									"",
									"const notificationActions = [\"OPEN_CARE_TEAM\", \"OPEN_PATIENT_PROFILE\", \"OPEN_CONTACTS\", \"OPEN_CHAT\"];",
									"",
									"const source = [\"CHAT\", \"USER\", \"INQUIRY_REFERRAL\", \"CLINICAL_DATA\"];",
									"",
									"pm.environment.set(\"eventType\", ld.sample(eventTypes));",
									"pm.environment.set(\"messageId2\", ld.random(1000000000,9999999999));",
									"pm.environment.set(\"message2\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"priority2\", ld.sample(priorities));",
									"pm.environment.set(\"notificationAction\", ld.sample(notificationActions));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3f18a0f3-9022-4e39-8f40-1006806398df",
								"exec": [
									"var responseText = pm.response.text();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify response message\", function () {",
									"    pm.expect(responseText).to.equal(\"User notification successfully updated 3 records.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "db04daf6-67f3-4aac-940b-d8019322275d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"notificationExternalIds\": [\n    \"{{notificationExternalId1}}\",\n    \"{{notificationExternalId2}}\",\n    \"{{notificationExternalId3}}\"\n  ],\n  \"status\": \"READ\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify notification count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "58e0668e-8219-494a-97b6-9c6210fed8fa",
								"exec": [
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Validate notification counter is decreased after read\", function () {",
									"    pm.expect(jsonData.totalCount).to.equal(pm.environment.get(\"totalCount\"));",
									"    pm.expect(jsonData.totalUnreadCount).to.equal(pm.environment.get(\"totalUnreadCount\")-2);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "544e0876-0711-4846-b15f-57e03dc5e0e1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0b9bcec0-38a9-4f2c-9ee2-ff157ef11809",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unread notifications",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cc9a65fa-572f-4856-aea9-7351e1d2ffa9",
								"exec": [
									"let ld = require('lodash');",
									"",
									"const eventTypes = [\"CHAT_MENTION\", \"CHAT_REPLY\", \"ADDED_TO_CARE_TEAM\", \"REMOVED_FROM_CARE_TEAM\", \"UPDATED_INSURANCE_STATUS\", \"UPDATED_MEDICAL_CLEARANCE_STATUS\", \"COMPLETED_INTAKE_SURVEY\", \"UPDATED_CONTACTS\"];",
									"",
									"const priorities = [\"HIGH\", \"MEDIUM\", \"LOW\"];",
									"",
									"const notificationActions = [\"OPEN_CARE_TEAM\", \"OPEN_PATIENT_PROFILE\", \"OPEN_CONTACTS\", \"OPEN_CHAT\"];",
									"",
									"const source = [\"CHAT\", \"USER\", \"INQUIRY_REFERRAL\", \"CLINICAL_DATA\"];",
									"",
									"pm.environment.set(\"eventType\", ld.sample(eventTypes));",
									"pm.environment.set(\"messageId2\", ld.random(1000000000,9999999999));",
									"pm.environment.set(\"message2\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"priority2\", ld.sample(priorities));",
									"pm.environment.set(\"notificationAction\", ld.sample(notificationActions));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f508625b-4762-4035-8423-3bca61b3eba6",
								"exec": [
									"var responseText = pm.response.text();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify response message\", function () {",
									"    pm.expect(responseText).to.equal(\"User notification successfully updated 1 records.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f80e6f26-e808-41c7-8fd6-90c3d34bc5ab",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"notificationExternalIds\": [\n    \"{{notificationExternalId1}}\"\n  ],\n  \"status\": \"UNREAD\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify notification count after unread",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "37703681-f56d-49d1-a3c8-b8d119cfe3dc",
								"exec": [
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Validate notification counter is decreased after read\", function () {",
									"    pm.expect(jsonData.totalCount).to.equal(pm.environment.get(\"totalCount\"));",
									"    pm.expect(jsonData.totalUnreadCount).to.equal(pm.environment.get(\"totalUnreadCount\")-1);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6fe0f569-605c-477b-9093-419774f41097",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "d0fa1ccf-f29b-4218-9a1d-3ec12656d546",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cbbbe4a3-6e09-46d9-b7c4-98f4ca03cb84",
						"type": "text/javascript",
						"exec": [
							"if(pm.environment.name === \"qa\"){",
							"    pm.environment.set(\"senderExternalId\", \"80f2dea3-0c9c-4a97-b30d-0dbfa6b31cc1\");",
							"    pm.environment.set(\"senderUsername\", \"balakrishna+as1@equip.health\");",
							"    pm.environment.set(\"senderPassword\", \"Equip@1234\");",
							"    pm.environment.set(\"senderFirstName\", \"Balakrishna\");",
							"    pm.environment.set(\"senderLastName\", \"AS1\");",
							"    pm.environment.set(\"senderType\", \"Admissions Specialist\");",
							"    pm.environment.set(\"receiverExternalId\", \"0a113848-7671-42b2-bb7c-82a980a4393f\");",
							"    pm.environment.set(\"receiverFirstName\", \"Bala\");",
							"    pm.environment.set(\"receiverLastName\", \"Deema\");",
							"    pm.environment.set(\"receiverType\", \"Patient Service Representative\");",
							"    pm.environment.set(\"receiverUsername\", \"balakrishna+psr@equip.health\");",
							"    pm.environment.set(\"receiverPassword\", \"Equip@1234\");",
							"}else{",
							"    pm.environment.set(\"senderExternalId\", \"aa96a8bb-f124-4aa2-9098-d58826909840\");",
							"    pm.environment.set(\"senderUsername\", \"balakrishna@equip.health\");",
							"    pm.environment.set(\"senderPassword\", \"Equip@1234\");",
							"    pm.environment.set(\"senderFirstName\", \"Bala\");",
							"    pm.environment.set(\"senderLastName\", \"Deema\");",
							"    pm.environment.set(\"senderType\", \"Patient Service Representative\");",
							"    pm.environment.set(\"receiverExternalId\", \"61e1108d-a4cd-4f4d-92bc-eb214e8594c6\");",
							"    pm.environment.set(\"receiverFirstName\", \"Balakrishna\");",
							"    pm.environment.set(\"receiverLastName\", \"Deema\");",
							"    pm.environment.set(\"receiverType\", \"Dietitian\");",
							"    pm.environment.set(\"receiverUsername\", \"balakrishna+dietitian@equip.health\");",
							"    pm.environment.set(\"receiverpassword\", \"Equip@1234\");",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "268c3515-843b-4505-945e-ddd9d6527704",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Care team add and remove user notifications",
			"item": [
				{
					"name": "Add Patient Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "44fbea38-64f0-4af4-b37f-904d38f7d219",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"patientId\", jsonData.id);",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b1531743-2b2b-4a31-8284-691f56af9733",
								"exec": [
									"let ld = require('lodash');",
									"",
									"let gendersList = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"let pronounsList = [",
									"    \"He/Him/His\",",
									"    \"She/Her/Hers\",",
									"    \"They/Them/Theirs\",",
									"    \"Other\"",
									"];",
									"",
									"let ethnicitiesList = [",
									"    \"Asian\",",
									"    \"Black/African American\",",
									"    \"White/Caucasian\",",
									"    \"Hispanic/Latinx\",",
									"    \"Native American, Indian American, or Alaska Native\",",
									"    \"Native Hawaiian or other Pacific Islander\",",
									"    \"Middle Eastern or North African\",",
									"    \"Prefer not to answer\",",
									"    \"Other\"",
									"];",
									"",
									"let languagesList = [",
									"    \"English\",",
									"    \"Spanish\",",
									"    \"Chinese\",",
									"    \"French\",",
									"    \"Tagalog\",",
									"    \"Vietnamese\",",
									"    \"Korean\",",
									"    \"German\",",
									"    \"Russian\",",
									"    \"Italian\",",
									"    \"Portuguese\",",
									"    \"Polish\",",
									"    \"Japanese\",",
									"    \"Persian\",",
									"    \"Greek\",",
									"    \"Serbo-Croatian\",",
									"    \"Armenian\",",
									"    \"Yiddish\",",
									"    \"American Sign Language (ASL)\"",
									"];",
									"",
									"let sexList = [",
									"    \"Male\",",
									"    \"Female\"",
									"];",
									"",
									"let timezonesList = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\"",
									"];",
									"",
									"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"patientFirstName\", firstName);",
									"pm.environment.set(\"patientLastName\", lastName);",
									"pm.environment.set(\"patientEmail\", email);",
									"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientChosenName\", chosenName);",
									"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
									"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
									"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientCountry\", \"US\");",
									"pm.environment.set(\"patientZip\", zip.toString());",
									"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
									"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
									"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientSex\", ld.sample(sexList));",
									"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
									"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d4111193-4c6f-4c25-b473-34e7367e0f3f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4fb4e496-2909-4a98-bf9e-fd1670dbd216",
								"exec": [
									"let notificationsList = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"notificationsList\", notificationsList);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "85af85f6-3efa-40b1-8c5b-c3efb5c8cc9a",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "180e0ca5-0463-4e41-99d6-61890354faa3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a care team by self - User1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6dc426a7-dd10-49d2-aa3a-8b4b38ad3179",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "341fef74-3491-4d61-a0e2-f53cc7687021",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set(\"careTeamExternalId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9795250e-236f-482a-9ea4-f616b0410847",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientExternalId\": \"{{patientId}}\",\n    \"type\": \"care\",\n    \"providers\": [\n        \"{{UserId1}}\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/care-team",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"care-team"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify notification is not generated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bcbb602d-01ba-4219-9e95-96ad7ac4ecb7",
								"exec": [
									"let response = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify notification record is not created if the user add to the care team by them self\", function () {",
									"    if(JSON.stringify(pm.environment.get(\"notificationsList\")) === JSON.stringify(response))",
									"        console.log(\"PASS\");",
									"    else",
									"        pm.expect.fail(\"Notification is created\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "49487c58-7a98-4b54-b0cd-3699625ad06f",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2a1d709e-3716-4d1e-9361-0f4341394d0e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User2 to the care team",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9ef84881-c428-4fc3-b3fd-3769f84cc006",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "82d55c69-6d89-4d49-9237-dffcfdaab463",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId2_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId2_password\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "19deb622-ee42-41be-bc71-fc5ecae9caea",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"providers\": [\n        \"{{UserId1}}\",\n        \"{{UserId2}}\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/care-team/{{careTeamExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"care-team",
								"{{careTeamExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify ADDED_TO_CARE_TEAM notification is generated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d11d90d-e3f7-4283-b2a1-dd3eb3f85465",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"ADDED_TO_CARE_TEAM\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId1\")+\"\",",
									"            \"sender\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"UserId1\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname1\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname1\")+\"\"",
									"            },",
									"            \"data\": {",
									"                \"dob\": \"\"+pm.environment.get(\"patientDateOfBirth\")+\"\",",
									"                \"care_team_name\": \"Care Team\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_CARE_TEAM\",",
									"            \"source\": \"USER\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5bd871fc-7eb1-4f2b-8b14-eae58872aa71",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "132fdcbe-39cb-4202-92c4-eee9f1b8f9fc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove user2 from CareTeam and add user3",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4c5c37b0-1bab-4233-8510-bf84f9d84b0c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c5f9e774-619d-4f06-a818-1008d6bb8f2c",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId2_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId2_password\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "360e4b01-aa59-49b1-9284-75dcea3133de",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"providers\": [\n        \"{{UserId1}}\",\n        \"{{UserId3}}\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/care-team/{{careTeamExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"care-team",
								"{{careTeamExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify REMOVE_TO_CARE_TEAM notification is trigger to User2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2fd37395-42d6-4bfd-97f2-ab3131d9c26e",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"REMOVED_FROM_CARE_TEAM\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId1\")+\"\",",
									"            \"sender\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"UserId1\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname1\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname1\")+\"\"",
									"            },",
									"            \"data\": {",
									"                \"dob\": \"\"+pm.environment.get(\"patientDateOfBirth\")+\"\",",
									"                \"care_team_name\": \"Care Team\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_CARE_TEAM\",",
									"            \"source\": \"USER\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6911ccd8-a62d-4ea5-8476-94a571866418",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "03b0857f-a9d4-46a9-b043-b2216decfcd0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "124382ba-49ef-42e1-a351-4cc812a67d6f",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bb447354-6691-475a-a6fb-c4f49a20ce74",
						"type": "text/javascript",
						"exec": [
							"",
							"if(pm.environment.name === \"qa\"){",
							"    pm.environment.set(\"UserId1\", \"80f2dea3-0c9c-4a97-b30d-0dbfa6b31cc1\")",
							"    pm.environment.set(\"UserId1_username\", \"balakrishna+as1@equip.health\");",
							"    pm.environment.set(\"UserId1_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname1\", \"Balakrishna\");",
							"    pm.environment.set(\"UserLastname1\", \"AS1\");",
							"    pm.environment.set(\"UserType1\", \"Admissions Specialist\");",
							"",
							"    pm.environment.set(\"UserId2\", \"af2215db-647f-4b20-8f6a-f2f3db0ce5ee\")",
							"    pm.environment.set(\"UserId2_username\", \"maud_scheduling+psr@equip.health\");",
							"    pm.environment.set(\"UserId2_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname2\", \"Maud\");",
							"    pm.environment.set(\"UserLastname2\", \"Scheduling\");",
							"    pm.environment.set(\"UserType2\", \"Patient Service Representative\");",
							"",
							"    pm.environment.set(\"UserId3\", \"0a113848-7671-42b2-bb7c-82a980a4393f\")",
							"    pm.environment.set(\"UserId3_username\", \"balakrishna+psr@equip.health\");",
							"    pm.environment.set(\"UserId3_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname3\", \"Bala\");",
							"    pm.environment.set(\"UserLastname3\", \"Deema\");",
							"    pm.environment.set(\"UserType3\", \"Patient Service Representative\");",
							"",
							"    pm.environment.set(\"UserId4\", \"aa2cef2d-fe3a-4f72-9a92-e6b114c3c668\")",
							"    pm.environment.set(\"UserId4_username\", \"balakrishna+as2@equip.health\");",
							"    pm.environment.set(\"UserId4_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname4\", \"Balakrishna\");",
							"    pm.environment.set(\"UserLastname4\", \"AS2\");",
							"    pm.environment.set(\"UserType4\", \"Admissions Specialist\");",
							"}else{",
							"    pm.environment.set(\"UserId1\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\")",
							"    pm.environment.set(\"UserId1_username\", \"balakrishna+admissionspecialist@equip.health\");",
							"    pm.environment.set(\"UserId1_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname1\", \"Bala\");",
							"    pm.environment.set(\"UserLastname1\", \"Deem\");",
							"",
							"    pm.environment.set(\"UserId2\", \"61e1108d-a4cd-4f4d-92bc-eb214e8594c6\")",
							"    pm.environment.set(\"UserId2_username\", \"balakrishna+dietitian@equip.health\");",
							"    pm.environment.set(\"UserId2_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname2\", \"Balakrishna\");",
							"    pm.environment.set(\"UserLastname2\", \"Deema\");",
							"",
							"    pm.environment.set(\"UserId3\", \"a4684d41-f12f-4e96-af65-9ff44d723d61\")",
							"    pm.environment.set(\"UserId3_username\", \"maud_scheduling+psr@equip.health\");",
							"    pm.environment.set(\"UserId3_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname3\", \"Maud\");",
							"    pm.environment.set(\"UserLastname3\", \"Scheduling\");",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "01ee1ee9-639b-40f1-bb06-f1e7d537a62c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Admission Specialist Insurance status update notifications",
			"item": [
				{
					"name": "Add Patient Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "834251dc-0e29-4029-9667-e5d1f38f1ef4",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"patientId\", jsonData.id);",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d2c88b27-32cd-4bc1-85de-c77f6621ae8f",
								"exec": [
									"let ld = require('lodash');",
									"",
									"let gendersList = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"let pronounsList = [",
									"    \"He/Him/His\",",
									"    \"She/Her/Hers\",",
									"    \"They/Them/Theirs\",",
									"    \"Other\"",
									"];",
									"",
									"let ethnicitiesList = [",
									"    \"Asian\",",
									"    \"Black/African American\",",
									"    \"White/Caucasian\",",
									"    \"Hispanic/Latinx\",",
									"    \"Native American, Indian American, or Alaska Native\",",
									"    \"Native Hawaiian or other Pacific Islander\",",
									"    \"Middle Eastern or North African\",",
									"    \"Prefer not to answer\",",
									"    \"Other\"",
									"];",
									"",
									"let languagesList = [",
									"    \"English\",",
									"    \"Spanish\",",
									"    \"Chinese\",",
									"    \"French\",",
									"    \"Tagalog\",",
									"    \"Vietnamese\",",
									"    \"Korean\",",
									"    \"German\",",
									"    \"Russian\",",
									"    \"Italian\",",
									"    \"Portuguese\",",
									"    \"Polish\",",
									"    \"Japanese\",",
									"    \"Persian\",",
									"    \"Greek\",",
									"    \"Serbo-Croatian\",",
									"    \"Armenian\",",
									"    \"Yiddish\",",
									"    \"American Sign Language (ASL)\"",
									"];",
									"",
									"let sexList = [",
									"    \"Male\",",
									"    \"Female\"",
									"];",
									"",
									"let timezonesList = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\"",
									"];",
									"",
									"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"patientFirstName\", firstName);",
									"pm.environment.set(\"patientLastName\", lastName);",
									"pm.environment.set(\"patientEmail\", email);",
									"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientChosenName\", chosenName);",
									"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
									"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
									"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientCountry\", \"US\");",
									"pm.environment.set(\"patientZip\", zip.toString());",
									"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
									"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
									"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientSex\", ld.sample(sexList));",
									"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
									"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "af4730ea-2fab-4057-9e3f-5ca32ec072ba",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add coverage Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b45d83b6-8339-4ae5-a0b2-c65458f5ef70",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"",
									"",
									"let payor_payor_program_map = [{ \"payor_name\": \"AIDS Healthcare Foundation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"ATRIO Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Aetna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Aetna\"] },",
									"{ \"payor_name\": \"Affinity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"AgeRight Advantage Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"AgeWell New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Alameda Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Alignment Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"AltaMed PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"AmeriHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Amida Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Anthem\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Arkansas Blue Cross and Blue Shield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Aspire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Asuris Northwest Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Atlanticare LIFE Connection\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Auxilio Salud Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Avera Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Bienvivir Senior Health Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross Blue Shield of Arizona\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross Blue Shield of Massachusetts\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross Blue Shield of Michigan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross Blue Shield of North Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Alabama\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Illinois\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Louisiana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Minnesota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Mississippi\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Montana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Nebraska\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of North Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Oklahoma\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Rhode Island\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Vermont\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Wyoming\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross of Idaho Health Service, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Shield of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
									"{ \"payor_name\": \"BlueCross BlueShield of South Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"BlueCross BlueShield of Tennessee\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Brand New Day\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Brandman Centers for Senior Care (BCSC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"BridgeSpan Health Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Bright Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CHRISTUS Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CalOptima\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CalViva Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Care N' Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CareFirst BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CareOregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Cascade Health Alliance, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Catholic Health LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CenCal Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Centene\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Center for Elders Independence\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CenterLight Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Centers Plan for Healthy Living (CPHL)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Centers for Medicare and Medicaid Services (CMS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Central California Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Central Health Plan of California, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Chinese Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Cigna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Cigna\"] },",
									"{ \"payor_name\": \"Clover Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Community Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Community First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Community Health Choice, Inc. (CHC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Community Health Group\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Community Health Plan of Washington (CHPW)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Complete Senior Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"ConnectiCare, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Contra Costa Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Cook Children's Health Plan (CCHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Crystal Run Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"DAKOTACARE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Dean Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Dell Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Devoted Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Driscoll Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"EMI Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Eddy SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"El Paso First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"ElderONE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Elderplan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Excellus BlueCross BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Fallon Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"FamilyHealth Center for Older Adults (PACE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"First Medical Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"FirstCare Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Fresno PACE for Seniors\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"GHI (Emblem Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Gary and Mary West PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Geisinger Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Gold Coast Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Golden State Medicare Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"HIP/Emblem Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Harvard Pilgrim Health Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Health New England, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Health Plan of San Joaquin\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Health Plan of San Mateo\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Healthfirst\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Highmark BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Highmark Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Horizon Blue Cross Blue Shield of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Horizon BCBS\"] },",
									"{ \"payor_name\": \"Humana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"ICHS PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Imperial Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Independence Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Independent Health Association, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Inland Empire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"InnovAge\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"InnovaCare Health Solutions\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Inspira LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Inter Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Kaiser Foundation Health Plan (California)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Kaiser Northern CA - Central Valley\", \"Kaiser Northern CA - Diablo\", \"Kaiser Northern CA - Fresno\", \"Kaiser Northern CA - San Francisco\", \"Kaiser Northern CA - South San Francisco\", \"Kaiser Northern CA - Greater Southern Alameda\", \"Kaiser Northern CA - East Bay\", \"Kaiser Northern CA - Marin/Sonoma\", \"Kaiser Northern CA - Redwood City\", \"Kaiser Northern CA - Roseville\", \"Kaiser Northern CA - Sacramento\", \"Kaiser Northern CA - South Sacramento\", \"Kaiser Northern CA - San Jose\", \"Kaiser Northern CA - Santa Clara\"] },",
									"{ \"payor_name\": \"Kaiser Foundation Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- Other\", \"payor_program_name\": [\"Orange County\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Kalos Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"KelseyCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Kern Health Systems, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"L.A. Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"LIFE St. Francis\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"LIFE at Lourdes, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Lasso Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"LifeWise Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Longevity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Lutheran Senior LIFE at Jersey City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"MAPFRE Puerto Rico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"MVP Health Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Magellan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"MediExcel Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Medicaid\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Medical Card System, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Medicare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Memorial Hermann Health Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"MetroPlus Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Miami Children’s Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Moda Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"MODA\", \"Optum Cares\"] },",
									"{ \"payor_name\": \"Molina Healthcare\", \"payor_program_name\": [\"Optum Standard\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Mutual of Omaha Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"NY Hotel Trades Council and Hotel Association of NYC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Neighborhood Health Plan of Rhode Island, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"No Insurance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"On Lok Lifeways\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Optum\", \"payor_program_name\": [\"Optum\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Oscar Insurance Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Other\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Oxford\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"PACE CNY\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"PacificSource Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"PacificSource - Medicaid\", \"PacificSource - Navigator\", \"PacificSource - SmartChoice\", \"PacificSource - Voyager\"] },",
									"{ \"payor_name\": \"Parkland Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Partners Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Partnership HealthPlan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Partnership Health Plan\"] },",
									"{ \"payor_name\": \"Physicians Health Plan of Northern Indiana, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Piedmont Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Plan Medico Bella Vista\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Plan de Salud Menonita\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Premera Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Presbyterian Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Priority Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Private Pay\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"ProCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Prominence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Providence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - Standard\"] },",
									"{ \"payor_name\": \"Redwood Coast PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Regence BlueCross BlueShield of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Regence BlueCross BlueShield of Utah\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Regence BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Regence BlueShield of Idaho\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"RiverSpring Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Ryder Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"SCAN Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"SIHO Holding, LLC dba SIHO Insurance Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"SIMNSA Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Samaritan Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"San Diego PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"San Francisco Health Plan (SFHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Santa Clara County dba Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Santa Clara Family Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Santa Fe Employe's Hospital Association-Coast Lines\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Scott and White Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Scripps Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Seaside Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"SelectHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Sendero Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Senior Whole Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Sentara Health Plans, Inc. (fka Optima Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Sharp Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Silver Star Health Network\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"St. Paul's PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Stanford Health Care Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Stockton PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Sunrise Advantage Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Sutter Health Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
									"{ \"payor_name\": \"Sutter SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Texas Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Total Senior Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Triple-S Management Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"True Health New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Tufts Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"UCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"UMR\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"UPMC Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Umpqua Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"UnitedHealthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
									"{ \"payor_name\": \"Univera Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"VNSNY CHOICE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"VillageCareMAX\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Vitality Health Plan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"WEA Trust\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"WellCare Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of Iowa\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of South Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Western Health Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
									"{ \"payor_name\": \"Western Oregon Advanced Health, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Yamhill Community Care Organization\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] }];",
									"",
									"randomPayor = ld.sample(payor_payor_program_map);",
									"randomPayorName = randomPayor.payor_name;",
									"randomPayorProgramName = ld.sample(randomPayor.payor_program_name);",
									"",
									"console.log(randomPayorName);",
									"console.log(randomPayorProgramName);",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let patientRelationList = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"pm.environment.set(\"groupId\", \"GRP12345689\");",
									"pm.environment.set(\"subscriberId\", \"SUB12345689\");",
									"pm.environment.set(\"payor\", randomPayorName);",
									"pm.environment.set(\"payorProgram\", randomPayorProgramName);",
									"pm.environment.set(\"stateCode\", ld.sample(statesList));",
									"pm.environment.set(\"coverageStartDate\", moment().format('YYYY-MM-DD'));",
									"pm.environment.set(\"coverageEndDate\", moment().add(6, 'months').format('YYYY-MM-DD'));",
									"pm.environment.set(\"alternativeId\", \"ALT12345689\");",
									"pm.environment.set(\"providerServicesPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientRelationToSubscriber\", ld.sample(patientRelationList));",
									"pm.environment.set(\"subscriberFirstName\", firstName);",
									"pm.environment.set(\"subscriberLastName\", lastName);",
									"pm.environment.set(\"subscriberDateOfBirth\", moment().subtract(10, 'years').format('YYYY-MM-DD'));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2612c34f-235b-40bc-ae99-38bb2d2e176e",
								"exec": [
									"var response_text = pm.response.text();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"// pm.test(\"Verify CoverageExternalId is generated\", function () {",
									"//     pm.expect(jsonData.id).length.greaterThan(0);",
									"// });",
									"",
									"pm.environment.set(\"coverageExternalId\", response_text);",
									"console.log(\"response_text\" + response_text)"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5645efd9-7a69-41cb-abc4-81462c56590c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payor\": \"{{payor}}\",\n    \"payorProgram\": \"{{payorProgram}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{groupId}}\",\n    \"subscriberId\": \"{{subscriberId}}\",\n    \"stateCode\": \"{{stateCode}}\",\n    \"startDate\": \"{{coverageStartDate}}\",\n    \"endDate\": \"{{coverageEndDate}}\",\n    \"alternativeId\": \"{{alternativeId}}\",\n    \"customPayorName\": \"\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber}}\",\n    \"patientRelationToSubscriber\": \"{{patientRelationToSubscriber}}\",\n    \"subscriberFirstName\": \"{{subscriberFirstName}}\",\n    \"subscriberLastName\": \"{{subscriberLastName}}\",\n    \"subscriberDateOfBirth\": \"{{subscriberDateOfBirth}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"coverages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add episode",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "dff6738f-fb82-4276-a1e6-7ac8e3197db2",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"let episodeStatusList = [\"New\"];",
									"",
									"let treatmentProgramList = [\"Equip treatment\", \"Freeform\", \"Relapse prevention\"];",
									"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
									"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
									"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
									"",
									"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
									"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
									"",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
									"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
									"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
									"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
									"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
									"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
									"",
									"//Authorization details",
									"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
									"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
									"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Medical clearance details",
									"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
									"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Insurance verification details",
									"pm.environment.set(\"insuranceVerificationStatus1\", \"Not ready\");",
									"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3bc3f0f8-10e8-4a5f-912a-73c6e3b5ac81",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"//set episodeExternalId to be used in next request",
									"pm.environment.set(\"episodeExternalId\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "56d57d24-3e22-40e3-a404-b6e6e2477f53",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus1}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get episode after add Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6191874b-73ac-429d-8fda-0651528470c4",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"//set externalId to be used in next request",
									"pm.environment.set(\"cdsExternalId\", jsonData[0]['authorizationDetails'][0]['externalId']);",
									"// pm.environment.set(\"pausedDetailsExternalId\", jsonData[0]['pausedDetails'][0]['externalId']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d9efc3d1-f768-47ff-b567-de8161c9fcfd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a care team",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "41f0799a-d3df-4488-b259-ae300f0d350e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9b2a6f21-262e-40c4-9a43-f42581f0fc7d",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set(\"careTeamExternalId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a3f9366e-719c-448e-a840-cbceefadb4bb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientExternalId\": \"{{patientId}}\",\n    \"type\": \"care\",\n    \"providers\": [\n        \"{{UserId1}}\",\n        \"{{UserId2}}\",\n        \"{{UserId3}}\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/care-team",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"care-team"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "955abf59-13dd-4aa5-ad9c-8b356007e1a8",
								"exec": [
									"let notificationsList = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"notificationsList\", notificationsList);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "21c9dcc0-5e2f-4aa9-a461-08899c7ea5b6",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "47979d8a-915e-402a-b515-2c0b97c64058",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Insurance status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c0c9b69c-316d-4f7d-b276-3597a58e894d",
								"exec": [
									"",
									"",
									"pm.environment.set(\"insuranceVerificationStatus2\", \"Approved\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7b8b27f3-83fd-42bb-bb22-168bb3673632",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"//set episodeExternalId to be used in next request",
									"//pm.environment.set(\"episodeExternalId\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0c8b9f68-da14-47e8-9720-b6540ce36eef",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus2}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes",
								"{{episodeExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify notification is not generated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6fad3d10-2753-4153-8e63-b056ced29f5c",
								"exec": [
									"let response = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify notification record is not created if the user add to the care team by them self\", function () {",
									"    if(JSON.stringify(pm.environment.get(\"notificationsList\")) === JSON.stringify(response))",
									"        console.log(\"PASS\");",
									"    else",
									"        pm.expect.fail(\"Notification is created\");",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId2_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId2_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "60743ecc-de64-42f0-81d3-7649a5060512",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4d22d767-bb6e-41bc-b3ff-1ebc7ce4c1ae",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Insurance status Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "129db286-9aaa-4c69-a8f6-898f15d82feb",
								"exec": [
									"",
									"",
									"pm.environment.set(\"insuranceVerificationStatus3\", \"Pre-authorization in progress\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6779af45-1386-4d18-8597-a2526581c611",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"//set episodeExternalId to be used in next request",
									"//pm.environment.set(\"episodeExternalId\", pm.response.text());",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "51408c02-cb92-4ff4-86e8-a652c0bcc4c8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus3}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes",
								"{{episodeExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify UPDATED_INSURANCE_STATUS notification is generated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c740dc6-cb82-4153-9223-2eb1a965d060",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_INSURANCE_STATUS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"            \"sender\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname2\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname2\")+\"\"",
									"            },",
									"            \"data\": {",
									"                \"new_status\": \"\"+pm.environment.get(\"insuranceVerificationStatus3\")+\"\",",
									"                \"old_status\": \"\"+pm.environment.get(\"insuranceVerificationStatus2\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"INQUIRY_REFERRAL\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId2_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId2_password\"));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8fa1e473-c5fa-4486-baac-e7247234e93c",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3e37b583-58f3-46de-b1a0-df42816c45b3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a admissions team",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0804060d-484a-4c44-8209-114811260706",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "844a0794-4134-4eee-9146-d11c7ad1c3e4",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set(\"admissionTeamExternalId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "55efea58-f3d8-4f57-a160-55c4dfa4e7a9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientExternalId\": \"{{patientId}}\",\n    \"type\": \"admissions\",\n    \"providers\": [\n        \"{{UserId1}}\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/care-team",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"care-team"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Insurance status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "609e0769-91ca-4da0-95dd-2dc73ea4add8",
								"exec": [
									"",
									"",
									"pm.environment.set(\"insuranceVerificationStatus4\", \"Ready for review\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8a0d443b-750f-4312-936d-f60154b31145",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b989cd86-93e1-4dbe-975d-4b481d83c96b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus4}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes",
								"{{episodeExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify UPDATED_INSURANCE_STATUS notification is generated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1675c0e1-1ca4-475a-b7fa-a9cdc16e8140",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_INSURANCE_STATUS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"            \"sender\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname2\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname2\")+\"\"",
									"            },",
									"            \"data\": {",
									"                \"new_status\": \"\"+pm.environment.get(\"insuranceVerificationStatus4\")+\"\",",
									"                \"old_status\": \"\"+pm.environment.get(\"insuranceVerificationStatus3\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"INQUIRY_REFERRAL\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e2f203e9-1a3e-43b7-902a-2dbabae53ca1",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "eda77de8-3179-45ae-a482-d860e7dd6235",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update admission team Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "555888e7-3397-4162-984e-81ff241cf79a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b57b1855-cfda-4773-985f-e3dc1fcec6f7",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId3_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId3_password\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "63d894c5-3ac8-4bea-94ac-23be1be39645",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"providers\": [\n        \"{{UserId2}}\",\n        \"{{UserId3}}\",\n        \"{{UserId4}}\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/care-team/{{admissionTeamExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"care-team",
								"{{admissionTeamExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Insurance status Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d219d97b-af49-4c2b-8a09-48d06cb3ede4",
								"exec": [
									"",
									"",
									"pm.environment.set(\"insuranceVerificationStatus5\", \"Approved\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "39e47ea3-a436-4d3b-a78e-80bf72a4e7df",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4bf68b20-ff58-41b0-a7eb-5ded684c3c5b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus5}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes",
								"{{episodeExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify UPDATED_INSURANCE_STATUS notification is generated Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e290fb3-4ed6-4954-9a60-ddcb06abc6be",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_INSURANCE_STATUS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
									"            \"sender\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname3\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname3\")+\"\"",
									"            },",
									"            \"data\": {",
									"                \"new_status\": \"\"+pm.environment.get(\"insuranceVerificationStatus5\")+\"\",",
									"                \"old_status\": \"\"+pm.environment.get(\"insuranceVerificationStatus4\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"INQUIRY_REFERRAL\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId4_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId4_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7999dc6e-52bc-47a4-b4e1-b6f9981800d3",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "de654e4a-5147-45fd-87d0-8a38fd14a5b4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify UPDATED_INSURANCE_STATUS notification is generated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d710748-fe78-419f-8aff-e6dbded93379",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_INSURANCE_STATUS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
									"            \"sender\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname3\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname3\")+\"\"",
									"            },",
									"            \"data\": {",
									"                \"new_status\": \"\"+pm.environment.get(\"insuranceVerificationStatus5\")+\"\",",
									"                \"old_status\": \"\"+pm.environment.get(\"insuranceVerificationStatus4\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"INQUIRY_REFERRAL\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId4_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId4_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a7b36086-33a1-42ff-aef3-9d075c0b4d85",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5c6c5fe6-6d46-4a50-a48a-7e853bde08e0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "cc278907-3caa-47a9-8e38-258198a8aa85",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e76722e9-7101-4165-a620-d02b98dbaf5f",
						"type": "text/javascript",
						"exec": [
							"",
							"if(pm.environment.name === \"qa\"){",
							"    pm.environment.set(\"UserId1\", \"80f2dea3-0c9c-4a97-b30d-0dbfa6b31cc1\")",
							"    pm.environment.set(\"UserId1_username\", \"balakrishna+as1@equip.health\");",
							"    pm.environment.set(\"UserId1_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname1\", \"Balakrishna\");",
							"    pm.environment.set(\"UserLastname1\", \"AS1\");",
							"    pm.environment.set(\"UserType1\", \"Admissions Specialist\");",
							"",
							"    pm.environment.set(\"UserId2\", \"af2215db-647f-4b20-8f6a-f2f3db0ce5ee\")",
							"    pm.environment.set(\"UserId2_username\", \"maud_scheduling+psr@equip.health\");",
							"    pm.environment.set(\"UserId2_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname2\", \"Maud\");",
							"    pm.environment.set(\"UserLastname2\", \"Scheduling\");",
							"    pm.environment.set(\"UserType2\", \"Patient Service Representative\");",
							"",
							"    pm.environment.set(\"UserId3\", \"0a113848-7671-42b2-bb7c-82a980a4393f\")",
							"    pm.environment.set(\"UserId3_username\", \"balakrishna+psr@equip.health\");",
							"    pm.environment.set(\"UserId3_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname3\", \"Bala\");",
							"    pm.environment.set(\"UserLastname3\", \"Deema\");",
							"    pm.environment.set(\"UserType3\", \"Patient Service Representative\");",
							"",
							"    pm.environment.set(\"UserId4\", \"aa2cef2d-fe3a-4f72-9a92-e6b114c3c668\")",
							"    pm.environment.set(\"UserId4_username\", \"balakrishna+as2@equip.health\");",
							"    pm.environment.set(\"UserId4_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname4\", \"Balakrishna\");",
							"    pm.environment.set(\"UserLastname4\", \"AS2\");",
							"    pm.environment.set(\"UserType4\", \"Admissions Specialist\");",
							"}else{",
							"    pm.environment.set(\"UserId1\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\")",
							"    pm.environment.set(\"UserId1_username\", \"balakrishna+admissionspecialist@equip.health\");",
							"    pm.environment.set(\"UserId1_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname1\", \"Bala\");",
							"    pm.environment.set(\"UserLastname1\", \"Deem\");",
							"    pm.environment.set(\"UserType1\", \"Admissions Specialist\");",
							"",
							"    pm.environment.set(\"UserId2\", \"61e1108d-a4cd-4f4d-92bc-eb214e8594c6\")",
							"    pm.environment.set(\"UserId2_username\", \"balakrishna+dietitian@equip.health\");",
							"    pm.environment.set(\"UserId2_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname2\", \"Balakrishna\");",
							"    pm.environment.set(\"UserLastname2\", \"Deema\");",
							"    pm.environment.set(\"UserType2\", \"Dietitian\");",
							"",
							"    pm.environment.set(\"UserId3\", \"a4684d41-f12f-4e96-af65-9ff44d723d61\")",
							"    pm.environment.set(\"UserId3_username\", \"maud_scheduling+psr@equip.health\");",
							"    pm.environment.set(\"UserId3_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname3\", \"Maud\");",
							"    pm.environment.set(\"UserLastname3\", \"Scheduling\");",
							"    pm.environment.set(\"UserType3\", \"Patient Service Representative\");",
							"",
							"    pm.environment.set(\"UserId4\", \"f32d83dc-1271-4efc-b05f-aa5632fd0a9b\")",
							"    pm.environment.set(\"UserId4_username\", \"balakrishna+as@equip.health\");",
							"    pm.environment.set(\"UserId4_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname4\", \"Bala\");",
							"    pm.environment.set(\"UserLastname4\", \"AS\");",
							"    pm.environment.set(\"UserType4\", \"Admissions Specialist\");",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2a15223c-5a0b-4424-84a1-28cd0b3dac68",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Admission Specialist Medical clearance state update notifications",
			"item": [
				{
					"name": "Add Patient Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "345e4f7f-11ea-4168-9df9-adeb396fb707",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"patientId\", jsonData.id);",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2cd97ae9-9bdc-4073-ac87-bf3ea1f6f90e",
								"exec": [
									"let ld = require('lodash');",
									"",
									"let gendersList = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"let pronounsList = [",
									"    \"He/Him/His\",",
									"    \"She/Her/Hers\",",
									"    \"They/Them/Theirs\",",
									"    \"Other\"",
									"];",
									"",
									"let ethnicitiesList = [",
									"    \"Asian\",",
									"    \"Black/African American\",",
									"    \"White/Caucasian\",",
									"    \"Hispanic/Latinx\",",
									"    \"Native American, Indian American, or Alaska Native\",",
									"    \"Native Hawaiian or other Pacific Islander\",",
									"    \"Middle Eastern or North African\",",
									"    \"Prefer not to answer\",",
									"    \"Other\"",
									"];",
									"",
									"let languagesList = [",
									"    \"English\",",
									"    \"Spanish\",",
									"    \"Chinese\",",
									"    \"French\",",
									"    \"Tagalog\",",
									"    \"Vietnamese\",",
									"    \"Korean\",",
									"    \"German\",",
									"    \"Russian\",",
									"    \"Italian\",",
									"    \"Portuguese\",",
									"    \"Polish\",",
									"    \"Japanese\",",
									"    \"Persian\",",
									"    \"Greek\",",
									"    \"Serbo-Croatian\",",
									"    \"Armenian\",",
									"    \"Yiddish\",",
									"    \"American Sign Language (ASL)\"",
									"];",
									"",
									"let sexList = [",
									"    \"Male\",",
									"    \"Female\"",
									"];",
									"",
									"let timezonesList = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\"",
									"];",
									"",
									"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"patientFirstName\", firstName);",
									"pm.environment.set(\"patientLastName\", lastName);",
									"pm.environment.set(\"patientEmail\", email);",
									"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientChosenName\", chosenName);",
									"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
									"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
									"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientCountry\", \"US\");",
									"pm.environment.set(\"patientZip\", zip.toString());",
									"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
									"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
									"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientSex\", ld.sample(sexList));",
									"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
									"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "dd20f681-1ee5-4428-9a46-5e5a0a71c937",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add coverage Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "712922c6-36b4-44d7-a160-2d3a5adaa193",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"",
									"",
									"let payor_payor_program_map = [{ \"payor_name\": \"AIDS Healthcare Foundation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"ATRIO Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Aetna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Aetna\"] },",
									"{ \"payor_name\": \"Affinity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"AgeRight Advantage Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"AgeWell New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Alameda Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Alignment Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"AltaMed PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"AmeriHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Amida Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Anthem\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Arkansas Blue Cross and Blue Shield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Aspire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Asuris Northwest Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Atlanticare LIFE Connection\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Auxilio Salud Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Avera Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Bienvivir Senior Health Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross Blue Shield of Arizona\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross Blue Shield of Massachusetts\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross Blue Shield of Michigan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross Blue Shield of North Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Alabama\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Illinois\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Louisiana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Minnesota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Mississippi\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Montana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Nebraska\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of North Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Oklahoma\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Rhode Island\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Vermont\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Wyoming\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross of Idaho Health Service, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Shield of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
									"{ \"payor_name\": \"BlueCross BlueShield of South Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"BlueCross BlueShield of Tennessee\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Brand New Day\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Brandman Centers for Senior Care (BCSC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"BridgeSpan Health Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Bright Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CHRISTUS Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CalOptima\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CalViva Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Care N' Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CareFirst BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CareOregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Cascade Health Alliance, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Catholic Health LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CenCal Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Centene\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Center for Elders Independence\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CenterLight Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Centers Plan for Healthy Living (CPHL)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Centers for Medicare and Medicaid Services (CMS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Central California Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Central Health Plan of California, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Chinese Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Cigna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Cigna\"] },",
									"{ \"payor_name\": \"Clover Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Community Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Community First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Community Health Choice, Inc. (CHC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Community Health Group\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Community Health Plan of Washington (CHPW)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Complete Senior Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"ConnectiCare, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Contra Costa Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Cook Children's Health Plan (CCHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Crystal Run Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"DAKOTACARE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Dean Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Dell Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Devoted Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Driscoll Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"EMI Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Eddy SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"El Paso First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"ElderONE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Elderplan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Excellus BlueCross BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Fallon Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"FamilyHealth Center for Older Adults (PACE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"First Medical Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"FirstCare Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Fresno PACE for Seniors\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"GHI (Emblem Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Gary and Mary West PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Geisinger Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Gold Coast Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Golden State Medicare Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"HIP/Emblem Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Harvard Pilgrim Health Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Health New England, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Health Plan of San Joaquin\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Health Plan of San Mateo\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Healthfirst\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Highmark BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Highmark Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Horizon Blue Cross Blue Shield of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Horizon BCBS\"] },",
									"{ \"payor_name\": \"Humana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"ICHS PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Imperial Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Independence Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Independent Health Association, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Inland Empire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"InnovAge\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"InnovaCare Health Solutions\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Inspira LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Inter Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Kaiser Foundation Health Plan (California)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Kaiser Northern CA - Central Valley\", \"Kaiser Northern CA - Diablo\", \"Kaiser Northern CA - Fresno\", \"Kaiser Northern CA - San Francisco\", \"Kaiser Northern CA - South San Francisco\", \"Kaiser Northern CA - Greater Southern Alameda\", \"Kaiser Northern CA - East Bay\", \"Kaiser Northern CA - Marin/Sonoma\", \"Kaiser Northern CA - Redwood City\", \"Kaiser Northern CA - Roseville\", \"Kaiser Northern CA - Sacramento\", \"Kaiser Northern CA - South Sacramento\", \"Kaiser Northern CA - San Jose\", \"Kaiser Northern CA - Santa Clara\"] },",
									"{ \"payor_name\": \"Kaiser Foundation Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- Other\", \"payor_program_name\": [\"Orange County\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Kalos Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"KelseyCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Kern Health Systems, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"L.A. Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"LIFE St. Francis\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"LIFE at Lourdes, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Lasso Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"LifeWise Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Longevity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Lutheran Senior LIFE at Jersey City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"MAPFRE Puerto Rico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"MVP Health Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Magellan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"MediExcel Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Medicaid\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Medical Card System, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Medicare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Memorial Hermann Health Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"MetroPlus Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Miami Children’s Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Moda Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"MODA\", \"Optum Cares\"] },",
									"{ \"payor_name\": \"Molina Healthcare\", \"payor_program_name\": [\"Optum Standard\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Mutual of Omaha Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"NY Hotel Trades Council and Hotel Association of NYC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Neighborhood Health Plan of Rhode Island, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"No Insurance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"On Lok Lifeways\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Optum\", \"payor_program_name\": [\"Optum\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Oscar Insurance Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Other\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Oxford\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"PACE CNY\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"PacificSource Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"PacificSource - Medicaid\", \"PacificSource - Navigator\", \"PacificSource - SmartChoice\", \"PacificSource - Voyager\"] },",
									"{ \"payor_name\": \"Parkland Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Partners Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Partnership HealthPlan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Partnership Health Plan\"] },",
									"{ \"payor_name\": \"Physicians Health Plan of Northern Indiana, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Piedmont Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Plan Medico Bella Vista\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Plan de Salud Menonita\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Premera Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Presbyterian Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Priority Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Private Pay\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"ProCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Prominence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Providence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - Standard\"] },",
									"{ \"payor_name\": \"Redwood Coast PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Regence BlueCross BlueShield of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Regence BlueCross BlueShield of Utah\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Regence BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Regence BlueShield of Idaho\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"RiverSpring Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Ryder Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"SCAN Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"SIHO Holding, LLC dba SIHO Insurance Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"SIMNSA Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Samaritan Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"San Diego PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"San Francisco Health Plan (SFHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Santa Clara County dba Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Santa Clara Family Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Santa Fe Employe's Hospital Association-Coast Lines\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Scott and White Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Scripps Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Seaside Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"SelectHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Sendero Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Senior Whole Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Sentara Health Plans, Inc. (fka Optima Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Sharp Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Silver Star Health Network\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"St. Paul's PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Stanford Health Care Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Stockton PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Sunrise Advantage Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Sutter Health Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
									"{ \"payor_name\": \"Sutter SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Texas Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Total Senior Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Triple-S Management Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"True Health New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Tufts Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"UCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"UMR\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"UPMC Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Umpqua Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"UnitedHealthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
									"{ \"payor_name\": \"Univera Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"VNSNY CHOICE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"VillageCareMAX\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Vitality Health Plan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"WEA Trust\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"WellCare Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of Iowa\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of South Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Western Health Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
									"{ \"payor_name\": \"Western Oregon Advanced Health, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Yamhill Community Care Organization\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] }];",
									"",
									"randomPayor = ld.sample(payor_payor_program_map);",
									"randomPayorName = randomPayor.payor_name;",
									"randomPayorProgramName = ld.sample(randomPayor.payor_program_name);",
									"",
									"console.log(randomPayorName);",
									"console.log(randomPayorProgramName);",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let patientRelationList = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"pm.environment.set(\"groupId\", \"GRP12345689\");",
									"pm.environment.set(\"subscriberId\", \"SUB12345689\");",
									"pm.environment.set(\"payor\", randomPayorName);",
									"pm.environment.set(\"payorProgram\", randomPayorProgramName);",
									"pm.environment.set(\"stateCode\", ld.sample(statesList));",
									"pm.environment.set(\"coverageStartDate\", moment().format('YYYY-MM-DD'));",
									"pm.environment.set(\"coverageEndDate\", moment().add(6, 'months').format('YYYY-MM-DD'));",
									"pm.environment.set(\"alternativeId\", \"ALT12345689\");",
									"pm.environment.set(\"providerServicesPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientRelationToSubscriber\", ld.sample(patientRelationList));",
									"pm.environment.set(\"subscriberFirstName\", firstName);",
									"pm.environment.set(\"subscriberLastName\", lastName);",
									"pm.environment.set(\"subscriberDateOfBirth\", moment().subtract(10, 'years').format('YYYY-MM-DD'));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3081cb79-c33a-4604-80ae-55b5c71fde4d",
								"exec": [
									"var response_text = pm.response.text();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"// pm.test(\"Verify CoverageExternalId is generated\", function () {",
									"//     pm.expect(jsonData.id).length.greaterThan(0);",
									"// });",
									"",
									"pm.environment.set(\"coverageExternalId\", response_text);",
									"console.log(\"response_text\" + response_text)"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6862d614-9372-4712-882c-0019a4585a1f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payor\": \"{{payor}}\",\n    \"payorProgram\": \"{{payorProgram}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{groupId}}\",\n    \"subscriberId\": \"{{subscriberId}}\",\n    \"stateCode\": \"{{stateCode}}\",\n    \"startDate\": \"{{coverageStartDate}}\",\n    \"endDate\": \"{{coverageEndDate}}\",\n    \"alternativeId\": \"{{alternativeId}}\",\n    \"customPayorName\": \"\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber}}\",\n    \"patientRelationToSubscriber\": \"{{patientRelationToSubscriber}}\",\n    \"subscriberFirstName\": \"{{subscriberFirstName}}\",\n    \"subscriberLastName\": \"{{subscriberLastName}}\",\n    \"subscriberDateOfBirth\": \"{{subscriberDateOfBirth}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"coverages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add episode",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5bcf5628-745f-4438-a5e0-0c9662e986d4",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"let episodeStatusList = [\"New\"];",
									"",
									"let treatmentProgramList = [\"Equip treatment\", \"Freeform\", \"Relapse prevention\"];",
									"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
									"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
									"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
									"",
									"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
									"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
									"",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
									"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
									"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
									"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
									"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
									"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
									"",
									"//Authorization details",
									"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
									"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
									"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Medical clearance details",
									"pm.environment.set(\"medicalClearanceStatus1\", \"Not ready\");",
									"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Insurance verification details",
									"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
									"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c7cb6ca6-99aa-4b27-999a-a3dba96b5efd",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"//set episodeExternalId to be used in next request",
									"pm.environment.set(\"episodeExternalId\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f672ca49-1d90-4389-8e0b-ffb8de2bc424",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus1}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get episode after add Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57356251-2156-42fd-b1b6-0c2c2adfe393",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"//set externalId to be used in next request",
									"pm.environment.set(\"cdsExternalId\", jsonData[0]['authorizationDetails'][0]['externalId']);",
									"// pm.environment.set(\"pausedDetailsExternalId\", jsonData[0]['pausedDetails'][0]['externalId']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5f14ae03-bd4f-432a-ba7e-8f11352fc8da",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a care team",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c45c8bda-e3ab-4873-85f7-2672c2b1ce02",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b42f83bb-729b-47b8-8e5c-929406617b2e",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set(\"careTeamExternalId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "843444cf-79f7-4fca-a384-8a791d8a3e62",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientExternalId\": \"{{patientId}}\",\n    \"type\": \"care\",\n    \"providers\": [\n        \"{{UserId1}}\",\n        \"{{UserId2}}\",\n        \"{{UserId3}}\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/care-team",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"care-team"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a7b3189-52c9-4dd8-90b5-02bd26c7e55c",
								"exec": [
									"let notificationsList = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"notificationsList\", notificationsList);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3ed8450f-9876-453e-8d67-446170271f0d",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e85e814d-96cc-4f52-bd6e-186779fda3c7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Medical clearance status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9ca2d606-ce6f-4d82-b0da-e6f9aef84d35",
								"exec": [
									"",
									"",
									"pm.environment.set(\"medicalClearanceStatus2\", \"In progress\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5f12127c-6283-4e4d-96b1-19414fa0e527",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"//set episodeExternalId to be used in next request",
									"//pm.environment.set(\"episodeExternalId\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a95f51a5-911a-4b36-b2ef-dcd39233b9a9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus2}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes",
								"{{episodeExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify notification is not generated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ec62c31-cd01-4b93-a664-53e4cb58aac0",
								"exec": [
									"let response = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify notification record is not created if the user add to the care team by them self\", function () {",
									"    if(JSON.stringify(pm.environment.get(\"notificationsList\")) === JSON.stringify(response))",
									"        console.log(\"PASS\");",
									"    else",
									"        pm.expect.fail(\"Notification is created\");",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId2_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId2_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f3e1595d-38f2-4674-a592-a7a4b812b6fa",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0c7b855a-c1fa-49a9-92ed-1eee49d01d35",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Medical clearance status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5c67e1d3-1dd7-4670-b06f-5a16689523f4",
								"exec": [
									"",
									"",
									"pm.environment.set(\"medicalClearanceStatus3\", \"Ready for review\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "93b2773a-a180-4bf7-a997-abb5d4591225",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"//set episodeExternalId to be used in next request",
									"//pm.environment.set(\"episodeExternalId\", pm.response.text());",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "914ab4d0-3f10-4d3b-a4c9-c9107f3d42fe",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus3}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes",
								"{{episodeExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify UPDATED_INSURANCE_STATUS notification is generated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a611c5f1-a5ec-418b-9051-dbf6c35923b9",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_MEDICAL_CLEARANCE_STATUS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"            \"sender\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname2\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname2\")+\"\"",
									"            },",
									"            \"data\": {",
									"                \"new_status\": \"\"+pm.environment.get(\"medicalClearanceStatus3\")+\"\",",
									"                \"old_status\": \"\"+pm.environment.get(\"medicalClearanceStatus2\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"INQUIRY_REFERRAL\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId2_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId2_password\"));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c0ba6938-3717-42a7-ae3d-7157513b896d",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6845d66c-5e50-4fa2-8ed4-11f04480d691",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a admissions team",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "09367863-a9ff-4d6d-8632-fde60b0a1807",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1c85d35a-4b5f-4dc3-a7c4-3e4c2d6df632",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set(\"admissionTeamExternalId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1b49c074-1ec9-464d-a1be-3159ca45d5e9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientExternalId\": \"{{patientId}}\",\n    \"type\": \"admissions\",\n    \"providers\": [\n        \"{{UserId1}}\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/care-team",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"care-team"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Medical clearance status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "31773716-8dd4-453e-bb32-c4c7ca1ff941",
								"exec": [
									"",
									"",
									"pm.environment.set(\"medicalClearanceStatus4\", \"Cleared\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b702c055-cbf5-453c-bac6-29a945fb8dd4",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "baa9bf6e-bd9c-495c-bcb1-1a00a64b03b1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus4}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes",
								"{{episodeExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify UPDATED_INSURANCE_STATUS notification is generated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69f72134-ece7-48e1-a727-14ec70905fe1",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_MEDICAL_CLEARANCE_STATUS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"            \"sender\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname2\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname2\")+\"\"",
									"            },",
									"            \"data\": {",
									"                \"new_status\": \"\"+pm.environment.get(\"medicalClearanceStatus4\")+\"\",",
									"                \"old_status\": \"\"+pm.environment.get(\"medicalClearanceStatus3\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"INQUIRY_REFERRAL\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7b804787-d706-4ebb-ada5-00c364d5bf8f",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "89880595-8aff-4b39-b433-9a5821bf4e5d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update admission team Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3b748142-b4aa-4a36-8796-6263fd65adbe",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6c131228-9520-4459-b055-536cb0d5cf0d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId3_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId3_password\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ebccdee1-5b17-4670-9eb6-4284cfbc9b38",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"providers\": [\n        \"{{UserId2}}\",\n        \"{{UserId3}}\",\n        \"{{UserId4}}\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/care-team/{{admissionTeamExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"care-team",
								"{{admissionTeamExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Medical clearance status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3a384b02-03d7-46e7-9f67-fa1272503f8a",
								"exec": [
									"",
									"",
									"pm.environment.set(\"medicalClearanceStatus5\", \"Not cleared\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cb4c9673-4242-48ee-9481-7fdb2ded4d9c",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "41acb89c-5c8d-4b84-9a1b-87e17adaf6a5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus5}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes",
								"{{episodeExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify UPDATED_INSURANCE_STATUS notification is generated Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3de68079-52ae-42dc-b9f5-feda39ec1a77",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_MEDICAL_CLEARANCE_STATUS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
									"            \"sender\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname3\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname3\")+\"\"",
									"            },",
									"            \"data\": {",
									"                \"new_status\": \"\"+pm.environment.get(\"medicalClearanceStatus5\")+\"\",",
									"                \"old_status\": \"\"+pm.environment.get(\"medicalClearanceStatus4\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"INQUIRY_REFERRAL\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId4_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId4_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b06ba9d9-6564-49a8-819a-dd1d22c14c5c",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a946b579-e4d8-4ed1-9b47-2af723f5efe4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify UPDATED_INSURANCE_STATUS notification is generated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b1e10f2f-2c5a-4a0b-8bb0-f97072d0fe40",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_MEDICAL_CLEARANCE_STATUS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
									"            \"sender\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname3\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname3\")+\"\"",
									"            },",
									"            \"data\": {",
									"                \"new_status\": \"\"+pm.environment.get(\"medicalClearanceStatus5\")+\"\",",
									"                \"old_status\": \"\"+pm.environment.get(\"medicalClearanceStatus4\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"INQUIRY_REFERRAL\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId4_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId4_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3892a572-9b5c-407c-b3d8-a4a6fe67ffb8",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5e014f2e-daf6-48ca-a139-1fbdfa325d24",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "5e637051-b93b-46eb-8136-f3548bb36e75",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3a82865a-602a-4b15-9a9a-98ad0bcadbbd",
						"type": "text/javascript",
						"exec": [
							"",
							"if(pm.environment.name === \"qa\"){",
							"    pm.environment.set(\"UserId1\", \"80f2dea3-0c9c-4a97-b30d-0dbfa6b31cc1\")",
							"    pm.environment.set(\"UserId1_username\", \"balakrishna+as1@equip.health\");",
							"    pm.environment.set(\"UserId1_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname1\", \"Balakrishna\");",
							"    pm.environment.set(\"UserLastname1\", \"AS1\");",
							"    pm.environment.set(\"UserType1\", \"Admissions Specialist\");",
							"",
							"    pm.environment.set(\"UserId2\", \"af2215db-647f-4b20-8f6a-f2f3db0ce5ee\")",
							"    pm.environment.set(\"UserId2_username\", \"maud_scheduling+psr@equip.health\");",
							"    pm.environment.set(\"UserId2_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname2\", \"Maud\");",
							"    pm.environment.set(\"UserLastname2\", \"Scheduling\");",
							"    pm.environment.set(\"UserType2\", \"Patient Service Representative\");",
							"",
							"    pm.environment.set(\"UserId3\", \"0a113848-7671-42b2-bb7c-82a980a4393f\")",
							"    pm.environment.set(\"UserId3_username\", \"balakrishna+psr@equip.health\");",
							"    pm.environment.set(\"UserId3_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname3\", \"Bala\");",
							"    pm.environment.set(\"UserLastname3\", \"Deema\");",
							"    pm.environment.set(\"UserType3\", \"Patient Service Representative\");",
							"",
							"    pm.environment.set(\"UserId4\", \"aa2cef2d-fe3a-4f72-9a92-e6b114c3c668\")",
							"    pm.environment.set(\"UserId4_username\", \"balakrishna+as2@equip.health\");",
							"    pm.environment.set(\"UserId4_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname4\", \"Balakrishna\");",
							"    pm.environment.set(\"UserLastname4\", \"AS2\");",
							"    pm.environment.set(\"UserType4\", \"Admissions Specialist\");",
							"}else{",
							"    pm.environment.set(\"UserId1\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\")",
							"    pm.environment.set(\"UserId1_username\", \"balakrishna+admissionspecialist@equip.health\");",
							"    pm.environment.set(\"UserId1_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname1\", \"Bala\");",
							"    pm.environment.set(\"UserLastname1\", \"Deem\");",
							"    pm.environment.set(\"UserType1\", \"Admissions Specialist\");",
							"",
							"    pm.environment.set(\"UserId2\", \"61e1108d-a4cd-4f4d-92bc-eb214e8594c6\")",
							"    pm.environment.set(\"UserId2_username\", \"balakrishna+dietitian@equip.health\");",
							"    pm.environment.set(\"UserId2_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname2\", \"Balakrishna\");",
							"    pm.environment.set(\"UserLastname2\", \"Deema\");",
							"    pm.environment.set(\"UserType2\", \"Dietitian\");",
							"",
							"    pm.environment.set(\"UserId3\", \"a4684d41-f12f-4e96-af65-9ff44d723d61\")",
							"    pm.environment.set(\"UserId3_username\", \"maud_scheduling+psr@equip.health\");",
							"    pm.environment.set(\"UserId3_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname3\", \"Maud\");",
							"    pm.environment.set(\"UserLastname3\", \"Scheduling\");",
							"    pm.environment.set(\"UserType3\", \"Patient Service Representative\");",
							"",
							"    pm.environment.set(\"UserId4\", \"f32d83dc-1271-4efc-b05f-aa5632fd0a9b\")",
							"    pm.environment.set(\"UserId4_username\", \"balakrishna+as@equip.health\");",
							"    pm.environment.set(\"UserId4_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname4\", \"Bala\");",
							"    pm.environment.set(\"UserLastname4\", \"AS\");",
							"    pm.environment.set(\"UserType4\", \"Admissions Specialist\");",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7f93fd83-67df-4c58-9e13-9d88180aaacc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Admission Specialist Intake survey complete notification",
			"item": [
				{
					"name": "By provider",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4f739667-48be-4f98-8bec-bcdf44e9c7d9",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);",
											"",
											"pm.environment.set(\"test-token\",\"\");",
											"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
											"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "405137eb-4bc5-45a0-b4d3-a3b1edeea50a",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "be478e0c-1ff2-4917-8377-2b6fe29249d4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a care team",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "414a3648-b66b-4b3a-b30b-2311f315e162",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b461a9b2-505c-4488-96a2-160eb4890b2d",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.environment.set(\"careTeamExternalId\", jsonData.id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e51e1a79-67a3-468e-8bde-15d3884d24ec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"patientExternalId\": \"{{patientId}}\",\n    \"type\": \"care\",\n    \"providers\": [\n        \"{{UserId1}}\",\n        \"{{UserId2}}\",\n        \"{{UserId3}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/care-team",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"care-team"
									]
								}
							},
							"response": []
						},
						{
							"name": "create assessment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f8727a11-ba5a-4b47-ba1b-d89519147ac0",
										"exec": [
											"",
											"const submitted_source_list = ['Web', 'Phone', 'Email'];",
											"",
											"pm.environment.set(\"submittedSource\", submitted_source_list[Math.floor(Math.random() * submitted_source_list.length)]);",
											"pm.environment.set(\"userEmail\", \"balakrishna@equip.health\");",
											"pm.environment.set(\"userPhone\", \"+917842414959\");",
											"pm.environment.set(\"providerFirstname\", \"Bala\");",
											"pm.environment.set(\"providerLastname\", \"000analyst\");",
											"pm.environment.set(\"providerUserid\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "74da5717-8251-4fae-9461-f4e5711af323",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify responseExternalId is generated\", function () {",
											"    pm.expect(jsonData.responseExternalId).length.greaterThan(0);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.environment.set(\"assessment_responseExternalId\", jsonData.responseExternalId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a9b0ad3b-f395-40ab-97ee-10fedcc6864e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"New\",\n  \"submittedSource\": \"{{submittedSource}}\",\n  \"submittedUserFirstName\": \"{{providerFirstname}}\",\n  \"submittedUserLastName\": \"{{providerLastname}}\",\n  \"submittedUserId\": \"d74afcfb-9786-4dba-9139-c8bbc511783f\",\n  \"surveyName\": \"Intake\",\n  \"toUserEmail\": \"{{userEmail}}\",\n  \"toUserFirstName\": \"{{patientFirstName}}\",\n  \"toUserLastName\": \"{{patientLastName}}\",\n  \"toUserPhone\": \"{{userPhone}}\",\n  \"userId\": \"{{patientId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/assessments",
									"host": [
										"{{host}}"
									],
									"path": [
										"assessments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Notifications",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "343eba9a-ab7a-466c-9263-22148b7c6c49",
										"exec": [
											"let notificationsList = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.environment.set(\"notificationsList\", notificationsList);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8f6657d9-59b6-433a-97c5-f488dcb5a5e6",
										"exec": [
											"",
											"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "551a7a16-c55c-4dcc-a9b9-7627c48394b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifications?page-size=100&page-number=1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "page-number",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "complete assessment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c5da03d4-4950-436b-97b3-d2159d8aaca6",
										"exec": [
											"",
											"var complete_assessment_json_body = { \"firstName\": \"venkatesh\", \"lastName\": \"a\", \"patientDOB\": \"1989-01-01\", \"assignedGenderAtBirth\": \"Male\", \"patientGender\": \"cis gender-male\", \"patientPronouns\": \"he/his/him\", \"patientEthnicity\": \"Native Hawaiian or other pacific islander\", \"patientHouseholdIncome\": \"$75,000 to $99,999\", \"patientEmail\": \"venky@equip.health\", \"patientPhone\": \"9209374937\", \"patientMail\": \"sdf\", \"patientCity\": \"sdf\", \"patientState\": \"sdgf\", \"patientZipcode\": \"90009\", \"question2\": \"sdfsd\", \"patientPreferredContact\": [\"SMS\", \"Email\"], \"familyTreatmentSupport\": \"0\", \"providerName\": \"medical provider\", \"providerAddress\": \"3-24\", \"providerCity\": \"medical provider city\", \"providerState\": \"mp state\", \"providerZip\": \"sdf\", \"providerEmail\": \"medicalp@gmail.com\", \"providerPhone\": \"0980\", \"lastAppointment\": \"2020-09-09\", \"pharmacyName\": \"preferred pharmacy\", \"medicalConditions\": [\"other\"], \"medicalConditions-Comment\": \"hiper thyroid\", \"physicalSymptoms\": [\"other\"], \"physicalSymptoms-Comment\": \"other symptoms\", \"surgeries\": [\"other\"], \"surgeries-Comment\": \"other surgery\", \"hospitalized\": \"No\", \"currentMedications\": \"No\", \"allergies\": \"No\", \"onsetMenstruation\": \"none\", \"onsetSymptoms\": \"2021-01-02\", \"EDdiagnoses\": [\"other\"], \"EDdiagnoses-Comment\": \"other diagnoses\", \"EDtreatment\": [\"none\"], \"currentTherapsit\": \"No\", \"prescription\": \"No\", \"EDsymptoms\": [\"binge-eating\"], \"caloryIntake\": \"89\", \"food\": [\"other\"], \"food-Comment\": \"other food\", \"height\": \"5.5\", \"weight\": \"70\", \"highestWeight\": \"100\", \"highestDate\": \"2019-02-03\", \"lowestWeight\": \"30\", \"question10\": \"2017-08-09\", \"psychiatricDiagnoses\": [\"depression\"], \"psychiatricSymptoms\": [\"none\"], \"suicideHistory\": \"No\", \"safetyConcerns\": \"No\", \"aggression\": \"No\", \"trauma\": \"No\", \"familyConditions\": [\"none\"], \"suicide\": \"Yes\", \"suicideInfo\": \"additional information\", \"school\": [\"Charter school\"], \"question18\": \"a\", \"accommodations\": [\"504 plan\", \"individualized education program (IEP)\"], \"activities\": [\"other\"], \"activities-Comment\": \"other activity\", \"patientSiblings\": \"No\", \"livingSituation\": [\"other\"], \"livingSituation-Comment\": \"current living situation\" }",
											"",
											"pm.environment.set('complete_assessment_json_body', JSON.stringify(JSON.stringify(complete_assessment_json_body)));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7132c0e3-fb0a-4ade-a59c-25de830292e4",
										"exec": [
											"var jsonData = pm.response.text();",
											"",
											"console.log(\"jsonData: \" + jsonData);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify response\", function () {",
											"    pm.expect(jsonData).to.equal(\"Survey response saved!\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "85379618-a5e8-4568-9ac0-7b04a8eb3548",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"toUserEmail\": \"{{userEmail}}\",\n  \"jsonResults\": {{complete_assessment_json_body}},\n  \"status\": \"Done\",\n  \"submittedSource\": \"{{submittedSource}}\",\n  \"submittedUserId\": \"{{createdByUserId}}\",\n  \"submittedUserFirstName\": \"{{providerFirstname}}\",\n  \"submittedUserLastName\": \"{{providerLastname}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/assessments/{{assessment_responseExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"assessments",
										"{{assessment_responseExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify notification is not generated",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "decf5290-1e79-48db-acf4-06eaf8cff26c",
										"exec": [
											"let response = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify notification record is not created if the user add to the care team by them self\", function () {",
											"    if(JSON.stringify(pm.environment.get(\"notificationsList\")) === JSON.stringify(response))",
											"        console.log(\"PASS\");",
											"    else",
											"        pm.expect.fail(\"Notification is created\");",
											"});",
											"",
											"pm.environment.set(\"test-token\",\"\");",
											"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId2_username\"));",
											"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId2_password\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8f92d889-0c19-4331-a39c-9c464ecfb087",
										"exec": [
											"",
											"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7b348bd2-b3b0-4c9b-8d65-151df7980afc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifications?page-size=100&page-number=1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "page-number",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "create assessment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f35222a0-a638-4fde-9bb0-b16d94fbd5d8",
										"exec": [
											"",
											"const submitted_source_list = ['Web', 'Phone', 'Email'];",
											"",
											"pm.environment.set(\"submittedSource\", submitted_source_list[Math.floor(Math.random() * submitted_source_list.length)]);",
											"pm.environment.set(\"userEmail\", \"balakrishna@equip.health\");",
											"pm.environment.set(\"userPhone\", \"+917842414959\");",
											"pm.environment.set(\"providerFirstname\", \"Bala\");",
											"pm.environment.set(\"providerLastname\", \"000analyst\");",
											"pm.environment.set(\"providerUserid\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c559c81b-48ba-402b-8f21-daae202a2fb2",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify responseExternalId is generated\", function () {",
											"    pm.expect(jsonData.responseExternalId).length.greaterThan(0);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.environment.set(\"assessment_responseExternalId\", jsonData.responseExternalId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1867cd94-85ca-41e2-bcc8-39b20378d617",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"New\",\n  \"submittedSource\": \"{{submittedSource}}\",\n  \"submittedUserFirstName\": \"{{providerFirstname}}\",\n  \"submittedUserLastName\": \"{{providerLastname}}\",\n  \"submittedUserId\": \"d74afcfb-9786-4dba-9139-c8bbc511783f\",\n  \"surveyName\": \"Intake\",\n  \"toUserEmail\": \"{{userEmail}}\",\n  \"toUserFirstName\": \"{{patientFirstName}}\",\n  \"toUserLastName\": \"{{patientLastName}}\",\n  \"toUserPhone\": \"{{userPhone}}\",\n  \"userId\": \"{{patientId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/assessments",
									"host": [
										"{{host}}"
									],
									"path": [
										"assessments"
									]
								}
							},
							"response": []
						},
						{
							"name": "complete assessment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "bf6589e7-e2ec-444f-bac5-97944335a502",
										"exec": [
											"",
											"var complete_assessment_json_body = { \"firstName\": \"venkatesh\", \"lastName\": \"a\", \"patientDOB\": \"1989-01-01\", \"assignedGenderAtBirth\": \"Male\", \"patientGender\": \"cis gender-male\", \"patientPronouns\": \"he/his/him\", \"patientEthnicity\": \"Native Hawaiian or other pacific islander\", \"patientHouseholdIncome\": \"$75,000 to $99,999\", \"patientEmail\": \"venky@equip.health\", \"patientPhone\": \"9209374937\", \"patientMail\": \"sdf\", \"patientCity\": \"sdf\", \"patientState\": \"sdgf\", \"patientZipcode\": \"90009\", \"question2\": \"sdfsd\", \"patientPreferredContact\": [\"SMS\", \"Email\"], \"familyTreatmentSupport\": \"0\", \"providerName\": \"medical provider\", \"providerAddress\": \"3-24\", \"providerCity\": \"medical provider city\", \"providerState\": \"mp state\", \"providerZip\": \"sdf\", \"providerEmail\": \"medicalp@gmail.com\", \"providerPhone\": \"0980\", \"lastAppointment\": \"2020-09-09\", \"pharmacyName\": \"preferred pharmacy\", \"medicalConditions\": [\"other\"], \"medicalConditions-Comment\": \"hiper thyroid\", \"physicalSymptoms\": [\"other\"], \"physicalSymptoms-Comment\": \"other symptoms\", \"surgeries\": [\"other\"], \"surgeries-Comment\": \"other surgery\", \"hospitalized\": \"No\", \"currentMedications\": \"No\", \"allergies\": \"No\", \"onsetMenstruation\": \"none\", \"onsetSymptoms\": \"2021-01-02\", \"EDdiagnoses\": [\"other\"], \"EDdiagnoses-Comment\": \"other diagnoses\", \"EDtreatment\": [\"none\"], \"currentTherapsit\": \"No\", \"prescription\": \"No\", \"EDsymptoms\": [\"binge-eating\"], \"caloryIntake\": \"89\", \"food\": [\"other\"], \"food-Comment\": \"other food\", \"height\": \"5.5\", \"weight\": \"70\", \"highestWeight\": \"100\", \"highestDate\": \"2019-02-03\", \"lowestWeight\": \"30\", \"question10\": \"2017-08-09\", \"psychiatricDiagnoses\": [\"depression\"], \"psychiatricSymptoms\": [\"none\"], \"suicideHistory\": \"No\", \"safetyConcerns\": \"No\", \"aggression\": \"No\", \"trauma\": \"No\", \"familyConditions\": [\"none\"], \"suicide\": \"Yes\", \"suicideInfo\": \"additional information\", \"school\": [\"Charter school\"], \"question18\": \"a\", \"accommodations\": [\"504 plan\", \"individualized education program (IEP)\"], \"activities\": [\"other\"], \"activities-Comment\": \"other activity\", \"patientSiblings\": \"No\", \"livingSituation\": [\"other\"], \"livingSituation-Comment\": \"current living situation\" }",
											"",
											"pm.environment.set('complete_assessment_json_body', JSON.stringify(JSON.stringify(complete_assessment_json_body)));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bb78b845-7cc7-43e7-98b2-6d7ab2d7fff8",
										"exec": [
											"var jsonData = pm.response.text();",
											"",
											"console.log(\"jsonData: \" + jsonData);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify response\", function () {",
											"    pm.expect(jsonData).to.equal(\"Survey response saved!\");",
											"});",
											"",
											"pm.environment.set(\"test-token\",\"\");",
											"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
											"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2054a012-61b1-425d-a628-c74e12e3b8d6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"toUserEmail\": \"{{userEmail}}\",\n  \"jsonResults\": {{complete_assessment_json_body}},\n  \"status\": \"Done\",\n  \"submittedSource\": \"{{submittedSource}}\",\n  \"submittedUserId\": \"{{createdByUserId}}\",\n  \"submittedUserFirstName\": \"{{providerFirstname}}\",\n  \"submittedUserLastName\": \"{{providerLastname}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/assessments/{{assessment_responseExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"assessments",
										"{{assessment_responseExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify COMPLETED_INTAKE_SURVEY notification is generated Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a891ea50-46e1-4d3e-935e-951c2772cc7e",
										"exec": [
											"let moment = require('moment');",
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"let exp_notification = {",
											"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
											"            \"subject\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"                \"type\": \"patient\",",
											"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
											"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
											"            },",
											"            \"eventType\": \"COMPLETED_INTAKE_SURVEY\",",
											"            \"senderId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
											"            \"sender\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
											"                \"type\": \"provider\",",
											"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname2\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"UserLastname2\")+\"\"",
											"            },",
											"            \"priority\": \"HIGH\",",
											"            \"action\": \"OPEN_PATIENT_PROFILE\",",
											"            \"source\": \"ASSESSMENT\",",
											"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
											"            \"status\": \"NEW\",",
											"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
											"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
											"        };",
											"",
											"pm.test(\"Validate notification details in response\", function () {",
											"    delete jsonData.data[0].groupBy;",
											"    delete jsonData.data[0].notificationExternalId;",
											"    for(let i=0; i<jsonData.data.length; i++){ ",
											"        delete jsonData.data[i].createdAt;",
											"        delete jsonData.data[i].updatedAt;",
											"        delete exp_notification.createdAt;",
											"        delete exp_notification.updatedAt;",
											"    }",
											"",
											"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
											"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
											"    //pm.expect(jsonData).to.eql(exp_notification);",
											"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
											"",
											"});",
											"",
											"pm.environment.set(\"test-token\",\"\");",
											"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId2_username\"));",
											"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId2_password\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c71eee93-830d-4004-9f4b-dd34c48e14ad",
										"exec": [
											"",
											"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9d075d1b-f22e-4dec-b396-80e5ccef7a26",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifications?page-size=100&page-number=1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "page-number",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a admissions team",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "085ad05e-96ab-4603-bb17-0daaf063e24d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a8b7a7d6-7f45-442f-ac93-7e3f8f63053a",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.environment.set(\"admissionTeamExternalId\", jsonData.id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ac100851-288f-44e9-818d-9c8f204d378d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"patientExternalId\": \"{{patientId}}\",\n    \"type\": \"admissions\",\n    \"providers\": [\n        \"{{UserId1}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/care-team",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"care-team"
									]
								}
							},
							"response": []
						},
						{
							"name": "create assessment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b06cc771-b242-4a7e-a336-7287617d63d4",
										"exec": [
											"",
											"const submitted_source_list = ['Web', 'Phone', 'Email'];",
											"",
											"pm.environment.set(\"submittedSource\", submitted_source_list[Math.floor(Math.random() * submitted_source_list.length)]);",
											"pm.environment.set(\"userEmail\", \"balakrishna@equip.health\");",
											"pm.environment.set(\"userPhone\", \"+917842414959\");",
											"pm.environment.set(\"providerFirstname\", \"Bala\");",
											"pm.environment.set(\"providerLastname\", \"000analyst\");",
											"pm.environment.set(\"providerUserid\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "22576e3b-f3d2-4d44-9804-69854306235c",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify responseExternalId is generated\", function () {",
											"    pm.expect(jsonData.responseExternalId).length.greaterThan(0);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.environment.set(\"assessment_responseExternalId\", jsonData.responseExternalId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5bd26748-cbc8-44fa-9b28-40dd73ea8830",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"New\",\n  \"submittedSource\": \"{{submittedSource}}\",\n  \"submittedUserFirstName\": \"{{providerFirstname}}\",\n  \"submittedUserLastName\": \"{{providerLastname}}\",\n  \"submittedUserId\": \"d74afcfb-9786-4dba-9139-c8bbc511783f\",\n  \"surveyName\": \"Intake\",\n  \"toUserEmail\": \"{{userEmail}}\",\n  \"toUserFirstName\": \"{{patientFirstName}}\",\n  \"toUserLastName\": \"{{patientLastName}}\",\n  \"toUserPhone\": \"{{userPhone}}\",\n  \"userId\": \"{{patientId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/assessments",
									"host": [
										"{{host}}"
									],
									"path": [
										"assessments"
									]
								}
							},
							"response": []
						},
						{
							"name": "complete assessment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "44c0efdd-6111-4ec6-9c97-8e400ba5a9f1",
										"exec": [
											"",
											"var complete_assessment_json_body = { \"firstName\": \"venkatesh\", \"lastName\": \"a\", \"patientDOB\": \"1989-01-01\", \"assignedGenderAtBirth\": \"Male\", \"patientGender\": \"cis gender-male\", \"patientPronouns\": \"he/his/him\", \"patientEthnicity\": \"Native Hawaiian or other pacific islander\", \"patientHouseholdIncome\": \"$75,000 to $99,999\", \"patientEmail\": \"venky@equip.health\", \"patientPhone\": \"9209374937\", \"patientMail\": \"sdf\", \"patientCity\": \"sdf\", \"patientState\": \"sdgf\", \"patientZipcode\": \"90009\", \"question2\": \"sdfsd\", \"patientPreferredContact\": [\"SMS\", \"Email\"], \"familyTreatmentSupport\": \"0\", \"providerName\": \"medical provider\", \"providerAddress\": \"3-24\", \"providerCity\": \"medical provider city\", \"providerState\": \"mp state\", \"providerZip\": \"sdf\", \"providerEmail\": \"medicalp@gmail.com\", \"providerPhone\": \"0980\", \"lastAppointment\": \"2020-09-09\", \"pharmacyName\": \"preferred pharmacy\", \"medicalConditions\": [\"other\"], \"medicalConditions-Comment\": \"hiper thyroid\", \"physicalSymptoms\": [\"other\"], \"physicalSymptoms-Comment\": \"other symptoms\", \"surgeries\": [\"other\"], \"surgeries-Comment\": \"other surgery\", \"hospitalized\": \"No\", \"currentMedications\": \"No\", \"allergies\": \"No\", \"onsetMenstruation\": \"none\", \"onsetSymptoms\": \"2021-01-02\", \"EDdiagnoses\": [\"other\"], \"EDdiagnoses-Comment\": \"other diagnoses\", \"EDtreatment\": [\"none\"], \"currentTherapsit\": \"No\", \"prescription\": \"No\", \"EDsymptoms\": [\"binge-eating\"], \"caloryIntake\": \"89\", \"food\": [\"other\"], \"food-Comment\": \"other food\", \"height\": \"5.5\", \"weight\": \"70\", \"highestWeight\": \"100\", \"highestDate\": \"2019-02-03\", \"lowestWeight\": \"30\", \"question10\": \"2017-08-09\", \"psychiatricDiagnoses\": [\"depression\"], \"psychiatricSymptoms\": [\"none\"], \"suicideHistory\": \"No\", \"safetyConcerns\": \"No\", \"aggression\": \"No\", \"trauma\": \"No\", \"familyConditions\": [\"none\"], \"suicide\": \"Yes\", \"suicideInfo\": \"additional information\", \"school\": [\"Charter school\"], \"question18\": \"a\", \"accommodations\": [\"504 plan\", \"individualized education program (IEP)\"], \"activities\": [\"other\"], \"activities-Comment\": \"other activity\", \"patientSiblings\": \"No\", \"livingSituation\": [\"other\"], \"livingSituation-Comment\": \"current living situation\" }",
											"",
											"pm.environment.set('complete_assessment_json_body', JSON.stringify(JSON.stringify(complete_assessment_json_body)));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "64af7cdb-da62-4a11-bd26-406a6220c0f1",
										"exec": [
											"var jsonData = pm.response.text();",
											"",
											"console.log(\"jsonData: \" + jsonData);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify response\", function () {",
											"    pm.expect(jsonData).to.equal(\"Survey response saved!\");",
											"});",
											"",
											"pm.environment.set(\"test-token\",\"\");",
											"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
											"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d14a8ea1-fe4d-4a59-9575-3f847271a09c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"toUserEmail\": \"{{userEmail}}\",\n  \"jsonResults\": {{complete_assessment_json_body}},\n  \"status\": \"Done\",\n  \"submittedSource\": \"{{submittedSource}}\",\n  \"submittedUserId\": \"{{createdByUserId}}\",\n  \"submittedUserFirstName\": \"{{providerFirstname}}\",\n  \"submittedUserLastName\": \"{{providerLastname}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/assessments/{{assessment_responseExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"assessments",
										"{{assessment_responseExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify COMPLETED_INTAKE_SURVEY notification is generated Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3192cb0a-e2aa-48ae-aabe-a82ac2b2e236",
										"exec": [
											"let moment = require('moment');",
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"let exp_notification = {",
											"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
											"            \"subject\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"                \"type\": \"patient\",",
											"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
											"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
											"            },",
											"            \"eventType\": \"COMPLETED_INTAKE_SURVEY\",",
											"            \"senderId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
											"            \"sender\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
											"                \"type\": \"provider\",",
											"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname2\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"UserLastname2\")+\"\"",
											"            },",
											"            \"priority\": \"HIGH\",",
											"            \"action\": \"OPEN_PATIENT_PROFILE\",",
											"            \"source\": \"ASSESSMENT\",",
											"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
											"            \"status\": \"NEW\",",
											"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
											"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
											"        };",
											"",
											"pm.test(\"Validate notification details in response\", function () {",
											"    delete jsonData.data[0].groupBy;",
											"    delete jsonData.data[0].notificationExternalId;",
											"    for(let i=0; i<jsonData.data.length; i++){ ",
											"        delete jsonData.data[i].createdAt;",
											"        delete jsonData.data[i].updatedAt;",
											"        delete exp_notification.createdAt;",
											"        delete exp_notification.updatedAt;",
											"    }",
											"",
											"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
											"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
											"    //pm.expect(jsonData).to.eql(exp_notification);",
											"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "602e3f27-a0dd-478f-ac9c-1657cea07097",
										"exec": [
											"",
											"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e2cf2850-d0b0-4d93-bd0a-b54d099d954f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifications?page-size=100&page-number=1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "page-number",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update admission team",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ff6c6598-3914-4b5c-8da5-5374a41c4c4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3dfe6530-cea1-4710-a599-e7c3afa20e16",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.environment.set(\"test-token\",\"\");",
											"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId3_username\"));",
											"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId3_password\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "831f6a58-96bb-4a69-ba72-f1b285939b8d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"providers\": [\n        \"{{UserId2}}\",\n        \"{{UserId3}}\",\n        \"{{UserId4}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/care-team/{{admissionTeamExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"care-team",
										"{{admissionTeamExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create assessment Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0c4f54e2-1d8c-429a-b095-5cc45653aef7",
										"exec": [
											"",
											"const submitted_source_list = ['Web', 'Phone', 'Email'];",
											"",
											"pm.environment.set(\"submittedSource\", submitted_source_list[Math.floor(Math.random() * submitted_source_list.length)]);",
											"pm.environment.set(\"userEmail\", \"balakrishna@equip.health\");",
											"pm.environment.set(\"userPhone\", \"+917842414959\");",
											"pm.environment.set(\"providerFirstname\", \"Bala\");",
											"pm.environment.set(\"providerLastname\", \"000analyst\");",
											"pm.environment.set(\"providerUserid\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "31a3e2be-89b9-46f2-a98c-acaa3c7696af",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify responseExternalId is generated\", function () {",
											"    pm.expect(jsonData.responseExternalId).length.greaterThan(0);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.environment.set(\"assessment_responseExternalId\", jsonData.responseExternalId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8c9236c6-a8ef-4dd6-ada6-a8e5583aebe5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"New\",\n  \"submittedSource\": \"{{submittedSource}}\",\n  \"submittedUserFirstName\": \"{{providerFirstname}}\",\n  \"submittedUserLastName\": \"{{providerLastname}}\",\n  \"submittedUserId\": \"d74afcfb-9786-4dba-9139-c8bbc511783f\",\n  \"surveyName\": \"Intake\",\n  \"toUserEmail\": \"{{userEmail}}\",\n  \"toUserFirstName\": \"{{patientFirstName}}\",\n  \"toUserLastName\": \"{{patientLastName}}\",\n  \"toUserPhone\": \"{{userPhone}}\",\n  \"userId\": \"{{patientId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/assessments",
									"host": [
										"{{host}}"
									],
									"path": [
										"assessments"
									]
								}
							},
							"response": []
						},
						{
							"name": "complete assessment Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "bc73837f-1aee-40e8-a1d6-5ed8a46e40ba",
										"exec": [
											"",
											"var complete_assessment_json_body = { \"firstName\": \"venkatesh\", \"lastName\": \"a\", \"patientDOB\": \"1989-01-01\", \"assignedGenderAtBirth\": \"Male\", \"patientGender\": \"cis gender-male\", \"patientPronouns\": \"he/his/him\", \"patientEthnicity\": \"Native Hawaiian or other pacific islander\", \"patientHouseholdIncome\": \"$75,000 to $99,999\", \"patientEmail\": \"venky@equip.health\", \"patientPhone\": \"9209374937\", \"patientMail\": \"sdf\", \"patientCity\": \"sdf\", \"patientState\": \"sdgf\", \"patientZipcode\": \"90009\", \"question2\": \"sdfsd\", \"patientPreferredContact\": [\"SMS\", \"Email\"], \"familyTreatmentSupport\": \"0\", \"providerName\": \"medical provider\", \"providerAddress\": \"3-24\", \"providerCity\": \"medical provider city\", \"providerState\": \"mp state\", \"providerZip\": \"sdf\", \"providerEmail\": \"medicalp@gmail.com\", \"providerPhone\": \"0980\", \"lastAppointment\": \"2020-09-09\", \"pharmacyName\": \"preferred pharmacy\", \"medicalConditions\": [\"other\"], \"medicalConditions-Comment\": \"hiper thyroid\", \"physicalSymptoms\": [\"other\"], \"physicalSymptoms-Comment\": \"other symptoms\", \"surgeries\": [\"other\"], \"surgeries-Comment\": \"other surgery\", \"hospitalized\": \"No\", \"currentMedications\": \"No\", \"allergies\": \"No\", \"onsetMenstruation\": \"none\", \"onsetSymptoms\": \"2021-01-02\", \"EDdiagnoses\": [\"other\"], \"EDdiagnoses-Comment\": \"other diagnoses\", \"EDtreatment\": [\"none\"], \"currentTherapsit\": \"No\", \"prescription\": \"No\", \"EDsymptoms\": [\"binge-eating\"], \"caloryIntake\": \"89\", \"food\": [\"other\"], \"food-Comment\": \"other food\", \"height\": \"5.5\", \"weight\": \"70\", \"highestWeight\": \"100\", \"highestDate\": \"2019-02-03\", \"lowestWeight\": \"30\", \"question10\": \"2017-08-09\", \"psychiatricDiagnoses\": [\"depression\"], \"psychiatricSymptoms\": [\"none\"], \"suicideHistory\": \"No\", \"safetyConcerns\": \"No\", \"aggression\": \"No\", \"trauma\": \"No\", \"familyConditions\": [\"none\"], \"suicide\": \"Yes\", \"suicideInfo\": \"additional information\", \"school\": [\"Charter school\"], \"question18\": \"a\", \"accommodations\": [\"504 plan\", \"individualized education program (IEP)\"], \"activities\": [\"other\"], \"activities-Comment\": \"other activity\", \"patientSiblings\": \"No\", \"livingSituation\": [\"other\"], \"livingSituation-Comment\": \"current living situation\" }",
											"",
											"pm.environment.set('complete_assessment_json_body', JSON.stringify(JSON.stringify(complete_assessment_json_body)));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "293accfa-d509-444e-a503-9fd566142c00",
										"exec": [
											"var jsonData = pm.response.text();",
											"",
											"console.log(\"jsonData: \" + jsonData);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify response\", function () {",
											"    pm.expect(jsonData).to.equal(\"Survey response saved!\");",
											"});",
											"",
											"pm.environment.set(\"test-token\",\"\");",
											"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
											"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7f60a391-3fea-41f0-9562-bf65ebd3e120",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"toUserEmail\": \"{{userEmail}}\",\n  \"jsonResults\": {{complete_assessment_json_body}},\n  \"status\": \"Done\",\n  \"submittedSource\": \"{{submittedSource}}\",\n  \"submittedUserId\": \"{{createdByUserId}}\",\n  \"submittedUserFirstName\": \"{{providerFirstname}}\",\n  \"submittedUserLastName\": \"{{providerLastname}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/assessments/{{assessment_responseExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"assessments",
										"{{assessment_responseExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify COMPLETED_INTAKE_SURVEY notification is generated for User1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "da28ade0-2923-4e82-9892-780dd83b1c47",
										"exec": [
											"let moment = require('moment');",
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"let exp_notification = {",
											"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
											"            \"subject\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"                \"type\": \"patient\",",
											"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
											"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
											"            },",
											"            \"eventType\": \"COMPLETED_INTAKE_SURVEY\",",
											"            \"senderId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
											"            \"sender\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
											"                \"type\": \"provider\",",
											"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname3\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"UserLastname3\")+\"\"",
											"            },",
											"            \"priority\": \"HIGH\",",
											"            \"action\": \"OPEN_PATIENT_PROFILE\",",
											"            \"source\": \"ASSESSMENT\",",
											"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
											"            \"status\": \"NEW\",",
											"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
											"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
											"        };",
											"",
											"pm.test(\"Validate notification details in response\", function () {",
											"    delete jsonData.data[0].groupBy;",
											"    delete jsonData.data[0].notificationExternalId;",
											"    for(let i=0; i<jsonData.data.length; i++){ ",
											"        delete jsonData.data[i].createdAt;",
											"        delete jsonData.data[i].updatedAt;",
											"        delete exp_notification.createdAt;",
											"        delete exp_notification.updatedAt;",
											"    }",
											"",
											"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
											"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
											"    //pm.expect(jsonData).to.eql(exp_notification);",
											"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
											"",
											"});",
											"",
											"pm.environment.set(\"test-token\",\"\");",
											"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId4_username\"));",
											"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId4_password\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "70a6eafe-1ca6-463c-b63c-de458c703a6c",
										"exec": [
											"",
											"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f08ae49c-ec7d-40c5-8089-4c9587d03d3c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifications?page-size=100&page-number=1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "page-number",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify COMPLETED_INTAKE_SURVEY notification is generated User2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "12d80d0f-cfaa-4ece-aa88-6aaf6643a823",
										"exec": [
											"let moment = require('moment');",
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"let exp_notification = {",
											"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
											"            \"subject\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"                \"type\": \"patient\",",
											"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
											"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
											"            },",
											"            \"eventType\": \"COMPLETED_INTAKE_SURVEY\",",
											"            \"senderId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
											"            \"sender\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
											"                \"type\": \"provider\",",
											"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname3\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"UserLastname3\")+\"\"",
											"            },",
											"            \"priority\": \"HIGH\",",
											"            \"action\": \"OPEN_PATIENT_PROFILE\",",
											"            \"source\": \"ASSESSMENT\",",
											"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
											"            \"status\": \"NEW\",",
											"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
											"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
											"        };",
											"",
											"pm.test(\"Validate notification details in response\", function () {",
											"    delete jsonData.data[0].groupBy;",
											"    delete jsonData.data[0].notificationExternalId;",
											"    for(let i=0; i<jsonData.data.length; i++){ ",
											"        delete jsonData.data[i].createdAt;",
											"        delete jsonData.data[i].updatedAt;",
											"        delete exp_notification.createdAt;",
											"        delete exp_notification.updatedAt;",
											"    }",
											"",
											"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
											"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
											"    //pm.expect(jsonData).to.eql(exp_notification);",
											"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "dc92c416-45d0-4510-be2f-86fbef043096",
										"exec": [
											"",
											"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ff816682-0bcb-4e11-ae95-5df12acb2f87",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifications?page-size=100&page-number=1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "page-number",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "7cdab220-ab57-4375-8a68-980f99f0384b"
				},
				{
					"name": "By patient",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f68405ac-ff38-4612-a422-d156d7880499",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);",
											"",
											"pm.environment.set(\"test-token\",\"\");",
											"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
											"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e66f56b4-e33e-45dd-a852-ca6bec3a7a64",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0a27baf3-ffa8-4d4c-b10f-30c084a47eee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a care team",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a46ab2af-9491-44a6-a77e-968ee0bc3d99",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a505d86d-31ff-4afa-9362-211c37fb326b",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.environment.set(\"careTeamExternalId\", jsonData.id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5f0e0a3c-a492-435f-b245-460caac35baa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"patientExternalId\": \"{{patientId}}\",\n    \"type\": \"care\",\n    \"providers\": [\n        \"{{UserId1}}\",\n        \"{{UserId2}}\",\n        \"{{UserId3}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/care-team",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"care-team"
									]
								}
							},
							"response": []
						},
						{
							"name": "create assessment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b5bb20e7-0243-4911-99f8-7177b60c67e3",
										"exec": [
											"",
											"const submitted_source_list = ['Web', 'Phone', 'Email'];",
											"",
											"pm.environment.set(\"submittedSource\", submitted_source_list[Math.floor(Math.random() * submitted_source_list.length)]);",
											"pm.environment.set(\"userEmail\", \"balakrishna@equip.health\");",
											"pm.environment.set(\"userPhone\", \"+917842414959\");",
											"pm.environment.set(\"providerFirstname\", \"Bala\");",
											"pm.environment.set(\"providerLastname\", \"000analyst\");",
											"pm.environment.set(\"providerUserid\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "579478fd-8166-4e8c-98c5-5270e129bdba",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify responseExternalId is generated\", function () {",
											"    pm.expect(jsonData.responseExternalId).length.greaterThan(0);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.environment.set(\"assessment_responseExternalId\", jsonData.responseExternalId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "47226454-aef4-4fff-8320-df895be3d6d4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"New\",\n  \"submittedSource\": \"{{submittedSource}}\",\n  \"submittedUserFirstName\": \"{{providerFirstname}}\",\n  \"submittedUserLastName\": \"{{providerLastname}}\",\n  \"submittedUserId\": \"d74afcfb-9786-4dba-9139-c8bbc511783f\",\n  \"surveyName\": \"Intake\",\n  \"toUserEmail\": \"{{userEmail}}\",\n  \"toUserFirstName\": \"{{patientFirstName}}\",\n  \"toUserLastName\": \"{{patientLastName}}\",\n  \"toUserPhone\": \"{{userPhone}}\",\n  \"userId\": \"{{patientId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/assessments",
									"host": [
										"{{host}}"
									],
									"path": [
										"assessments"
									]
								}
							},
							"response": []
						},
						{
							"name": "complete assessment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "45d07be2-0966-4350-b33c-8416dbbad5ae",
										"exec": [
											"",
											"var complete_assessment_json_body = { \"firstName\": \"venkatesh\", \"lastName\": \"a\", \"patientDOB\": \"1989-01-01\", \"assignedGenderAtBirth\": \"Male\", \"patientGender\": \"cis gender-male\", \"patientPronouns\": \"he/his/him\", \"patientEthnicity\": \"Native Hawaiian or other pacific islander\", \"patientHouseholdIncome\": \"$75,000 to $99,999\", \"patientEmail\": \"venky@equip.health\", \"patientPhone\": \"9209374937\", \"patientMail\": \"sdf\", \"patientCity\": \"sdf\", \"patientState\": \"sdgf\", \"patientZipcode\": \"90009\", \"question2\": \"sdfsd\", \"patientPreferredContact\": [\"SMS\", \"Email\"], \"familyTreatmentSupport\": \"0\", \"providerName\": \"medical provider\", \"providerAddress\": \"3-24\", \"providerCity\": \"medical provider city\", \"providerState\": \"mp state\", \"providerZip\": \"sdf\", \"providerEmail\": \"medicalp@gmail.com\", \"providerPhone\": \"0980\", \"lastAppointment\": \"2020-09-09\", \"pharmacyName\": \"preferred pharmacy\", \"medicalConditions\": [\"other\"], \"medicalConditions-Comment\": \"hiper thyroid\", \"physicalSymptoms\": [\"other\"], \"physicalSymptoms-Comment\": \"other symptoms\", \"surgeries\": [\"other\"], \"surgeries-Comment\": \"other surgery\", \"hospitalized\": \"No\", \"currentMedications\": \"No\", \"allergies\": \"No\", \"onsetMenstruation\": \"none\", \"onsetSymptoms\": \"2021-01-02\", \"EDdiagnoses\": [\"other\"], \"EDdiagnoses-Comment\": \"other diagnoses\", \"EDtreatment\": [\"none\"], \"currentTherapsit\": \"No\", \"prescription\": \"No\", \"EDsymptoms\": [\"binge-eating\"], \"caloryIntake\": \"89\", \"food\": [\"other\"], \"food-Comment\": \"other food\", \"height\": \"5.5\", \"weight\": \"70\", \"highestWeight\": \"100\", \"highestDate\": \"2019-02-03\", \"lowestWeight\": \"30\", \"question10\": \"2017-08-09\", \"psychiatricDiagnoses\": [\"depression\"], \"psychiatricSymptoms\": [\"none\"], \"suicideHistory\": \"No\", \"safetyConcerns\": \"No\", \"aggression\": \"No\", \"trauma\": \"No\", \"familyConditions\": [\"none\"], \"suicide\": \"Yes\", \"suicideInfo\": \"additional information\", \"school\": [\"Charter school\"], \"question18\": \"a\", \"accommodations\": [\"504 plan\", \"individualized education program (IEP)\"], \"activities\": [\"other\"], \"activities-Comment\": \"other activity\", \"patientSiblings\": \"No\", \"livingSituation\": [\"other\"], \"livingSituation-Comment\": \"current living situation\" }",
											"",
											"pm.environment.set('complete_assessment_json_body', JSON.stringify(JSON.stringify(complete_assessment_json_body)));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4244ee9a-2b3b-458f-9fc4-4f82e7f264f6",
										"exec": [
											"var jsonData = pm.response.text();",
											"",
											"console.log(\"jsonData: \" + jsonData);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify response\", function () {",
											"    pm.expect(jsonData).to.equal(\"Survey response saved!\");",
											"});",
											"",
											"pm.environment.set(\"test-token\",\"\");",
											"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
											"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "53135460-3186-41fa-9f8a-cf0f59abab1a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"toUserEmail\": \"{{userEmail}}\",\n  \"jsonResults\": {{complete_assessment_json_body}},\n  \"status\": \"Done\",\n  \"submittedSource\": \"{{submittedSource}}\",\n  \"submittedUserId\": \"{{createdByUserId}}\",\n  \"submittedUserFirstName\": \"{{providerFirstname}}\",\n  \"submittedUserLastName\": \"{{providerLastname}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/assessments/{{assessment_responseExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"assessments",
										"{{assessment_responseExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify COMPLETED_INTAKE_SURVEY notification is generated Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "133a7557-7c0d-4bbf-8c15-cd9e83ffdadf",
										"exec": [
											"let moment = require('moment');",
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"let exp_notification = {",
											"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
											"            \"subject\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"                \"type\": \"patient\",",
											"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
											"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
											"            },",
											"            \"eventType\": \"COMPLETED_INTAKE_SURVEY\",",
											"            \"senderId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"            \"sender\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"                \"type\": \"patient\",",
											"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\"",
											"            },",
											"            \"priority\": \"HIGH\",",
											"            \"action\": \"OPEN_PATIENT_PROFILE\",",
											"            \"source\": \"ASSESSMENT\",",
											"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
											"            \"status\": \"NEW\",",
											"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
											"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
											"        };",
											"",
											"pm.test(\"Validate notification details in response\", function () {",
											"    delete jsonData.data[0].groupBy;",
											"    delete jsonData.data[0].notificationExternalId;",
											"    for(let i=0; i<jsonData.data.length; i++){ ",
											"        delete jsonData.data[i].createdAt;",
											"        delete jsonData.data[i].updatedAt;",
											"        delete exp_notification.createdAt;",
											"        delete exp_notification.updatedAt;",
											"    }",
											"",
											"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
											"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
											"    //pm.expect(jsonData).to.eql(exp_notification);",
											"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
											"",
											"});",
											"",
											"pm.environment.set(\"test-token\",\"\");",
											"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId2_username\"));",
											"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId2_password\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e3e69d2d-9b04-415c-b1ff-dde0987b15d3",
										"exec": [
											"",
											"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e6c3557f-54f6-46e1-a077-8ec939ad1ba6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifications?page-size=100&page-number=1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "page-number",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a admissions team",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1a975fab-f4a8-4bf9-8e5b-14ef0e8b77bd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2542d501-505c-47c2-89c1-7da5bbb69e88",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.environment.set(\"admissionTeamExternalId\", jsonData.id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1a4027eb-838d-4eec-9af6-011c951f4b2f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"patientExternalId\": \"{{patientId}}\",\n    \"type\": \"admissions\",\n    \"providers\": [\n        \"{{UserId1}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/care-team",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"care-team"
									]
								}
							},
							"response": []
						},
						{
							"name": "create assessment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cacbab32-6d04-473d-97b0-8e486f097d23",
										"exec": [
											"",
											"const submitted_source_list = ['Web', 'Phone', 'Email'];",
											"",
											"pm.environment.set(\"submittedSource\", submitted_source_list[Math.floor(Math.random() * submitted_source_list.length)]);",
											"pm.environment.set(\"userEmail\", \"balakrishna@equip.health\");",
											"pm.environment.set(\"userPhone\", \"+917842414959\");",
											"pm.environment.set(\"providerFirstname\", \"Bala\");",
											"pm.environment.set(\"providerLastname\", \"000analyst\");",
											"pm.environment.set(\"providerUserid\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0eda5a3f-413f-492d-bd01-f971d1d8c446",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify responseExternalId is generated\", function () {",
											"    pm.expect(jsonData.responseExternalId).length.greaterThan(0);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.environment.set(\"assessment_responseExternalId\", jsonData.responseExternalId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d41686f6-292c-434d-a5b4-b08e1cfd27a2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"New\",\n  \"submittedSource\": \"{{submittedSource}}\",\n  \"submittedUserFirstName\": \"{{providerFirstname}}\",\n  \"submittedUserLastName\": \"{{providerLastname}}\",\n  \"submittedUserId\": \"d74afcfb-9786-4dba-9139-c8bbc511783f\",\n  \"surveyName\": \"Intake\",\n  \"toUserEmail\": \"{{userEmail}}\",\n  \"toUserFirstName\": \"{{patientFirstName}}\",\n  \"toUserLastName\": \"{{patientLastName}}\",\n  \"toUserPhone\": \"{{userPhone}}\",\n  \"userId\": \"{{patientId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/assessments",
									"host": [
										"{{host}}"
									],
									"path": [
										"assessments"
									]
								}
							},
							"response": []
						},
						{
							"name": "complete assessment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3c619c03-8a26-4f31-98c7-21c171f4c48d",
										"exec": [
											"",
											"var complete_assessment_json_body = { \"firstName\": \"venkatesh\", \"lastName\": \"a\", \"patientDOB\": \"1989-01-01\", \"assignedGenderAtBirth\": \"Male\", \"patientGender\": \"cis gender-male\", \"patientPronouns\": \"he/his/him\", \"patientEthnicity\": \"Native Hawaiian or other pacific islander\", \"patientHouseholdIncome\": \"$75,000 to $99,999\", \"patientEmail\": \"venky@equip.health\", \"patientPhone\": \"9209374937\", \"patientMail\": \"sdf\", \"patientCity\": \"sdf\", \"patientState\": \"sdgf\", \"patientZipcode\": \"90009\", \"question2\": \"sdfsd\", \"patientPreferredContact\": [\"SMS\", \"Email\"], \"familyTreatmentSupport\": \"0\", \"providerName\": \"medical provider\", \"providerAddress\": \"3-24\", \"providerCity\": \"medical provider city\", \"providerState\": \"mp state\", \"providerZip\": \"sdf\", \"providerEmail\": \"medicalp@gmail.com\", \"providerPhone\": \"0980\", \"lastAppointment\": \"2020-09-09\", \"pharmacyName\": \"preferred pharmacy\", \"medicalConditions\": [\"other\"], \"medicalConditions-Comment\": \"hiper thyroid\", \"physicalSymptoms\": [\"other\"], \"physicalSymptoms-Comment\": \"other symptoms\", \"surgeries\": [\"other\"], \"surgeries-Comment\": \"other surgery\", \"hospitalized\": \"No\", \"currentMedications\": \"No\", \"allergies\": \"No\", \"onsetMenstruation\": \"none\", \"onsetSymptoms\": \"2021-01-02\", \"EDdiagnoses\": [\"other\"], \"EDdiagnoses-Comment\": \"other diagnoses\", \"EDtreatment\": [\"none\"], \"currentTherapsit\": \"No\", \"prescription\": \"No\", \"EDsymptoms\": [\"binge-eating\"], \"caloryIntake\": \"89\", \"food\": [\"other\"], \"food-Comment\": \"other food\", \"height\": \"5.5\", \"weight\": \"70\", \"highestWeight\": \"100\", \"highestDate\": \"2019-02-03\", \"lowestWeight\": \"30\", \"question10\": \"2017-08-09\", \"psychiatricDiagnoses\": [\"depression\"], \"psychiatricSymptoms\": [\"none\"], \"suicideHistory\": \"No\", \"safetyConcerns\": \"No\", \"aggression\": \"No\", \"trauma\": \"No\", \"familyConditions\": [\"none\"], \"suicide\": \"Yes\", \"suicideInfo\": \"additional information\", \"school\": [\"Charter school\"], \"question18\": \"a\", \"accommodations\": [\"504 plan\", \"individualized education program (IEP)\"], \"activities\": [\"other\"], \"activities-Comment\": \"other activity\", \"patientSiblings\": \"No\", \"livingSituation\": [\"other\"], \"livingSituation-Comment\": \"current living situation\" }",
											"",
											"pm.environment.set('complete_assessment_json_body', JSON.stringify(JSON.stringify(complete_assessment_json_body)));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e4d1002e-faf5-4848-a669-2223d7855cb8",
										"exec": [
											"var jsonData = pm.response.text();",
											"",
											"console.log(\"jsonData: \" + jsonData);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify response\", function () {",
											"    pm.expect(jsonData).to.equal(\"Survey response saved!\");",
											"});",
											"",
											"pm.environment.set(\"test-token\",\"\");",
											"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
											"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6b3a24f0-f3c3-47a1-a345-62a41c59df76",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"toUserEmail\": \"{{userEmail}}\",\n  \"jsonResults\": {{complete_assessment_json_body}},\n  \"status\": \"Done\",\n  \"submittedSource\": \"{{submittedSource}}\",\n  \"submittedUserId\": \"{{createdByUserId}}\",\n  \"submittedUserFirstName\": \"{{providerFirstname}}\",\n  \"submittedUserLastName\": \"{{providerLastname}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/assessments/{{assessment_responseExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"assessments",
										"{{assessment_responseExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify COMPLETED_INTAKE_SURVEY notification is generated Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "616da1a2-4bed-4246-9cd5-b8f52a1b89cc",
										"exec": [
											"let moment = require('moment');",
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"let exp_notification = {",
											"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
											"            \"subject\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"                \"type\": \"patient\",",
											"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
											"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
											"            },",
											"            \"eventType\": \"COMPLETED_INTAKE_SURVEY\",",
											"            \"senderId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"            \"sender\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"                \"type\": \"patient\",",
											"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\"",
											"            },",
											"            \"priority\": \"HIGH\",",
											"            \"action\": \"OPEN_PATIENT_PROFILE\",",
											"            \"source\": \"ASSESSMENT\",",
											"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
											"            \"status\": \"NEW\",",
											"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
											"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
											"        };",
											"",
											"pm.test(\"Validate notification details in response\", function () {",
											"    delete jsonData.data[0].groupBy;",
											"    delete jsonData.data[0].notificationExternalId;",
											"    for(let i=0; i<jsonData.data.length; i++){ ",
											"        delete jsonData.data[i].createdAt;",
											"        delete jsonData.data[i].updatedAt;",
											"        delete exp_notification.createdAt;",
											"        delete exp_notification.updatedAt;",
											"    }",
											"",
											"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
											"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
											"    //pm.expect(jsonData).to.eql(exp_notification);",
											"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d388fc99-e1d0-484e-b4d5-08710fb5e268",
										"exec": [
											"",
											"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9ad5bd86-3148-4aec-8608-03cc8258f200",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifications?page-size=100&page-number=1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "page-number",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update admission team",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f684722d-e8f9-4bc2-9a7d-8ed221cc73ee",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "66c09a63-2821-4cfb-a266-f2d2159e031e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.environment.set(\"test-token\",\"\");",
											"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId3_username\"));",
											"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId3_password\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3e34d6be-9d44-412a-9f03-b6db63fd48a2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"providers\": [\n        \"{{UserId2}}\",\n        \"{{UserId3}}\",\n        \"{{UserId4}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/care-team/{{admissionTeamExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"care-team",
										"{{admissionTeamExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create assessment Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "dd5166cf-dbed-460a-a164-fb694b110dfd",
										"exec": [
											"",
											"const submitted_source_list = ['Web', 'Phone', 'Email'];",
											"",
											"pm.environment.set(\"submittedSource\", submitted_source_list[Math.floor(Math.random() * submitted_source_list.length)]);",
											"pm.environment.set(\"userEmail\", \"balakrishna@equip.health\");",
											"pm.environment.set(\"userPhone\", \"+917842414959\");",
											"pm.environment.set(\"providerFirstname\", \"Bala\");",
											"pm.environment.set(\"providerLastname\", \"000analyst\");",
											"pm.environment.set(\"providerUserid\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8fc6d6b2-06a4-49f9-a922-ebaffa9522fa",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify responseExternalId is generated\", function () {",
											"    pm.expect(jsonData.responseExternalId).length.greaterThan(0);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.environment.set(\"assessment_responseExternalId\", jsonData.responseExternalId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "01eeb6eb-b863-48ac-b79e-e2ad8ec3eac3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"New\",\n  \"submittedSource\": \"{{submittedSource}}\",\n  \"submittedUserFirstName\": \"{{providerFirstname}}\",\n  \"submittedUserLastName\": \"{{providerLastname}}\",\n  \"submittedUserId\": \"d74afcfb-9786-4dba-9139-c8bbc511783f\",\n  \"surveyName\": \"Intake\",\n  \"toUserEmail\": \"{{userEmail}}\",\n  \"toUserFirstName\": \"{{patientFirstName}}\",\n  \"toUserLastName\": \"{{patientLastName}}\",\n  \"toUserPhone\": \"{{userPhone}}\",\n  \"userId\": \"{{patientId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/assessments",
									"host": [
										"{{host}}"
									],
									"path": [
										"assessments"
									]
								}
							},
							"response": []
						},
						{
							"name": "complete assessment Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a33b4079-c893-4620-8f8b-26d5ccfc8854",
										"exec": [
											"",
											"var complete_assessment_json_body = { \"firstName\": \"venkatesh\", \"lastName\": \"a\", \"patientDOB\": \"1989-01-01\", \"assignedGenderAtBirth\": \"Male\", \"patientGender\": \"cis gender-male\", \"patientPronouns\": \"he/his/him\", \"patientEthnicity\": \"Native Hawaiian or other pacific islander\", \"patientHouseholdIncome\": \"$75,000 to $99,999\", \"patientEmail\": \"venky@equip.health\", \"patientPhone\": \"9209374937\", \"patientMail\": \"sdf\", \"patientCity\": \"sdf\", \"patientState\": \"sdgf\", \"patientZipcode\": \"90009\", \"question2\": \"sdfsd\", \"patientPreferredContact\": [\"SMS\", \"Email\"], \"familyTreatmentSupport\": \"0\", \"providerName\": \"medical provider\", \"providerAddress\": \"3-24\", \"providerCity\": \"medical provider city\", \"providerState\": \"mp state\", \"providerZip\": \"sdf\", \"providerEmail\": \"medicalp@gmail.com\", \"providerPhone\": \"0980\", \"lastAppointment\": \"2020-09-09\", \"pharmacyName\": \"preferred pharmacy\", \"medicalConditions\": [\"other\"], \"medicalConditions-Comment\": \"hiper thyroid\", \"physicalSymptoms\": [\"other\"], \"physicalSymptoms-Comment\": \"other symptoms\", \"surgeries\": [\"other\"], \"surgeries-Comment\": \"other surgery\", \"hospitalized\": \"No\", \"currentMedications\": \"No\", \"allergies\": \"No\", \"onsetMenstruation\": \"none\", \"onsetSymptoms\": \"2021-01-02\", \"EDdiagnoses\": [\"other\"], \"EDdiagnoses-Comment\": \"other diagnoses\", \"EDtreatment\": [\"none\"], \"currentTherapsit\": \"No\", \"prescription\": \"No\", \"EDsymptoms\": [\"binge-eating\"], \"caloryIntake\": \"89\", \"food\": [\"other\"], \"food-Comment\": \"other food\", \"height\": \"5.5\", \"weight\": \"70\", \"highestWeight\": \"100\", \"highestDate\": \"2019-02-03\", \"lowestWeight\": \"30\", \"question10\": \"2017-08-09\", \"psychiatricDiagnoses\": [\"depression\"], \"psychiatricSymptoms\": [\"none\"], \"suicideHistory\": \"No\", \"safetyConcerns\": \"No\", \"aggression\": \"No\", \"trauma\": \"No\", \"familyConditions\": [\"none\"], \"suicide\": \"Yes\", \"suicideInfo\": \"additional information\", \"school\": [\"Charter school\"], \"question18\": \"a\", \"accommodations\": [\"504 plan\", \"individualized education program (IEP)\"], \"activities\": [\"other\"], \"activities-Comment\": \"other activity\", \"patientSiblings\": \"No\", \"livingSituation\": [\"other\"], \"livingSituation-Comment\": \"current living situation\" }",
											"",
											"pm.environment.set('complete_assessment_json_body', JSON.stringify(JSON.stringify(complete_assessment_json_body)));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a0721433-4e28-4d9d-add0-996dcbbb00c1",
										"exec": [
											"var jsonData = pm.response.text();",
											"",
											"console.log(\"jsonData: \" + jsonData);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify response\", function () {",
											"    pm.expect(jsonData).to.equal(\"Survey response saved!\");",
											"});",
											"",
											"pm.environment.set(\"test-token\",\"\");",
											"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
											"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "76c1eb11-5d16-401f-893b-a2190926fc67",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"toUserEmail\": \"{{userEmail}}\",\n  \"jsonResults\": {{complete_assessment_json_body}},\n  \"status\": \"Done\",\n  \"submittedSource\": \"{{submittedSource}}\",\n  \"submittedUserId\": \"{{createdByUserId}}\",\n  \"submittedUserFirstName\": \"{{providerFirstname}}\",\n  \"submittedUserLastName\": \"{{providerLastname}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/assessments/{{assessment_responseExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"assessments",
										"{{assessment_responseExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify COMPLETED_INTAKE_SURVEY notification is generated for User1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "30b07075-8835-4a62-8010-3eb52751cd87",
										"exec": [
											"let moment = require('moment');",
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"let exp_notification = {",
											"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
											"            \"subject\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"                \"type\": \"patient\",",
											"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
											"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
											"            },",
											"            \"eventType\": \"COMPLETED_INTAKE_SURVEY\",",
											"            \"senderId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"            \"sender\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"                \"type\": \"patient\",",
											"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\"",
											"            },",
											"            \"priority\": \"HIGH\",",
											"            \"action\": \"OPEN_PATIENT_PROFILE\",",
											"            \"source\": \"ASSESSMENT\",",
											"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
											"            \"status\": \"NEW\",",
											"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
											"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
											"        };",
											"",
											"pm.test(\"Validate notification details in response\", function () {",
											"    delete jsonData.data[0].groupBy;",
											"    delete jsonData.data[0].notificationExternalId;",
											"    for(let i=0; i<jsonData.data.length; i++){ ",
											"        delete jsonData.data[i].createdAt;",
											"        delete jsonData.data[i].updatedAt;",
											"        delete exp_notification.createdAt;",
											"        delete exp_notification.updatedAt;",
											"    }",
											"",
											"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
											"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
											"    //pm.expect(jsonData).to.eql(exp_notification);",
											"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
											"",
											"});",
											"",
											"pm.environment.set(\"test-token\",\"\");",
											"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId4_username\"));",
											"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId4_password\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4ff8dfa2-6a12-4193-a97e-c6d119b6457c",
										"exec": [
											"",
											"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5ffcac30-e410-4236-84bd-3c96f1bffd07",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifications?page-size=100&page-number=1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "page-number",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify COMPLETED_INTAKE_SURVEY notification is generated User2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf274a8e-6548-44e0-b39b-25400bc26a21",
										"exec": [
											"let moment = require('moment');",
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"let exp_notification = {",
											"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
											"            \"subject\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"                \"type\": \"patient\",",
											"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
											"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
											"            },",
											"            \"eventType\": \"COMPLETED_INTAKE_SURVEY\",",
											"            \"senderId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"            \"sender\": {",
											"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
											"                \"type\": \"patient\",",
											"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
											"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\"",
											"            },",
											"            \"priority\": \"HIGH\",",
											"            \"action\": \"OPEN_PATIENT_PROFILE\",",
											"            \"source\": \"ASSESSMENT\",",
											"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
											"            \"status\": \"NEW\",",
											"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
											"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
											"        };",
											"",
											"pm.test(\"Validate notification details in response\", function () {",
											"    delete jsonData.data[0].groupBy;",
											"    delete jsonData.data[0].notificationExternalId;",
											"    for(let i=0; i<jsonData.data.length; i++){ ",
											"        delete jsonData.data[i].createdAt;",
											"        delete jsonData.data[i].updatedAt;",
											"        delete exp_notification.createdAt;",
											"        delete exp_notification.updatedAt;",
											"    }",
											"",
											"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
											"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
											"    //pm.expect(jsonData).to.eql(exp_notification);",
											"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "02aca028-f6fd-409a-bba9-323ac52fdd13",
										"exec": [
											"",
											"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c6ac114f-724c-42cf-a9a6-7595698a2701",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifications?page-size=100&page-number=1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "page-number",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "9c621cd8-d20f-4e70-9a69-ff2b9d5051cc"
				}
			],
			"id": "894e82c7-b8af-4c04-bc3d-16884aaa4a74",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "82275ce5-c80d-436f-b084-e9aaceab7351",
						"type": "text/javascript",
						"exec": [
							"",
							"if(pm.environment.name === \"qa\"){",
							"    pm.environment.set(\"UserId1\", \"80f2dea3-0c9c-4a97-b30d-0dbfa6b31cc1\")",
							"    pm.environment.set(\"UserId1_username\", \"balakrishna+as1@equip.health\");",
							"    pm.environment.set(\"UserId1_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname1\", \"Balakrishna\");",
							"    pm.environment.set(\"UserLastname1\", \"AS1\");",
							"    pm.environment.set(\"UserType1\", \"Admissions Specialist\");",
							"",
							"    pm.environment.set(\"UserId2\", \"af2215db-647f-4b20-8f6a-f2f3db0ce5ee\")",
							"    pm.environment.set(\"UserId2_username\", \"maud_scheduling+psr@equip.health\");",
							"    pm.environment.set(\"UserId2_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname2\", \"Maud\");",
							"    pm.environment.set(\"UserLastname2\", \"Scheduling\");",
							"    pm.environment.set(\"UserType2\", \"Patient Service Representative\");",
							"",
							"    pm.environment.set(\"UserId3\", \"0a113848-7671-42b2-bb7c-82a980a4393f\")",
							"    pm.environment.set(\"UserId3_username\", \"balakrishna+psr@equip.health\");",
							"    pm.environment.set(\"UserId3_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname3\", \"Bala\");",
							"    pm.environment.set(\"UserLastname3\", \"Deema\");",
							"    pm.environment.set(\"UserType3\", \"Patient Service Representative\");",
							"",
							"    pm.environment.set(\"UserId4\", \"aa2cef2d-fe3a-4f72-9a92-e6b114c3c668\")",
							"    pm.environment.set(\"UserId4_username\", \"balakrishna+as2@equip.health\");",
							"    pm.environment.set(\"UserId4_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname4\", \"Balakrishna\");",
							"    pm.environment.set(\"UserLastname4\", \"AS2\");",
							"    pm.environment.set(\"UserType4\", \"Admissions Specialist\");",
							"}else{",
							"    pm.environment.set(\"UserId1\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\")",
							"    pm.environment.set(\"UserId1_username\", \"balakrishna+admissionspecialist@equip.health\");",
							"    pm.environment.set(\"UserId1_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname1\", \"Bala\");",
							"    pm.environment.set(\"UserLastname1\", \"Deem\");",
							"    pm.environment.set(\"UserType1\", \"Admissions Specialist\");",
							"",
							"    pm.environment.set(\"UserId2\", \"61e1108d-a4cd-4f4d-92bc-eb214e8594c6\")",
							"    pm.environment.set(\"UserId2_username\", \"balakrishna+dietitian@equip.health\");",
							"    pm.environment.set(\"UserId2_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname2\", \"Balakrishna\");",
							"    pm.environment.set(\"UserLastname2\", \"Deema\");",
							"    pm.environment.set(\"UserType2\", \"Dietitian\");",
							"",
							"    pm.environment.set(\"UserId3\", \"a4684d41-f12f-4e96-af65-9ff44d723d61\")",
							"    pm.environment.set(\"UserId3_username\", \"maud_scheduling+psr@equip.health\");",
							"    pm.environment.set(\"UserId3_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname3\", \"Maud\");",
							"    pm.environment.set(\"UserLastname3\", \"Scheduling\");",
							"    pm.environment.set(\"UserType3\", \"Patient Service Representative\");",
							"",
							"    pm.environment.set(\"UserId4\", \"f32d83dc-1271-4efc-b05f-aa5632fd0a9b\")",
							"    pm.environment.set(\"UserId4_username\", \"balakrishna+as@equip.health\");",
							"    pm.environment.set(\"UserId4_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname4\", \"Bala\");",
							"    pm.environment.set(\"UserLastname4\", \"AS\");",
							"    pm.environment.set(\"UserType4\", \"Admissions Specialist\");",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6c92b652-8085-4657-bdb6-296f951b15b9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "FEN patient contact update notifications",
			"item": [
				{
					"name": "Add Patient Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27d58625-d046-4232-ae54-d3f4c6aff100",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"patientId\", jsonData.id);",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "72e5b1f6-f387-4ffb-b672-839c20301d8b",
								"exec": [
									"let ld = require('lodash');",
									"",
									"let gendersList = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"let pronounsList = [",
									"    \"He/Him/His\",",
									"    \"She/Her/Hers\",",
									"    \"They/Them/Theirs\",",
									"    \"Other\"",
									"];",
									"",
									"let ethnicitiesList = [",
									"    \"Asian\",",
									"    \"Black/African American\",",
									"    \"White/Caucasian\",",
									"    \"Hispanic/Latinx\",",
									"    \"Native American, Indian American, or Alaska Native\",",
									"    \"Native Hawaiian or other Pacific Islander\",",
									"    \"Middle Eastern or North African\",",
									"    \"Prefer not to answer\",",
									"    \"Other\"",
									"];",
									"",
									"let languagesList = [",
									"    \"English\",",
									"    \"Spanish\",",
									"    \"Chinese\",",
									"    \"French\",",
									"    \"Tagalog\",",
									"    \"Vietnamese\",",
									"    \"Korean\",",
									"    \"German\",",
									"    \"Russian\",",
									"    \"Italian\",",
									"    \"Portuguese\",",
									"    \"Polish\",",
									"    \"Japanese\",",
									"    \"Persian\",",
									"    \"Greek\",",
									"    \"Serbo-Croatian\",",
									"    \"Armenian\",",
									"    \"Yiddish\",",
									"    \"American Sign Language (ASL)\"",
									"];",
									"",
									"let sexList = [",
									"    \"Male\",",
									"    \"Female\"",
									"];",
									"",
									"let timezonesList = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\"",
									"];",
									"",
									"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"patientFirstName\", firstName);",
									"pm.environment.set(\"patientLastName\", lastName);",
									"pm.environment.set(\"patientEmail\", email);",
									"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientChosenName\", chosenName);",
									"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
									"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
									"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientCountry\", \"US\");",
									"pm.environment.set(\"patientZip\", zip.toString());",
									"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
									"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
									"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientSex\", ld.sample(sexList));",
									"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
									"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "875fd106-5794-407a-aae0-23d7b2e01517",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a care team",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "41fc674b-a5ef-438d-b944-266ca5fed83e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3247b6a5-d683-4f48-a241-83aed972fc41",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set(\"careTeamExternalId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9ce583a2-a140-46a2-b40c-c5624eee99aa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientExternalId\": \"{{patientId}}\",\n    \"type\": \"care\",\n    \"providers\": [\n        \"{{UserId1}}\",\n        \"{{UserId2}}\",\n        \"{{UserId3}}\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/care-team",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"care-team"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef7e39fb-82bc-4879-bfd7-ca2b4abc901b",
								"exec": [
									"let notificationsList = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"notificationsList\", notificationsList);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3d7f3a8c-1c1f-4664-ada8-a871d805775d",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5a93c449-b030-4bed-96b8-60c009f03bb2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Patient phone",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fe4b6276-f74f-4602-92a8-59fbacfbfe37",
								"exec": [
									"let ld = require('lodash');",
									"",
									"let gendersList = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"let pronounsList = [",
									"    \"He/Him/His\",",
									"    \"She/Her/Hers\",",
									"    \"They/Them/Theirs\",",
									"    \"Other\"",
									"];",
									"",
									"let ethnicitiesList = [",
									"    \"Asian\",",
									"    \"Black/African American\",",
									"    \"White/Caucasian\",",
									"    \"Hispanic/Latinx\",",
									"    \"Native American, Indian American, or Alaska Native\",",
									"    \"Native Hawaiian or other Pacific Islander\",",
									"    \"Middle Eastern or North African\",",
									"    \"Prefer not to answer\",",
									"    \"Other\"",
									"];",
									"",
									"let languagesList = [",
									"    \"English\",",
									"    \"Spanish\",",
									"    \"Chinese\",",
									"    \"French\",",
									"    \"Tagalog\",",
									"    \"Vietnamese\",",
									"    \"Korean\",",
									"    \"German\",",
									"    \"Russian\",",
									"    \"Italian\",",
									"    \"Portuguese\",",
									"    \"Polish\",",
									"    \"Japanese\",",
									"    \"Persian\",",
									"    \"Greek\",",
									"    \"Serbo-Croatian\",",
									"    \"Armenian\",",
									"    \"Yiddish\",",
									"    \"American Sign Language (ASL)\"",
									"];",
									"",
									"let sexList = [",
									"    \"Male\",",
									"    \"Female\"",
									"];",
									"",
									"let timezonesList = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\"",
									"];",
									"",
									"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"//Save the variables to be used in next request for validation",
									"// pm.environment.set(\"patientFirstName\", firstName);",
									"// pm.environment.set(\"patientLastName\", lastName);",
									"// pm.environment.set(\"patientEmail\", email);",
									"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientChosenName\", chosenName);",
									"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
									"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
									"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientCountry\", \"US\");",
									"pm.environment.set(\"patientZip\", zip.toString());",
									"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
									"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
									"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientSex\", ld.sample(sexList));",
									"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
									"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "31043373-6812-4b2e-8799-1b086ec2322f",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"//pm.environment.set(\"patientId\", jsonData.id);",
									"// pm.sendRequest(\"Get Patient by ID\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e452bded-9028-4927-b5ff-5d932524861f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients/{{patientId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients",
								"{{patientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify notification is not generated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ccfb891b-ba46-4954-bf67-a9fd81caeb4a",
								"exec": [
									"let response = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify notification record is not created if the user add to the care team by them self\", function () {",
									"    if(JSON.stringify(pm.environment.get(\"notificationsList\")) === JSON.stringify(response))",
									"        console.log(\"PASS\");",
									"    else",
									"        pm.expect.fail(\"Notification is created\");",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId2_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId2_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b0b00e9b-f8ef-472f-b3fc-d01a06835686",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "48da9fce-89a8-4ad8-a8ab-51f51928e148",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove patient phone and email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "63ed9b2b-348f-4940-ac15-0e070f73051b",
								"exec": [
									"let ld = require('lodash');",
									"",
									"let gendersList = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"let pronounsList = [",
									"    \"He/Him/His\",",
									"    \"She/Her/Hers\",",
									"    \"They/Them/Theirs\",",
									"    \"Other\"",
									"];",
									"",
									"let ethnicitiesList = [",
									"    \"Asian\",",
									"    \"Black/African American\",",
									"    \"White/Caucasian\",",
									"    \"Hispanic/Latinx\",",
									"    \"Native American, Indian American, or Alaska Native\",",
									"    \"Native Hawaiian or other Pacific Islander\",",
									"    \"Middle Eastern or North African\",",
									"    \"Prefer not to answer\",",
									"    \"Other\"",
									"];",
									"",
									"let languagesList = [",
									"    \"English\",",
									"    \"Spanish\",",
									"    \"Chinese\",",
									"    \"French\",",
									"    \"Tagalog\",",
									"    \"Vietnamese\",",
									"    \"Korean\",",
									"    \"German\",",
									"    \"Russian\",",
									"    \"Italian\",",
									"    \"Portuguese\",",
									"    \"Polish\",",
									"    \"Japanese\",",
									"    \"Persian\",",
									"    \"Greek\",",
									"    \"Serbo-Croatian\",",
									"    \"Armenian\",",
									"    \"Yiddish\",",
									"    \"American Sign Language (ASL)\"",
									"];",
									"",
									"let sexList = [",
									"    \"Male\",",
									"    \"Female\"",
									"];",
									"",
									"let timezonesList = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\"",
									"];",
									"",
									"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"//Save the variables to be used in next request for validation",
									"// pm.environment.set(\"patientFirstName\", firstName);",
									"// pm.environment.set(\"patientLastName\", lastName);",
									"// pm.environment.set(\"patientEmail\", email);",
									"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientChosenName\", chosenName);",
									"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
									"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
									"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientCountry\", \"US\");",
									"pm.environment.set(\"patientZip\", zip.toString());",
									"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
									"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
									"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientSex\", ld.sample(sexList));",
									"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
									"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d6a1ff6f-c3e7-4d93-b1f3-65e1ea2c2039",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"//pm.environment.set(\"patientId\", jsonData.id);",
									"// pm.sendRequest(\"Get Patient by ID\");",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8119e5f4-a917-4cf2-9d4a-62e2a02853c9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients/{{patientId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients",
								"{{patientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify notification is generated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e249b18f-2036-4bd4-9f11-ec78ce155cca",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_CONTACTS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"            \"sender\": {",
									"               \"externalId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname2\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname2\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"USER\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId2_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId2_password\"));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6f03ddb6-fa98-4c49-88c8-30588532c659",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "347ce040-9e0d-434c-991a-fdf07267d580",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a admissions team",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "31877416-1bc3-4fd8-9ce9-33a44d12d7ab",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d5edd6e8-3707-4b1a-b40c-1cd271482aa8",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set(\"admissionTeamExternalId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e8b3eebe-8228-437a-80f8-f710a32d1664",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientExternalId\": \"{{patientId}}\",\n    \"type\": \"admissions\",\n    \"providers\": [\n        \"{{UserId1}}\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/care-team",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"care-team"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Patient email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "06402967-cd17-4674-89ce-cc6c58914ab8",
								"exec": [
									"let ld = require('lodash');",
									"",
									"let gendersList = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"let pronounsList = [",
									"    \"He/Him/His\",",
									"    \"She/Her/Hers\",",
									"    \"They/Them/Theirs\",",
									"    \"Other\"",
									"];",
									"",
									"let ethnicitiesList = [",
									"    \"Asian\",",
									"    \"Black/African American\",",
									"    \"White/Caucasian\",",
									"    \"Hispanic/Latinx\",",
									"    \"Native American, Indian American, or Alaska Native\",",
									"    \"Native Hawaiian or other Pacific Islander\",",
									"    \"Middle Eastern or North African\",",
									"    \"Prefer not to answer\",",
									"    \"Other\"",
									"];",
									"",
									"let languagesList = [",
									"    \"English\",",
									"    \"Spanish\",",
									"    \"Chinese\",",
									"    \"French\",",
									"    \"Tagalog\",",
									"    \"Vietnamese\",",
									"    \"Korean\",",
									"    \"German\",",
									"    \"Russian\",",
									"    \"Italian\",",
									"    \"Portuguese\",",
									"    \"Polish\",",
									"    \"Japanese\",",
									"    \"Persian\",",
									"    \"Greek\",",
									"    \"Serbo-Croatian\",",
									"    \"Armenian\",",
									"    \"Yiddish\",",
									"    \"American Sign Language (ASL)\"",
									"];",
									"",
									"let sexList = [",
									"    \"Male\",",
									"    \"Female\"",
									"];",
									"",
									"let timezonesList = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\"",
									"];",
									"",
									"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"//Save the variables to be used in next request for validation",
									"// pm.environment.set(\"patientFirstName\", firstName);",
									"// pm.environment.set(\"patientLastName\", lastName);",
									" pm.environment.set(\"patientEmail\", email);",
									"//pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientChosenName\", chosenName);",
									"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
									"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
									"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientCountry\", \"US\");",
									"pm.environment.set(\"patientZip\", zip.toString());",
									"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
									"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
									"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientSex\", ld.sample(sexList));",
									"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
									"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "05067a81-bd48-432b-b59c-82630c5fd7a3",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"//pm.environment.set(\"patientId\", jsonData.id);",
									"// pm.sendRequest(\"Get Patient by ID\");",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f8c8587f-d4ea-435b-9050-072745ad9667",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients/{{patientId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients",
								"{{patientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify notification is generated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da28baa6-a420-4c76-ac57-eb8b303a24dd",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_CONTACTS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"            \"sender\": {",
									"               \"externalId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname2\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname2\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"USER\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e8de3bbc-9942-4602-accd-c4ae899f1542",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ffc3a260-8fcc-4f24-a8a5-1d7debbf2dc2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update admissions team",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9d1b71d2-48f3-474e-b84c-2044ef78faa8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1fc522a7-388d-4a76-b71e-e65bb971ab49",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId3_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId3_password\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9c76dd3c-80bf-464d-bbff-797d1808efc8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"providers\": [\n        \"{{UserId2}}\",\n        \"{{UserId3}}\",\n        \"{{UserId4}}\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/care-team/{{admissionTeamExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"care-team",
								"{{admissionTeamExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Patient Copy 4",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fc15c5bb-7b1d-4925-bb2b-472404d331ec",
								"exec": [
									"let ld = require('lodash');",
									"",
									"let gendersList = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"let pronounsList = [",
									"    \"He/Him/His\",",
									"    \"She/Her/Hers\",",
									"    \"They/Them/Theirs\",",
									"    \"Other\"",
									"];",
									"",
									"let ethnicitiesList = [",
									"    \"Asian\",",
									"    \"Black/African American\",",
									"    \"White/Caucasian\",",
									"    \"Hispanic/Latinx\",",
									"    \"Native American, Indian American, or Alaska Native\",",
									"    \"Native Hawaiian or other Pacific Islander\",",
									"    \"Middle Eastern or North African\",",
									"    \"Prefer not to answer\",",
									"    \"Other\"",
									"];",
									"",
									"let languagesList = [",
									"    \"English\",",
									"    \"Spanish\",",
									"    \"Chinese\",",
									"    \"French\",",
									"    \"Tagalog\",",
									"    \"Vietnamese\",",
									"    \"Korean\",",
									"    \"German\",",
									"    \"Russian\",",
									"    \"Italian\",",
									"    \"Portuguese\",",
									"    \"Polish\",",
									"    \"Japanese\",",
									"    \"Persian\",",
									"    \"Greek\",",
									"    \"Serbo-Croatian\",",
									"    \"Armenian\",",
									"    \"Yiddish\",",
									"    \"American Sign Language (ASL)\"",
									"];",
									"",
									"let sexList = [",
									"    \"Male\",",
									"    \"Female\"",
									"];",
									"",
									"let timezonesList = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\"",
									"];",
									"",
									"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"//Save the variables to be used in next request for validation",
									"// pm.environment.set(\"patientFirstName\", firstName);",
									"// pm.environment.set(\"patientLastName\", lastName);",
									"pm.environment.set(\"patientEmail\", email);",
									"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientChosenName\", chosenName);",
									"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
									"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
									"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientCountry\", \"US\");",
									"pm.environment.set(\"patientZip\", zip.toString());",
									"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
									"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
									"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientSex\", ld.sample(sexList));",
									"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
									"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fd462955-9d66-4823-b79e-9670e12d6313",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"//pm.environment.set(\"patientId\", jsonData.id);",
									"// pm.sendRequest(\"Get Patient by ID\");",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7e5f1f42-bc77-4e5c-9154-9eac50b07cc2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients/{{patientId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients",
								"{{patientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify notification is generated Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39d4c67a-f1b9-48e9-be01-157c91cab930",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_CONTACTS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
									"            \"sender\": {",
									"               \"externalId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname3\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname3\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"USER\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId4_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId4_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "682cf922-0df5-4c52-b1eb-cab21b67af36",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "77217b90-30a1-489d-82f1-6011f9b31073",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify notification is generated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "811d9b04-a34a-443a-b531-6e6cc34831db",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_CONTACTS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
									"            \"sender\": {",
									"               \"externalId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname3\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname3\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"USER\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId4_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId4_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "963be53b-70f1-4bf0-b757-474821894cde",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "dea2fa70-bc69-450b-a085-7ec41d0967d8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add patient contact",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "97dc6d9d-d7b4-457b-a6f8-6a4c8c381d98",
								"exec": [
									"let ld = require('lodash');",
									"const relation_to_patient = [",
									"    \"Case Manager/Discharge Planner\",",
									"    \"Community org/non-profit\",",
									"    \"Community professional\",",
									"    \"Dietitian\",",
									"    \"Doctor\",",
									"    \"Eating disorder coach/advocate\",",
									"    \"Executive\",",
									"    \"Family member\",",
									"    \"Father\",",
									"    \"Friend\",",
									"    \"Grandparent\",",
									"    \"Guardian\",",
									"    \"Hospital\",",
									"    \"Insurance company\",",
									"    \"Mother\",",
									"    \"Nurse\",",
									"    \"Nurse practitioner\",",
									"    \"Other\",",
									"    \"Outreach professional\",",
									"    \"Parent (non-binary)\",",
									"    \"Payor case manager\",",
									"    \"Physician Assistant\",",
									"    \"Physician: Adolescent Medicine/Eating Disorder Specialist\",",
									"    \"Physician: Endocrinologist\",",
									"    \"Physician: Family Medicine\",",
									"    \"Physician: Gastroenterologist\",",
									"    \"Physician: Other specialist\",",
									"    \"Physician: PCP (non-peds)\",",
									"    \"Physician: Pediatrician\",",
									"    \"Practice Manager\",",
									"    \"Psychiatrist\",",
									"    \"Psychologist\",",
									"    \"Referral Coordinator\",",
									"    \"School nurse\",",
									"    \"School therapist/counselor\",",
									"    \"Sibling\",",
									"    \"Stepfather\",",
									"    \"Stepmother\",",
									"    \"Stepparent\",",
									"    \"Therapist\",",
									"    \"Treatment Center (eating disorder)\"",
									"];",
									"",
									"const yesorno = [\"Yes\", \"No\"];",
									"const trueorfalse = [true, false];",
									"",
									"const contactPreferences = [",
									"    \"Unknown\",",
									"    \"Email\",",
									"    \"Phone\",",
									"    \"No preference\"",
									"]",
									"",
									"const genders = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"const pronoun = [",
									"  \"He/Him/His\",",
									"  \"She/Her/Hers\",",
									"  \"They/Them/Theirs\",",
									"  \"Other\",",
									"  \"Ey/Em/Eirs\",",
									"  \"Xe/Xem/Xir\",",
									"  \"(F)ae/(F)aer/(F)aers\",",
									"  \"None\"",
									"];",
									"",
									"const languages = [",
									"  \"Afrikaans\",",
									"  \"American Sign Language (ASL)\",",
									"  \"Armenian\",",
									"  \"Bamanankan\",",
									"  \"Bavarian\",",
									"  \"Bengali\",",
									"  \"Bhojpuri\",",
									"  \"Burmese\",",
									"  \"Cameroonian Pidgin\",",
									"  \"Cebuano\",",
									"  \"Chinese (Mandarin)\",",
									"  \"Chinese (Wu/Shanghainese)\",",
									"  \"Chinese (Yue/Cantonese)\",",
									"  \"Chittagonian\",",
									"  \"Czech\",",
									"  \"Deccan\",",
									"  \"Dutch\",",
									"  \"Eastern Punjabi\",",
									"  \"Egyptian Spoken Arabic\",",
									"  \"English\",",
									"  \"Filipino\",",
									"  \"French\",",
									"  \"Gan Chinese\",",
									"  \"Greek\",",
									"  \"Gujarati\",",
									"  \"Hakka Chinese\",",
									"  \"Hausa\",",
									"  \"Hindi\",",
									"  \"Hungarian\",",
									"  \"Igbo\",",
									"  \"Indonesian\",",
									"  \"Iranian Persian\",",
									"  \"Italian\",",
									"  \"Japanese\",",
									"  \"Javanese\",",
									"  \"Jinyu Chinese\",",
									"  \"Kannada\",",
									"  \"Kazakh\",",
									"  \"Khmer\",",
									"  \"Korean\",",
									"  \"Magahi\",",
									"  \"Maithili\",",
									"  \"Malay\",",
									"  \"Malayalam\",",
									"  \"Marathi\",",
									"  \"Nepali\",",
									"  \"Nigerian Fulfulde\",",
									"  \"Nigerian Pidgin\",",
									"  \"Northeastern Thai\",",
									"  \"Northern Kurdish\",",
									"  \"Northern Pashto\",",
									"  \"Northern Uzbek\",",
									"  \"Odia\",",
									"  \"Persian\",",
									"  \"Polish\",",
									"  \"Portuguese\",",
									"  \"Romanian\",",
									"  \"Russian\",",
									"  \"Sadri\",",
									"  \"Saraiki\",",
									"  \"Serbo-Croatian\",",
									"  \"Sindhi\",",
									"  \"Somali\",",
									"  \"South Azerbaijani\",",
									"  \"Southern Min Chinese\",",
									"  \"Spanish\",",
									"  \"Standard Arabic\",",
									"  \"Standard German\",",
									"  \"Sunda\",",
									"  \"Swahili\",",
									"  \"Swedish\",",
									"  \"Sylheti\",",
									"  \"Tagalog\",",
									"  \"Tamil\",",
									"  \"Telugu\",",
									"  \"Thai\",",
									"  \"Turkish\",",
									"  \"Ukrainian\",",
									"  \"Urdu\",",
									"  \"Vietnamese\",",
									"  \"Western Punjabi\",",
									"  \"Xhosa\",",
									"  \"Xiang Chinese\",",
									"  \"Yiddish\",",
									"  \"Yoruba\",",
									"  \"Zulu\"",
									"];",
									"",
									"const timezone = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\",",
									"    \"London/UK Time\"",
									"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let patientContactFirstName1 = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let patientContactLastName1 = pm.variables.replaceIn('{{$randomLastName}}');",
									"let email = \"qa\" + \"+\" + patientContactFirstName1 + \"+\" + Date.now() + \"@equip.health\";",
									"",
									"pm.environment.set(\"patientContactFirstName1\", patientContactFirstName1);",
									"pm.environment.set(\"patientContactLastName1\", patientContactLastName1);",
									"pm.environment.set(\"relation_to_patient1\", ld.sample(relation_to_patient));",
									"pm.environment.set(\"isGuarantor1\", false);",
									"pm.environment.set(\"isOngoingProvider1\", false);",
									"pm.environment.set(\"patientContactOfficePhone1\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientContactOfficePhoneExt1\", _.random(100000, 999999));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "81b810f0-1059-4574-b2de-33fb8a34a4cf",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"patientContactId1\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "28648ece-cb38-4766-81b8-43869224de62",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientContactFirstName1}}\",\n    \"lastName\": \"{{patientContactLastName1}}\",\n    \"relationToPatient\": \"{{relation_to_patient1}}\",\n    \"isLivesWithPatient\": \"{{isLivesWithPatient1}}\",\n    \"affiliationName\": \"{{AffiliationName1}}\",\n    \"latitude\": \"{{patientContactLatitude1}}\",\n    \"longitude\": \"{{patientContactLongitude1}}\",\n    \"addressLine1\": \"{{patientContactAddressLine1_1}}\",\n    \"department\": \"{{patientContactDepartment1}}\",\n    \"addressLine2\": \"{{patientContactAddressLine2_1}}\",\n    \"city\": \"{{patientContactCity1}}\",\n    \"state\": \"{{patientContactState1}}\",\n    \"country\": \"{{patientContactCountry1}}\",\n    \"zip\": \"{{patientContactZip1}}\",\n    \"email\": \"{{patientContactEmailId1}}\",\n    \"cellPhone\": \"+1 {{patientContactMobile1}}\",\n    \"officePhone\": \"{{patientContactOfficePhone1}}\",\n    \"officeExtension\": \"{{patientContactOfficePhoneExt1}}\",\n    \"contactPreferences\": [\n        {{patientContact_contactPreferences1}}\n    ],\n    \"gender\": \"{{patientContactGender1}}\",\n    \"pronouns\": \"{{patientContactPronoun1}}\",\n    \"languages\": [\n        {{patientContact_languages1}}\n    ],\n    \"isReferringProvider\": false,\n    \"providerId\": \"{{providerid}}\",\n    \"isPrimaryContact\": false,\n    \"isGuarantor\": {{isGuarantor1}},\n    \"isOngoingProvider\": {{isOngoingProvider1}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients/patient-contact/{{patientId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients",
								"patient-contact",
								"{{patientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update patient contact phone",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6694c683-1d70-4cc4-9ed8-3428e580eabc",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify patient contact id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d0effbfe-9290-49f1-820c-381babb49d04",
								"exec": [
									"let ld = require('lodash');",
									"const trueorfalse = [true, false];",
									"",
									"const relation_to_patient = [",
									"    \"Case Manager/Discharge Planner\",",
									"    \"Community org/non-profit\",",
									"    \"Community professional\",",
									"    \"Dietitian\",",
									"    \"Doctor\",",
									"    \"Eating disorder coach/advocate\",",
									"    \"Executive\",",
									"    \"Family member\",",
									"    \"Father\",",
									"    \"Friend\",",
									"    \"Grandparent\",",
									"    \"Guardian\",",
									"    \"Hospital\",",
									"    \"Insurance company\",",
									"    \"Mother\",",
									"    \"Nurse\",",
									"    \"Nurse practitioner\",",
									"    \"Other\",",
									"    \"Outreach professional\",",
									"    \"Parent (non-binary)\",",
									"    \"Payor case manager\",",
									"    \"Physician Assistant\",",
									"    \"Physician: Adolescent Medicine/Eating Disorder Specialist\",",
									"    \"Physician: Endocrinologist\",",
									"    \"Physician: Family Medicine\",",
									"    \"Physician: Gastroenterologist\",",
									"    \"Physician: Other specialist\",",
									"    \"Physician: PCP (non-peds)\",",
									"    \"Physician: Pediatrician\",",
									"    \"Practice Manager\",",
									"    \"Private practice group\",",
									"    \"Psychiatrist\",",
									"    \"Psychologist\",",
									"    \"Referral Coordinator\",",
									"    \"School nurse\",",
									"    \"School therapist/counselor\",",
									"    \"Sibling\",",
									"    \"Social worker\",",
									"    \"Stepfather\",",
									"    \"Stepmother\",",
									"    \"Stepparent\",",
									"    \"Therapist\",",
									"    \"Treatment Center (eating disorder)\"",
									"];",
									"",
									"const yesorno = [\"Yes\", \"No\"];",
									"",
									"const contactPreferences = [",
									"    \"Unknown\",",
									"    \"Email\",",
									"    \"Phone\",",
									"    \"No preference\"",
									"]",
									"",
									"const genders = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"const pronoun = [",
									"  \"He/Him/His\",",
									"  \"She/Her/Hers\",",
									"  \"They/Them/Theirs\",",
									"  \"Other\",",
									"  \"Ey/Em/Eirs\",",
									"  \"Xe/Xem/Xir\",",
									"  \"(F)ae/(F)aer/(F)aers\",",
									"  \"None\"",
									"];",
									"",
									"const languages = [",
									"  \"Afrikaans\",",
									"  \"American Sign Language (ASL)\",",
									"  \"Armenian\",",
									"  \"Bamanankan\",",
									"  \"Bavarian\",",
									"  \"Bengali\",",
									"  \"Bhojpuri\",",
									"  \"Burmese\",",
									"  \"Cameroonian Pidgin\",",
									"  \"Cebuano\",",
									"  \"Chinese (Mandarin)\",",
									"  \"Chinese (Wu/Shanghainese)\",",
									"  \"Chinese (Yue/Cantonese)\",",
									"  \"Chittagonian\",",
									"  \"Czech\",",
									"  \"Deccan\",",
									"  \"Dutch\",",
									"  \"Eastern Punjabi\",",
									"  \"Egyptian Spoken Arabic\",",
									"  \"English\",",
									"  \"Filipino\",",
									"  \"French\",",
									"  \"Gan Chinese\",",
									"  \"Greek\",",
									"  \"Gujarati\",",
									"  \"Hakka Chinese\",",
									"  \"Hausa\",",
									"  \"Hindi\",",
									"  \"Hungarian\",",
									"  \"Igbo\",",
									"  \"Indonesian\",",
									"  \"Iranian Persian\",",
									"  \"Italian\",",
									"  \"Japanese\",",
									"  \"Javanese\",",
									"  \"Jinyu Chinese\",",
									"  \"Kannada\",",
									"  \"Kazakh\",",
									"  \"Khmer\",",
									"  \"Korean\",",
									"  \"Magahi\",",
									"  \"Maithili\",",
									"  \"Malay\",",
									"  \"Malayalam\",",
									"  \"Marathi\",",
									"  \"Nepali\",",
									"  \"Nigerian Fulfulde\",",
									"  \"Nigerian Pidgin\",",
									"  \"Northeastern Thai\",",
									"  \"Northern Kurdish\",",
									"  \"Northern Pashto\",",
									"  \"Northern Uzbek\",",
									"  \"Odia\",",
									"  \"Persian\",",
									"  \"Polish\",",
									"  \"Portuguese\",",
									"  \"Romanian\",",
									"  \"Russian\",",
									"  \"Sadri\",",
									"  \"Saraiki\",",
									"  \"Serbo-Croatian\",",
									"  \"Sindhi\",",
									"  \"Somali\",",
									"  \"South Azerbaijani\",",
									"  \"Southern Min Chinese\",",
									"  \"Spanish\",",
									"  \"Standard Arabic\",",
									"  \"Standard German\",",
									"  \"Sunda\",",
									"  \"Swahili\",",
									"  \"Swedish\",",
									"  \"Sylheti\",",
									"  \"Tagalog\",",
									"  \"Tamil\",",
									"  \"Telugu\",",
									"  \"Thai\",",
									"  \"Turkish\",",
									"  \"Ukrainian\",",
									"  \"Urdu\",",
									"  \"Vietnamese\",",
									"  \"Western Punjabi\",",
									"  \"Xhosa\",",
									"  \"Xiang Chinese\",",
									"  \"Yiddish\",",
									"  \"Yoruba\",",
									"  \"Zulu\"",
									"];",
									"",
									"const timezone = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\",",
									"    \"London/UK Time\"",
									"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let patientContactFirstName1 = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let patientContactLastName1 = pm.variables.replaceIn('{{$randomLastName}}');",
									"let email = \"qa\" + \"+\" + patientContactFirstName1 + \"+\" + Date.now() + \"@equip.health\";",
									"",
									"pm.environment.set(\"patientContactFirstName1\", patientContactFirstName1);",
									"pm.environment.set(\"patientContactLastName1\", patientContactLastName1);",
									"pm.environment.set(\"relation_to_patient1\", ld.sample(relation_to_patient));",
									"pm.environment.set(\"isLivesWithPatient1\", \"No\");",
									"//pm.environment.set(\"patientContactEmailId1\", email);",
									"pm.environment.set(\"patientContactMobile1\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientContact_contactPreferences1\", collectionMethods.getRandomListofValuesFromList(contactPreferences));",
									"pm.environment.set(\"patientContactGender1\", ld.sample(genders));",
									"pm.environment.set(\"patientContactPronoun1\", ld.sample(pronoun));",
									"pm.environment.set(\"patientContact_languages1\", collectionMethods.getRandomListofValuesFromList(languages));",
									"pm.environment.set(\"isInquiryReferralSubmitted1\", ld.sample(trueorfalse));",
									"//pm.environment.set(\"patientContact_timezone\", collectionMethods.getRandomListofValuesFromList(timezone));",
									"",
									"pm.environment.set(\"AffiliationName_updated\", \"Google inc. india pvt ltd updated\");",
									"pm.environment.set(\"patientContactLatitude_updated\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientContactLongitude_updated\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientContactAddressLine1_updated\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientContactAddressLine2_updated\", pm.variables.replaceIn('{{$randomStreetName}}'));",
									"pm.environment.set(\"patientContactCity_updated\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientContactState_updated\", ld.sample(statesList));",
									"pm.environment.set(\"patientContactCountry_updated\", \"US\");",
									"pm.environment.set(\"patientContactZip_updated\", Math.floor(Math.random() * 90000) + 10000);",
									"pm.environment.set(\"isGuarantor1_updated\", ld.sample(trueorfalse));",
									"pm.environment.set(\"isOngoingProvider1_updated\", ld.sample(trueorfalse));",
									"pm.environment.set(\"patientContactPrefix1_updated\", \"Mr.\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "08a11f1b-fb66-4db6-9db1-2bdd8cd750d1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientContactFirstName1}}\",\n    \"lastName\": \"{{patientContactLastName1}}\",\n    \"relationToPatient\": \"{{relation_to_patient1}}\",\n    \"isLivesWithPatient\": \"{{isLivesWithPatient1}}\",\n    \"affiliationName\": \"{{AffiliationName_updated}}\",\n    \"latitude\": \"{{patientContactLatitude_updated}}\",\n    \"longitude\": \"{{patientContactLongitude_updated}}\",\n    \"addressLine1\": \"{{patientContactAddressLine1_updated}}\",\n    \"addressLine2\": \"{{patientContactAddressLine2_updated}}\",\n    \"city\": \"{{patientContactCity_updated}}\",\n    \"state\": \"{{patientContactState_updated}}\",\n    \"country\": \"{{patientContactCountry_updated}}\",\n    \"zip\": \"{{patientContactZip_updated}}\",\n    \"email\": \"{{patientContactEmailId1}}\",\n    \"cellPhone\": \"+1 {{patientContactMobile1}}\",\n    \"officePhone\": \"{{patientContactOfficePhone1}}\",\n    \"officeExtension\": \"{{patientContactOfficePhoneExt1}}\",\n    \"contactPreferences\": [\n        {{patientContact_contactPreferences1}}\n    ],\n    \"gender\": \"{{patientContactGender1}}\",\n    \"pronouns\": \"{{patientContactPronoun1}}\",\n    \"languages\": [\n        {{patientContact_languages1}}\n    ],\n    \"isReferringProvider\": \"{{isInquiryReferralSubmitted1}}\",\n    \"isDeleted\": \"No\",\n    \"providerId\": \"{{providerid}}\",\n    \"isPrimaryContact\": true,\n    \"isGuarantor\": {{isGuarantor1_updated}},\n    \"isOngoingProvider\": {{isOngoingProvider1_updated}},\n    \"prefix\": \"{{patientContactPrefix1_updated}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients/patient-contact/{{patientContactId1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients",
								"patient-contact",
								"{{patientContactId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify notification is generated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57156209-9c6f-40a5-a5bf-beac4b7f4c84",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_CONTACTS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId4\")+\"\",",
									"            \"sender\": {",
									"               \"externalId\": \"\"+pm.environment.get(\"UserId4\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname4\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname4\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"USER\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId2_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId2_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "871f1d3d-363c-4a9e-8e8e-60aee6e6a640",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c7f3e9f9-dc72-4180-96c6-3f5267ba8381",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update patient contact email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a96c96ea-5cf9-4811-a2e1-78127793d61d",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify patient contact id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "de26dd66-1505-4800-9856-8565739a3119",
								"exec": [
									"let ld = require('lodash');",
									"const trueorfalse = [true, false];",
									"",
									"const relation_to_patient = [",
									"    \"Case Manager/Discharge Planner\",",
									"    \"Community org/non-profit\",",
									"    \"Community professional\",",
									"    \"Dietitian\",",
									"    \"Doctor\",",
									"    \"Eating disorder coach/advocate\",",
									"    \"Executive\",",
									"    \"Family member\",",
									"    \"Father\",",
									"    \"Friend\",",
									"    \"Grandparent\",",
									"    \"Guardian\",",
									"    \"Hospital\",",
									"    \"Insurance company\",",
									"    \"Mother\",",
									"    \"Nurse\",",
									"    \"Nurse practitioner\",",
									"    \"Other\",",
									"    \"Outreach professional\",",
									"    \"Parent (non-binary)\",",
									"    \"Payor case manager\",",
									"    \"Physician Assistant\",",
									"    \"Physician: Adolescent Medicine/Eating Disorder Specialist\",",
									"    \"Physician: Endocrinologist\",",
									"    \"Physician: Family Medicine\",",
									"    \"Physician: Gastroenterologist\",",
									"    \"Physician: Other specialist\",",
									"    \"Physician: PCP (non-peds)\",",
									"    \"Physician: Pediatrician\",",
									"    \"Practice Manager\",",
									"    \"Private practice group\",",
									"    \"Psychiatrist\",",
									"    \"Psychologist\",",
									"    \"Referral Coordinator\",",
									"    \"School nurse\",",
									"    \"School therapist/counselor\",",
									"    \"Sibling\",",
									"    \"Social worker\",",
									"    \"Stepfather\",",
									"    \"Stepmother\",",
									"    \"Stepparent\",",
									"    \"Therapist\",",
									"    \"Treatment Center (eating disorder)\"",
									"];",
									"",
									"const yesorno = [\"Yes\", \"No\"];",
									"",
									"const contactPreferences = [",
									"    \"Unknown\",",
									"    \"Email\",",
									"    \"Phone\",",
									"    \"No preference\"",
									"]",
									"",
									"const genders = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"const pronoun = [",
									"  \"He/Him/His\",",
									"  \"She/Her/Hers\",",
									"  \"They/Them/Theirs\",",
									"  \"Other\",",
									"  \"Ey/Em/Eirs\",",
									"  \"Xe/Xem/Xir\",",
									"  \"(F)ae/(F)aer/(F)aers\",",
									"  \"None\"",
									"];",
									"",
									"const languages = [",
									"  \"Afrikaans\",",
									"  \"American Sign Language (ASL)\",",
									"  \"Armenian\",",
									"  \"Bamanankan\",",
									"  \"Bavarian\",",
									"  \"Bengali\",",
									"  \"Bhojpuri\",",
									"  \"Burmese\",",
									"  \"Cameroonian Pidgin\",",
									"  \"Cebuano\",",
									"  \"Chinese (Mandarin)\",",
									"  \"Chinese (Wu/Shanghainese)\",",
									"  \"Chinese (Yue/Cantonese)\",",
									"  \"Chittagonian\",",
									"  \"Czech\",",
									"  \"Deccan\",",
									"  \"Dutch\",",
									"  \"Eastern Punjabi\",",
									"  \"Egyptian Spoken Arabic\",",
									"  \"English\",",
									"  \"Filipino\",",
									"  \"French\",",
									"  \"Gan Chinese\",",
									"  \"Greek\",",
									"  \"Gujarati\",",
									"  \"Hakka Chinese\",",
									"  \"Hausa\",",
									"  \"Hindi\",",
									"  \"Hungarian\",",
									"  \"Igbo\",",
									"  \"Indonesian\",",
									"  \"Iranian Persian\",",
									"  \"Italian\",",
									"  \"Japanese\",",
									"  \"Javanese\",",
									"  \"Jinyu Chinese\",",
									"  \"Kannada\",",
									"  \"Kazakh\",",
									"  \"Khmer\",",
									"  \"Korean\",",
									"  \"Magahi\",",
									"  \"Maithili\",",
									"  \"Malay\",",
									"  \"Malayalam\",",
									"  \"Marathi\",",
									"  \"Nepali\",",
									"  \"Nigerian Fulfulde\",",
									"  \"Nigerian Pidgin\",",
									"  \"Northeastern Thai\",",
									"  \"Northern Kurdish\",",
									"  \"Northern Pashto\",",
									"  \"Northern Uzbek\",",
									"  \"Odia\",",
									"  \"Persian\",",
									"  \"Polish\",",
									"  \"Portuguese\",",
									"  \"Romanian\",",
									"  \"Russian\",",
									"  \"Sadri\",",
									"  \"Saraiki\",",
									"  \"Serbo-Croatian\",",
									"  \"Sindhi\",",
									"  \"Somali\",",
									"  \"South Azerbaijani\",",
									"  \"Southern Min Chinese\",",
									"  \"Spanish\",",
									"  \"Standard Arabic\",",
									"  \"Standard German\",",
									"  \"Sunda\",",
									"  \"Swahili\",",
									"  \"Swedish\",",
									"  \"Sylheti\",",
									"  \"Tagalog\",",
									"  \"Tamil\",",
									"  \"Telugu\",",
									"  \"Thai\",",
									"  \"Turkish\",",
									"  \"Ukrainian\",",
									"  \"Urdu\",",
									"  \"Vietnamese\",",
									"  \"Western Punjabi\",",
									"  \"Xhosa\",",
									"  \"Xiang Chinese\",",
									"  \"Yiddish\",",
									"  \"Yoruba\",",
									"  \"Zulu\"",
									"];",
									"",
									"const timezone = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\",",
									"    \"London/UK Time\"",
									"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let patientContactFirstName1 = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let patientContactLastName1 = pm.variables.replaceIn('{{$randomLastName}}');",
									"let email = \"qa\" + \"+\" + patientContactFirstName1 + \"+\" + Date.now() + \"@equip.health\";",
									"",
									"pm.environment.set(\"patientContactFirstName1\", patientContactFirstName1);",
									"pm.environment.set(\"patientContactLastName1\", patientContactLastName1);",
									"pm.environment.set(\"relation_to_patient1\", ld.sample(relation_to_patient));",
									"pm.environment.set(\"isLivesWithPatient1\", \"No\");",
									"pm.environment.set(\"patientContactEmailId1\", email);",
									"//pm.environment.set(\"patientContactMobile1\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientContact_contactPreferences1\", collectionMethods.getRandomListofValuesFromList(contactPreferences));",
									"pm.environment.set(\"patientContactGender1\", ld.sample(genders));",
									"pm.environment.set(\"patientContactPronoun1\", ld.sample(pronoun));",
									"pm.environment.set(\"patientContact_languages1\", collectionMethods.getRandomListofValuesFromList(languages));",
									"pm.environment.set(\"isInquiryReferralSubmitted1\", ld.sample(trueorfalse));",
									"//pm.environment.set(\"patientContact_timezone\", collectionMethods.getRandomListofValuesFromList(timezone));",
									"",
									"pm.environment.set(\"AffiliationName_updated\", \"Google inc. india pvt ltd updated\");",
									"pm.environment.set(\"patientContactLatitude_updated\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientContactLongitude_updated\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientContactAddressLine1_updated\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientContactAddressLine2_updated\", pm.variables.replaceIn('{{$randomStreetName}}'));",
									"pm.environment.set(\"patientContactCity_updated\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientContactState_updated\", ld.sample(statesList));",
									"pm.environment.set(\"patientContactCountry_updated\", \"US\");",
									"pm.environment.set(\"patientContactZip_updated\", Math.floor(Math.random() * 90000) + 10000);",
									"pm.environment.set(\"isGuarantor1_updated\", ld.sample(trueorfalse));",
									"pm.environment.set(\"isOngoingProvider1_updated\", ld.sample(trueorfalse));",
									"pm.environment.set(\"patientContactPrefix1_updated\", \"Mr.\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6964f254-5443-4f50-a00f-68d95c439e96",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientContactFirstName1}}\",\n    \"lastName\": \"{{patientContactLastName1}}\",\n    \"relationToPatient\": \"{{relation_to_patient1}}\",\n    \"isLivesWithPatient\": \"{{isLivesWithPatient1}}\",\n    \"affiliationName\": \"{{AffiliationName_updated}}\",\n    \"latitude\": \"{{patientContactLatitude_updated}}\",\n    \"longitude\": \"{{patientContactLongitude_updated}}\",\n    \"addressLine1\": \"{{patientContactAddressLine1_updated}}\",\n    \"addressLine2\": \"{{patientContactAddressLine2_updated}}\",\n    \"city\": \"{{patientContactCity_updated}}\",\n    \"state\": \"{{patientContactState_updated}}\",\n    \"country\": \"{{patientContactCountry_updated}}\",\n    \"zip\": \"{{patientContactZip_updated}}\",\n    \"email\": \"{{patientContactEmailId1}}\",\n    \"cellPhone\": \"+1 {{patientContactMobile1}}\",\n    \"officePhone\": \"{{patientContactOfficePhone1}}\",\n    \"officeExtension\": \"{{patientContactOfficePhoneExt1}}\",\n    \"contactPreferences\": [\n        {{patientContact_contactPreferences1}}\n    ],\n    \"gender\": \"{{patientContactGender1}}\",\n    \"pronouns\": \"{{patientContactPronoun1}}\",\n    \"languages\": [\n        {{patientContact_languages1}}\n    ],\n    \"isReferringProvider\": \"{{isInquiryReferralSubmitted1}}\",\n    \"isDeleted\": \"No\",\n    \"providerId\": \"{{providerid}}\",\n    \"isPrimaryContact\": true,\n    \"isGuarantor\": {{isGuarantor1_updated}},\n    \"isOngoingProvider\": {{isOngoingProvider1_updated}},\n    \"prefix\": \"{{patientContactPrefix1_updated}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients/patient-contact/{{patientContactId1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients",
								"patient-contact",
								"{{patientContactId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify notification is generated Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57ecf82a-2c35-4922-9b20-6fe38b94bad2",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_CONTACTS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"            \"sender\": {",
									"               \"externalId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname2\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname2\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"USER\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId3_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId3_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6bf4e23d-9ba0-44e0-a1a7-fcafb5bb7eda",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5830c243-c13b-4b74-98c8-eaf47fc667f0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update patient contact office number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "753c8f67-a665-47e0-80f2-91b44adc4522",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify patient contact id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId4_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId4_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6b7f0268-b993-434a-a330-6671f6928485",
								"exec": [
									"let ld = require('lodash');",
									"const trueorfalse = [true, false];",
									"",
									"const relation_to_patient = [",
									"    \"Case Manager/Discharge Planner\",",
									"    \"Community org/non-profit\",",
									"    \"Community professional\",",
									"    \"Dietitian\",",
									"    \"Doctor\",",
									"    \"Eating disorder coach/advocate\",",
									"    \"Executive\",",
									"    \"Family member\",",
									"    \"Father\",",
									"    \"Friend\",",
									"    \"Grandparent\",",
									"    \"Guardian\",",
									"    \"Hospital\",",
									"    \"Insurance company\",",
									"    \"Mother\",",
									"    \"Nurse\",",
									"    \"Nurse practitioner\",",
									"    \"Other\",",
									"    \"Outreach professional\",",
									"    \"Parent (non-binary)\",",
									"    \"Payor case manager\",",
									"    \"Physician Assistant\",",
									"    \"Physician: Adolescent Medicine/Eating Disorder Specialist\",",
									"    \"Physician: Endocrinologist\",",
									"    \"Physician: Family Medicine\",",
									"    \"Physician: Gastroenterologist\",",
									"    \"Physician: Other specialist\",",
									"    \"Physician: PCP (non-peds)\",",
									"    \"Physician: Pediatrician\",",
									"    \"Practice Manager\",",
									"    \"Private practice group\",",
									"    \"Psychiatrist\",",
									"    \"Psychologist\",",
									"    \"Referral Coordinator\",",
									"    \"School nurse\",",
									"    \"School therapist/counselor\",",
									"    \"Sibling\",",
									"    \"Social worker\",",
									"    \"Stepfather\",",
									"    \"Stepmother\",",
									"    \"Stepparent\",",
									"    \"Therapist\",",
									"    \"Treatment Center (eating disorder)\"",
									"];",
									"",
									"const yesorno = [\"Yes\", \"No\"];",
									"",
									"const contactPreferences = [",
									"    \"Unknown\",",
									"    \"Email\",",
									"    \"Phone\",",
									"    \"No preference\"",
									"]",
									"",
									"const genders = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"const pronoun = [",
									"  \"He/Him/His\",",
									"  \"She/Her/Hers\",",
									"  \"They/Them/Theirs\",",
									"  \"Other\",",
									"  \"Ey/Em/Eirs\",",
									"  \"Xe/Xem/Xir\",",
									"  \"(F)ae/(F)aer/(F)aers\",",
									"  \"None\"",
									"];",
									"",
									"const languages = [",
									"  \"Afrikaans\",",
									"  \"American Sign Language (ASL)\",",
									"  \"Armenian\",",
									"  \"Bamanankan\",",
									"  \"Bavarian\",",
									"  \"Bengali\",",
									"  \"Bhojpuri\",",
									"  \"Burmese\",",
									"  \"Cameroonian Pidgin\",",
									"  \"Cebuano\",",
									"  \"Chinese (Mandarin)\",",
									"  \"Chinese (Wu/Shanghainese)\",",
									"  \"Chinese (Yue/Cantonese)\",",
									"  \"Chittagonian\",",
									"  \"Czech\",",
									"  \"Deccan\",",
									"  \"Dutch\",",
									"  \"Eastern Punjabi\",",
									"  \"Egyptian Spoken Arabic\",",
									"  \"English\",",
									"  \"Filipino\",",
									"  \"French\",",
									"  \"Gan Chinese\",",
									"  \"Greek\",",
									"  \"Gujarati\",",
									"  \"Hakka Chinese\",",
									"  \"Hausa\",",
									"  \"Hindi\",",
									"  \"Hungarian\",",
									"  \"Igbo\",",
									"  \"Indonesian\",",
									"  \"Iranian Persian\",",
									"  \"Italian\",",
									"  \"Japanese\",",
									"  \"Javanese\",",
									"  \"Jinyu Chinese\",",
									"  \"Kannada\",",
									"  \"Kazakh\",",
									"  \"Khmer\",",
									"  \"Korean\",",
									"  \"Magahi\",",
									"  \"Maithili\",",
									"  \"Malay\",",
									"  \"Malayalam\",",
									"  \"Marathi\",",
									"  \"Nepali\",",
									"  \"Nigerian Fulfulde\",",
									"  \"Nigerian Pidgin\",",
									"  \"Northeastern Thai\",",
									"  \"Northern Kurdish\",",
									"  \"Northern Pashto\",",
									"  \"Northern Uzbek\",",
									"  \"Odia\",",
									"  \"Persian\",",
									"  \"Polish\",",
									"  \"Portuguese\",",
									"  \"Romanian\",",
									"  \"Russian\",",
									"  \"Sadri\",",
									"  \"Saraiki\",",
									"  \"Serbo-Croatian\",",
									"  \"Sindhi\",",
									"  \"Somali\",",
									"  \"South Azerbaijani\",",
									"  \"Southern Min Chinese\",",
									"  \"Spanish\",",
									"  \"Standard Arabic\",",
									"  \"Standard German\",",
									"  \"Sunda\",",
									"  \"Swahili\",",
									"  \"Swedish\",",
									"  \"Sylheti\",",
									"  \"Tagalog\",",
									"  \"Tamil\",",
									"  \"Telugu\",",
									"  \"Thai\",",
									"  \"Turkish\",",
									"  \"Ukrainian\",",
									"  \"Urdu\",",
									"  \"Vietnamese\",",
									"  \"Western Punjabi\",",
									"  \"Xhosa\",",
									"  \"Xiang Chinese\",",
									"  \"Yiddish\",",
									"  \"Yoruba\",",
									"  \"Zulu\"",
									"];",
									"",
									"const timezone = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\",",
									"    \"London/UK Time\"",
									"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let patientContactFirstName1 = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let patientContactLastName1 = pm.variables.replaceIn('{{$randomLastName}}');",
									"let email = \"qa\" + \"+\" + patientContactFirstName1 + \"+\" + Date.now() + \"@equip.health\";",
									"",
									"pm.environment.set(\"patientContactFirstName1\", patientContactFirstName1);",
									"pm.environment.set(\"patientContactLastName1\", patientContactLastName1);",
									"pm.environment.set(\"relation_to_patient1\", ld.sample(relation_to_patient));",
									"pm.environment.set(\"isLivesWithPatient1\", \"No\");",
									"//pm.environment.set(\"patientContactEmailId1\", email);",
									"//pm.environment.set(\"patientContactMobile1\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientContact_contactPreferences1\", collectionMethods.getRandomListofValuesFromList(contactPreferences));",
									"pm.environment.set(\"patientContactGender1\", ld.sample(genders));",
									"pm.environment.set(\"patientContactPronoun1\", ld.sample(pronoun));",
									"pm.environment.set(\"patientContact_languages1\", collectionMethods.getRandomListofValuesFromList(languages));",
									"pm.environment.set(\"isInquiryReferralSubmitted1\", ld.sample(trueorfalse));",
									"//pm.environment.set(\"patientContact_timezone\", collectionMethods.getRandomListofValuesFromList(timezone));",
									"",
									"pm.environment.set(\"AffiliationName_updated\", \"Google inc. india pvt ltd updated\");",
									"pm.environment.set(\"patientContactLatitude_updated\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientContactLongitude_updated\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientContactAddressLine1_updated\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientContactAddressLine2_updated\", pm.variables.replaceIn('{{$randomStreetName}}'));",
									"pm.environment.set(\"patientContactCity_updated\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientContactState_updated\", ld.sample(statesList));",
									"pm.environment.set(\"patientContactCountry_updated\", \"US\");",
									"pm.environment.set(\"patientContactZip_updated\", Math.floor(Math.random() * 90000) + 10000);",
									"pm.environment.set(\"isGuarantor1_updated\", ld.sample(trueorfalse));",
									"pm.environment.set(\"isOngoingProvider1_updated\", ld.sample(trueorfalse));",
									"pm.environment.set(\"patientContactPrefix1_updated\", \"Mr.\");",
									"",
									"pm.environment.set(\"patientContactOfficePhone1\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"//pm.environment.set(\"patientContactOfficePhoneExt1\", _.random(100000, 999999));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d3024b35-48ab-4c8e-8fee-f47f4c69dfa0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientContactFirstName1}}\",\n    \"lastName\": \"{{patientContactLastName1}}\",\n    \"relationToPatient\": \"{{relation_to_patient1}}\",\n    \"isLivesWithPatient\": \"{{isLivesWithPatient1}}\",\n    \"affiliationName\": \"{{AffiliationName_updated}}\",\n    \"latitude\": \"{{patientContactLatitude_updated}}\",\n    \"longitude\": \"{{patientContactLongitude_updated}}\",\n    \"addressLine1\": \"{{patientContactAddressLine1_updated}}\",\n    \"addressLine2\": \"{{patientContactAddressLine2_updated}}\",\n    \"city\": \"{{patientContactCity_updated}}\",\n    \"state\": \"{{patientContactState_updated}}\",\n    \"country\": \"{{patientContactCountry_updated}}\",\n    \"zip\": \"{{patientContactZip_updated}}\",\n    \"email\": \"{{patientContactEmailId1}}\",\n    \"cellPhone\": \"+1 {{patientContactMobile1}}\",\n    \"officePhone\": \"{{patientContactOfficePhone1}}\",\n    \"officeExtension\": \"{{patientContactOfficePhoneExt1}}\",\n    \"contactPreferences\": [\n        {{patientContact_contactPreferences1}}\n    ],\n    \"gender\": \"{{patientContactGender1}}\",\n    \"pronouns\": \"{{patientContactPronoun1}}\",\n    \"languages\": [\n        {{patientContact_languages1}}\n    ],\n    \"isReferringProvider\": \"{{isInquiryReferralSubmitted1}}\",\n    \"isDeleted\": \"No\",\n    \"providerId\": \"{{providerid}}\",\n    \"isPrimaryContact\": true,\n    \"isGuarantor\": {{isGuarantor1_updated}},\n    \"isOngoingProvider\": {{isOngoingProvider1_updated}},\n    \"prefix\": \"{{patientContactPrefix1_updated}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients/patient-contact/{{patientContactId1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients",
								"patient-contact",
								"{{patientContactId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify notification is generated Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dac4d7a1-6360-45fb-b931-0f471d519c7d",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_CONTACTS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId3\")+\"\",",
									"            \"sender\": {",
									"               \"externalId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname2\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname2\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"USER\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId4_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId4_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "65763a75-01d5-4f00-94a4-3fc0f622d1c7",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7368ad1b-b504-4574-a601-0d110562ea18",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update patient contact office number Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5cb65f6-24ca-4fb8-bcea-8229fe697cf1",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify patient contact id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId1_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId1_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "742744d7-3f48-4510-9db2-b4c93c883b62",
								"exec": [
									"let ld = require('lodash');",
									"const trueorfalse = [true, false];",
									"",
									"const relation_to_patient = [",
									"    \"Case Manager/Discharge Planner\",",
									"    \"Community org/non-profit\",",
									"    \"Community professional\",",
									"    \"Dietitian\",",
									"    \"Doctor\",",
									"    \"Eating disorder coach/advocate\",",
									"    \"Executive\",",
									"    \"Family member\",",
									"    \"Father\",",
									"    \"Friend\",",
									"    \"Grandparent\",",
									"    \"Guardian\",",
									"    \"Hospital\",",
									"    \"Insurance company\",",
									"    \"Mother\",",
									"    \"Nurse\",",
									"    \"Nurse practitioner\",",
									"    \"Other\",",
									"    \"Outreach professional\",",
									"    \"Parent (non-binary)\",",
									"    \"Payor case manager\",",
									"    \"Physician Assistant\",",
									"    \"Physician: Adolescent Medicine/Eating Disorder Specialist\",",
									"    \"Physician: Endocrinologist\",",
									"    \"Physician: Family Medicine\",",
									"    \"Physician: Gastroenterologist\",",
									"    \"Physician: Other specialist\",",
									"    \"Physician: PCP (non-peds)\",",
									"    \"Physician: Pediatrician\",",
									"    \"Practice Manager\",",
									"    \"Private practice group\",",
									"    \"Psychiatrist\",",
									"    \"Psychologist\",",
									"    \"Referral Coordinator\",",
									"    \"School nurse\",",
									"    \"School therapist/counselor\",",
									"    \"Sibling\",",
									"    \"Social worker\",",
									"    \"Stepfather\",",
									"    \"Stepmother\",",
									"    \"Stepparent\",",
									"    \"Therapist\",",
									"    \"Treatment Center (eating disorder)\"",
									"];",
									"",
									"const yesorno = [\"Yes\", \"No\"];",
									"",
									"const contactPreferences = [",
									"    \"Unknown\",",
									"    \"Email\",",
									"    \"Phone\",",
									"    \"No preference\"",
									"]",
									"",
									"const genders = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"const pronoun = [",
									"  \"He/Him/His\",",
									"  \"She/Her/Hers\",",
									"  \"They/Them/Theirs\",",
									"  \"Other\",",
									"  \"Ey/Em/Eirs\",",
									"  \"Xe/Xem/Xir\",",
									"  \"(F)ae/(F)aer/(F)aers\",",
									"  \"None\"",
									"];",
									"",
									"const languages = [",
									"  \"Afrikaans\",",
									"  \"American Sign Language (ASL)\",",
									"  \"Armenian\",",
									"  \"Bamanankan\",",
									"  \"Bavarian\",",
									"  \"Bengali\",",
									"  \"Bhojpuri\",",
									"  \"Burmese\",",
									"  \"Cameroonian Pidgin\",",
									"  \"Cebuano\",",
									"  \"Chinese (Mandarin)\",",
									"  \"Chinese (Wu/Shanghainese)\",",
									"  \"Chinese (Yue/Cantonese)\",",
									"  \"Chittagonian\",",
									"  \"Czech\",",
									"  \"Deccan\",",
									"  \"Dutch\",",
									"  \"Eastern Punjabi\",",
									"  \"Egyptian Spoken Arabic\",",
									"  \"English\",",
									"  \"Filipino\",",
									"  \"French\",",
									"  \"Gan Chinese\",",
									"  \"Greek\",",
									"  \"Gujarati\",",
									"  \"Hakka Chinese\",",
									"  \"Hausa\",",
									"  \"Hindi\",",
									"  \"Hungarian\",",
									"  \"Igbo\",",
									"  \"Indonesian\",",
									"  \"Iranian Persian\",",
									"  \"Italian\",",
									"  \"Japanese\",",
									"  \"Javanese\",",
									"  \"Jinyu Chinese\",",
									"  \"Kannada\",",
									"  \"Kazakh\",",
									"  \"Khmer\",",
									"  \"Korean\",",
									"  \"Magahi\",",
									"  \"Maithili\",",
									"  \"Malay\",",
									"  \"Malayalam\",",
									"  \"Marathi\",",
									"  \"Nepali\",",
									"  \"Nigerian Fulfulde\",",
									"  \"Nigerian Pidgin\",",
									"  \"Northeastern Thai\",",
									"  \"Northern Kurdish\",",
									"  \"Northern Pashto\",",
									"  \"Northern Uzbek\",",
									"  \"Odia\",",
									"  \"Persian\",",
									"  \"Polish\",",
									"  \"Portuguese\",",
									"  \"Romanian\",",
									"  \"Russian\",",
									"  \"Sadri\",",
									"  \"Saraiki\",",
									"  \"Serbo-Croatian\",",
									"  \"Sindhi\",",
									"  \"Somali\",",
									"  \"South Azerbaijani\",",
									"  \"Southern Min Chinese\",",
									"  \"Spanish\",",
									"  \"Standard Arabic\",",
									"  \"Standard German\",",
									"  \"Sunda\",",
									"  \"Swahili\",",
									"  \"Swedish\",",
									"  \"Sylheti\",",
									"  \"Tagalog\",",
									"  \"Tamil\",",
									"  \"Telugu\",",
									"  \"Thai\",",
									"  \"Turkish\",",
									"  \"Ukrainian\",",
									"  \"Urdu\",",
									"  \"Vietnamese\",",
									"  \"Western Punjabi\",",
									"  \"Xhosa\",",
									"  \"Xiang Chinese\",",
									"  \"Yiddish\",",
									"  \"Yoruba\",",
									"  \"Zulu\"",
									"];",
									"",
									"const timezone = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\",",
									"    \"London/UK Time\"",
									"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let patientContactFirstName1 = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let patientContactLastName1 = pm.variables.replaceIn('{{$randomLastName}}');",
									"let email = \"qa\" + \"+\" + patientContactFirstName1 + \"+\" + Date.now() + \"@equip.health\";",
									"",
									"pm.environment.set(\"patientContactFirstName1\", patientContactFirstName1);",
									"pm.environment.set(\"patientContactLastName1\", patientContactLastName1);",
									"pm.environment.set(\"relation_to_patient1\", ld.sample(relation_to_patient));",
									"pm.environment.set(\"isLivesWithPatient1\", \"No\");",
									"//pm.environment.set(\"patientContactEmailId1\", email);",
									"//pm.environment.set(\"patientContactMobile1\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientContact_contactPreferences1\", collectionMethods.getRandomListofValuesFromList(contactPreferences));",
									"pm.environment.set(\"patientContactGender1\", ld.sample(genders));",
									"pm.environment.set(\"patientContactPronoun1\", ld.sample(pronoun));",
									"pm.environment.set(\"patientContact_languages1\", collectionMethods.getRandomListofValuesFromList(languages));",
									"pm.environment.set(\"isInquiryReferralSubmitted1\", ld.sample(trueorfalse));",
									"//pm.environment.set(\"patientContact_timezone\", collectionMethods.getRandomListofValuesFromList(timezone));",
									"",
									"pm.environment.set(\"AffiliationName_updated\", \"Google inc. india pvt ltd updated\");",
									"pm.environment.set(\"patientContactLatitude_updated\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientContactLongitude_updated\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientContactAddressLine1_updated\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientContactAddressLine2_updated\", pm.variables.replaceIn('{{$randomStreetName}}'));",
									"pm.environment.set(\"patientContactCity_updated\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientContactState_updated\", ld.sample(statesList));",
									"pm.environment.set(\"patientContactCountry_updated\", \"US\");",
									"pm.environment.set(\"patientContactZip_updated\", Math.floor(Math.random() * 90000) + 10000);",
									"pm.environment.set(\"isGuarantor1_updated\", ld.sample(trueorfalse));",
									"pm.environment.set(\"isOngoingProvider1_updated\", ld.sample(trueorfalse));",
									"pm.environment.set(\"patientContactPrefix1_updated\", \"Mr.\");",
									"",
									"//pm.environment.set(\"patientContactOfficePhone1\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientContactOfficePhoneExt1\", _.random(100000, 999999));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e267e758-5fde-4571-86a8-834e2021c18d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientContactFirstName1}}\",\n    \"lastName\": \"{{patientContactLastName1}}\",\n    \"relationToPatient\": \"{{relation_to_patient1}}\",\n    \"isLivesWithPatient\": \"{{isLivesWithPatient1}}\",\n    \"affiliationName\": \"{{AffiliationName_updated}}\",\n    \"latitude\": \"{{patientContactLatitude_updated}}\",\n    \"longitude\": \"{{patientContactLongitude_updated}}\",\n    \"addressLine1\": \"{{patientContactAddressLine1_updated}}\",\n    \"addressLine2\": \"{{patientContactAddressLine2_updated}}\",\n    \"city\": \"{{patientContactCity_updated}}\",\n    \"state\": \"{{patientContactState_updated}}\",\n    \"country\": \"{{patientContactCountry_updated}}\",\n    \"zip\": \"{{patientContactZip_updated}}\",\n    \"email\": \"{{patientContactEmailId1}}\",\n    \"cellPhone\": \"+1 {{patientContactMobile1}}\",\n    \"officePhone\": \"{{patientContactOfficePhone1}}\",\n    \"officeExtension\": \"{{patientContactOfficePhoneExt1}}\",\n    \"contactPreferences\": [\n        {{patientContact_contactPreferences1}}\n    ],\n    \"gender\": \"{{patientContactGender1}}\",\n    \"pronouns\": \"{{patientContactPronoun1}}\",\n    \"languages\": [\n        {{patientContact_languages1}}\n    ],\n    \"isReferringProvider\": \"{{isInquiryReferralSubmitted1}}\",\n    \"isDeleted\": \"No\",\n    \"providerId\": \"{{providerid}}\",\n    \"isPrimaryContact\": true,\n    \"isGuarantor\": {{isGuarantor1_updated}},\n    \"isOngoingProvider\": {{isOngoingProvider1_updated}},\n    \"prefix\": \"{{patientContactPrefix1_updated}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients/patient-contact/{{patientContactId1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients",
								"patient-contact",
								"{{patientContactId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify notification is generated Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ae27114-6a8a-452c-a64c-b762204c3d51",
								"exec": [
									"let moment = require('moment');",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_notification = {",
									"            //\"notificationExternalId\": \"39af6b04-3f3b-681d-6e81-ae328dec9675\",",
									"            \"subject\": {",
									"                \"externalId\": \"\"+pm.environment.get(\"patientId\")+\"\",",
									"                \"type\": \"patient\",",
									"                \"firstName\": \"\"+pm.environment.get(\"patientFirstName\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"patientLastName\")+\"\",",
									"                \"chosenName\": \"\"+pm.environment.get(\"patientChosenName\")+\"\"",
									"            },",
									"            \"eventType\": \"UPDATED_CONTACTS\",",
									"            \"senderId\": \"\"+pm.environment.get(\"UserId4\")+\"\",",
									"            \"sender\": {",
									"               \"externalId\": \"\"+pm.environment.get(\"UserId2\")+\"\",",
									"                \"type\": \"provider\",",
									"                \"firstName\": \"\"+pm.environment.get(\"UserFirstname2\")+\"\",",
									"                \"lastName\": \"\"+pm.environment.get(\"UserLastname2\")+\"\"",
									"            },",
									"            \"priority\": \"HIGH\",",
									"            \"action\": \"OPEN_PATIENT_PROFILE\",",
									"            \"source\": \"USER\",",
									"            //\"createdAt\": \"2023-01-02T08:27:58.911Z\",",
									"            \"status\": \"NEW\",",
									"            //\"updatedAt\": \"2023-01-02T08:27:58.918Z\",",
									"            //\"groupBy\": \"eae80cca-b245-48b8-8cb8-8bf1b9cae553\"",
									"        };",
									"",
									"pm.test(\"Validate notification details in response\", function () {",
									"    delete jsonData.data[0].groupBy;",
									"    delete jsonData.data[0].notificationExternalId;",
									"    for(let i=0; i<jsonData.data.length; i++){ ",
									"        delete jsonData.data[i].createdAt;",
									"        delete jsonData.data[i].updatedAt;",
									"        delete exp_notification.createdAt;",
									"        delete exp_notification.updatedAt;",
									"    }",
									"",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_notification: \" + JSON.stringify(exp_notification).replace(/\\\\/g, ''));",
									"    //pm.expect(jsonData).to.eql(exp_notification);",
									"    pm.expect(jsonData.data[0]).to.deep.include(exp_notification);",
									"",
									"});",
									"",
									"pm.environment.set(\"test-token\",\"\");",
									"pm.environment.set(\"vesta_username\", pm.environment.get(\"UserId4_username\"));",
									"pm.environment.set(\"vesta_password\", pm.environment.get(\"UserId4_password\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8d3d70ef-86c2-4579-b436-dceb438ecda4",
								"exec": [
									"",
									"//pm.environment.set(\"admissionsSpecialistExternalId\", \"c33f48af-be6a-461b-a378-4d027f89f4e2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f4cc4467-c7d3-450e-9ae4-c6abe44a5313",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications?page-size=100&page-number=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "page-number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "289d52c8-e4c5-4def-b925-27beabffd6b5",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1c11a471-eccd-42cb-ab3d-eb1a1b4fc418",
						"type": "text/javascript",
						"exec": [
							"",
							"if(pm.environment.name === \"qa\"){",
							"    pm.environment.set(\"UserId1\", \"39dfb99f-4206-420f-8da0-dda4705bf831\")",
							"    pm.environment.set(\"UserId1_username\", \"balakrishna+fen1@equip.health\");",
							"    pm.environment.set(\"UserId1_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname1\", \"Bala\");",
							"    pm.environment.set(\"UserLastname1\", \"FEN1\");",
							"    pm.environment.set(\"UserType1\", \"Family Experience Navigator\");",
							"",
							"    pm.environment.set(\"UserId2\", \"af2215db-647f-4b20-8f6a-f2f3db0ce5ee\")",
							"    pm.environment.set(\"UserId2_username\", \"maud_scheduling+psr@equip.health\");",
							"    pm.environment.set(\"UserId2_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname2\", \"Maud\");",
							"    pm.environment.set(\"UserLastname2\", \"Scheduling\");",
							"    pm.environment.set(\"UserType2\", \"Patient Service Representative\");",
							"",
							"    pm.environment.set(\"UserId3\", \"0a113848-7671-42b2-bb7c-82a980a4393f\")",
							"    pm.environment.set(\"UserId3_username\", \"balakrishna+psr@equip.health\");",
							"    pm.environment.set(\"UserId3_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname3\", \"Bala\");",
							"    pm.environment.set(\"UserLastname3\", \"Deema\");",
							"    pm.environment.set(\"UserType3\", \"Patient Service Representative\");",
							"",
							"    pm.environment.set(\"UserId4\", \"72e58b98-a43e-4e3e-9676-f38fbf0e0f20\")",
							"    pm.environment.set(\"UserId4_username\", \"balakrishna+fen2@equip.health\");",
							"    pm.environment.set(\"UserId4_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname4\", \"Bala\");",
							"    pm.environment.set(\"UserLastname4\", \"FEN2\");",
							"    pm.environment.set(\"UserType4\", \"Family Experience Navigator\");",
							"}else{",
							"    pm.environment.set(\"UserId1\", \"fb77413e-a30f-4f2c-bd26-c01e3fba5573\")",
							"    pm.environment.set(\"UserId1_username\", \"balakrishna+fen1@equip.health\");",
							"    pm.environment.set(\"UserId1_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname1\", \"Bala\");",
							"    pm.environment.set(\"UserLastname1\", \"FEN1\");",
							"    pm.environment.set(\"UserType1\", \"Family Experience Navigator\");",
							"",
							"    pm.environment.set(\"UserId2\", \"61e1108d-a4cd-4f4d-92bc-eb214e8594c6\")",
							"    pm.environment.set(\"UserId2_username\", \"balakrishna+dietitian@equip.health\");",
							"    pm.environment.set(\"UserId2_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname2\", \"Balakrishna\");",
							"    pm.environment.set(\"UserLastname2\", \"Deema\");",
							"    pm.environment.set(\"UserType2\", \"Dietitian\");",
							"",
							"    pm.environment.set(\"UserId3\", \"a4684d41-f12f-4e96-af65-9ff44d723d61\")",
							"    pm.environment.set(\"UserId3_username\", \"maud_scheduling+psr@equip.health\");",
							"    pm.environment.set(\"UserId3_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname3\", \"Maud\");",
							"    pm.environment.set(\"UserLastname3\", \"Scheduling\");",
							"    pm.environment.set(\"UserType3\", \"Patient Service Representative\");",
							"",
							"    pm.environment.set(\"UserId4\", \"ffb1b55b-fefd-4bf2-a45f-902bc6236c45\")",
							"    pm.environment.set(\"UserId4_username\", \"balakrishna+fen2@equip.health\");",
							"    pm.environment.set(\"UserId4_password\", \"Equip@1234\");",
							"    pm.environment.set(\"UserFirstname4\", \"Bala\");",
							"    pm.environment.set(\"UserLastname4\", \"FEN2\");",
							"    pm.environment.set(\"UserType4\", \"Family Experience Navigator\");",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "199f5f95-d131-4ad1-8011-e1c794fd63fa",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a33364a8-f408-4bc8-9992-5ce2ea8fed5b",
				"type": "text/javascript",
				"exec": [
					"collectionMethods = {",
					"    //Return random value by passing the list values",
					"    getAgeFromDOB: function (dob) {",
					"        var ageDifMs = Date.now() - new Date(dob).getTime();",
					"        var ageDate = new Date(ageDifMs); // miliseconds from epoch",
					"        return Math.abs(ageDate.getUTCFullYear() - 1970);",
					"    },",
					"",
					"    getRandomListofValuesFromList: function (list) {",
					"        let output_list = [];",
					"        const random = Math.floor(Math.random() * list.length) + 1;",
					"        for (var i = 0; i < random; i++) {",
					"            console.log(\"list value: \" + list[i]);",
					"            output_list.push(list[i]);",
					"            output_list.sort();",
					"        }",
					"        return output_list.map(item => \"\\\"\" + item + \"\\\"\").join();",
					"    }",
					"",
					"}",
					"",
					"// Refresh the OAuth token if necessary",
					"console.log('Current environment: ' + pm.environment.name);",
					"",
					"if (pm.environment.name === \"qa\") {",
					"    pm.environment.set(\"vesta_audience\", \"https://equip-qa.us.auth0.com/api/v2/\");",
					"    pm.environment.set(\"token_tenant\", \"equip-qa\");",
					"    pm.environment.set(\"coookieURL\", \"https://equip-qa.us.auth0.com\");",
					"    pm.environment.set(\"vesta_client_id\", \"octk74sRPfVm7zJz314cMMzFHnGO3B2s\")",
					"    pm.environment.set(\"token_host\", \"https://equip-qa.us.auth0.com\")",
					"} else if (pm.environment.name === \"dev\") {",
					"    pm.environment.set(\"vesta_audience\", \"https://equip-dev.us.auth0.com/api/v2/\");",
					"    pm.environment.set(\"token_tenant\", \"equip-dev\");",
					"    pm.environment.set(\"coookieURL\", \"https://equip-dev.us.auth0.com\");",
					"    pm.environment.set(\"vesta_client_id\", \"hh9fZVGIShbS2xXdr7B0glheYEKOFFdw\")",
					"    pm.environment.set(\"token_host\", \"https://equip-dev.us.auth0.com\")",
					"}",
					"",
					"var tokenDate = new Date(2010, 1, 1);",
					"var tokenTimestamp = pm.environment.get(\"OAuth_Timestamp\");",
					"if (tokenTimestamp) {",
					"    tokenDate = Date.parse(tokenTimestamp);",
					"}",
					"var expiresInTime = pm.environment.get(\"ExpiresInTime\");",
					"if (!expiresInTime) {",
					"    expiresInTime = 86400000; // Set default expiration time to 24 hours (in ms)",
					"}",
					"",
					"if ((new Date() - tokenDate) >= expiresInTime || pm.environment.get(\"test-token\") === \"\") {",
					"    // clearCookies();",
					"    getToken();",
					"}",
					"",
					"var tokenAuthorizationCode1;",
					"var tokenAuthorizationCode2;",
					"//Function to generate token",
					"function getToken() {",
					"    //Clear cookies",
					"    const cookieJar = pm.cookies.jar();",
					"    cookieJar.clear(pm.environment.get(\"coookieURL\"), () => {",
					"        console.log(\"Cookies cleared!\");",
					"        cookieJar.clear(pm.environment.get(\"coookieURL\") + '/usernamepassword/login', () => {",
					"            console.log(\"CSRF cookies cleared!\");",
					"",
					"            console.log(\"Generating token...\")",
					"            //GET authorization code",
					"            pm.sendRequest({",
					"                url: pm.environment.get(\"token_host\") + '/authorize?audience=' + pm.environment.get(\"vesta_audience\")",
					"                    + '&response_type=code&client_id=' + pm.environment.get(\"vesta_client_id\")",
					"                    + '&redirect_uri=https://*.equip.health',",
					"                method: 'GET',",
					"                header: {",
					"                    'Accept': '*/*'",
					"                }",
					"            }, (err, res) => {",
					"                let responseHeaderData = res.headers.get('Location').split('=');",
					"                let token = responseHeaderData[1].split('&');",
					"                tokenAuthorizationCode1 = token[0];",
					"                console.log(tokenAuthorizationCode1);",
					"",
					"                //POST request to login to vesta",
					"                let url = pm.environment.get(\"token_host\") + '/usernamepassword/login';",
					"                pm.sendRequest({",
					"                    url: url,",
					"                    method: 'POST',",
					"                    header: {",
					"                        'Accept': '*/*',",
					"                        'Content-Type': 'application/x-www-form-urlencoded',",
					"                    },",
					"                    body: {",
					"                        mode: 'urlencoded',",
					"                        urlencoded: [",
					"                            { key: \"username\", value: pm.environment.get(\"vesta_username\") },",
					"                            { key: \"password\", value: pm.environment.get(\"vesta_password\") },",
					"                            { key: \"state\", value: tokenAuthorizationCode1 },",
					"                            { key: \"tenant\", value: pm.environment.get(\"token_tenant\") },",
					"                            { key: \"client_id\", value: pm.environment.get(\"vesta_client_id\") },",
					"                            { key: \"redirect_uri\", value: \"https://*.equip.health\" },",
					"                            { key: \"response_type\", value: \"code\" },",
					"                            { key: \"connection\", value: \"Username-Password-Authentication\" }",
					"                        ]",
					"                    }",
					"                }, (err, res) => {",
					"                    const $ = cheerio.load(res.text());",
					"                    var wresult = ($(\"input\")[1])['attribs'].value; // get wresult",
					"                    var wctx = ($(\"input\")[2])['attribs'].value; // get wctx",
					"",
					"                    //POST request to get resume state",
					"                    let url = pm.environment.get(\"token_host\") + '/login/callback';",
					"                    pm.sendRequest({",
					"                        url: url,",
					"                        method: 'POST',",
					"                        header: {",
					"                            'Accept': '*/*',",
					"                            'Content-Type': 'application/x-www-form-urlencoded',",
					"                        },",
					"                        body: {",
					"                            mode: 'urlencoded',",
					"                            urlencoded: [",
					"                                { key: \"wa\", value: \"wsignin1.0\" },",
					"                                { key: \"wresult\", value: wresult },",
					"                                { key: \"wctx\", value: wctx }",
					"                            ]",
					"                        }",
					"                    }, (err, res) => {",
					"                        //GET authorization code",
					"                        pm.sendRequest({",
					"                            url: pm.environment.get(\"token_host\")",
					"                                + '/authorize?audience=' + pm.environment.get(\"vesta_audience\")",
					"                                + '&response_type=code&client_id=' + pm.environment.get(\"vesta_client_id\")",
					"                                + '&redirect_uri=https://*.equip.health',",
					"                            method: 'GET',",
					"                            header: {",
					"                                'Accept': '*/*'",
					"                            }",
					"                        }, (err, res) => {",
					"                            console.log(res);",
					"                            let responseHeaderData = res.headers.get('Location').split('=');",
					"                            let token = responseHeaderData[1].split('&');",
					"                            // console.log(token[0]);",
					"                            tokenAuthorizationCode2 = token[0];",
					"                            // Get token using POST request",
					"                            let url = pm.environment.get(\"token_host\") + '/oauth/token';",
					"                            pm.sendRequest({",
					"                                url: url,",
					"                                method: 'POST',",
					"                                header: {",
					"                                    'Accept': '*/*',",
					"                                    'Content-Type': 'application/x-www-form-urlencoded',",
					"                                },",
					"                                body: {",
					"                                    mode: 'urlencoded',",
					"                                    urlencoded: [",
					"                                        { key: \"client_id\", value: pm.environment.get(\"vesta_client_id\") },",
					"                                        { key: \"code\", value: tokenAuthorizationCode2 },",
					"                                        { key: \"audience\", value: pm.environment.get(\"vesta_audience\") },",
					"                                        { key: \"grant_type\", value: \"authorization_code\" },",
					"                                        { key: \"redirect_uri\", value: \"https://*.equip.health\" }]",
					"                                }",
					"                            }, (err, res) => {",
					"                                console.log(res.json().access_token)",
					"                                pm.environment.set(\"test-token\", res.json().access_token)",
					"                                pm.environment.set(\"OAuth_Timestamp\", new Date());",
					"",
					"                                // Set the ExpiresInTime variable to the time given in the response if it exists",
					"                                if (res.json().expires_in) {",
					"                                    expiresInTime = res.json().expires_in * 1000;",
					"                                }",
					"                                pm.environment.set(\"ExpiresInTime\", expiresInTime);",
					"                            })",
					"                        });",
					"                    });",
					"",
					"                });",
					"            });",
					"        });",
					"    });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7990db13-ad6e-483b-acbb-b8644f605948",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}