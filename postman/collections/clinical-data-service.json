{
	"info": {
		"_postman_id": "637f2a50-65c3-4dc8-91db-89fd3329948e",
		"name": "clinical-data-service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "19609580-637f2a50-65c3-4dc8-91db-89fd3329948e"
	},
	"item": [
		{
			"name": "Notes",
			"item": [
				{
					"name": "Add Patient",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0861801f-72bc-48bd-83bd-0550f880337b",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b7aecb51-dd79-4c26-af9a-c68e44361976",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}') + \" \" + pm.variables.replaceIn('{{$randomLastName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let phoneNumber = pm.variables.replaceIn('{{$randomPhoneNumber}}');",
											"let addressLine1 = pm.variables.replaceIn('{{$randomStreetAddress}}');",
											"let addressLine2 = \"addressLine2\";",
											"let city = pm.variables.replaceIn('{{$randomCity}}');",
											"//let country = pm.variables.replaceIn('{{$randomCountryCode}}');",
											"let zip = Math.floor(100000 + Math.random() * 900000);",
											"let latitude = pm.variables.replaceIn('{{$randomLatitude}}');",
											"let longitude = pm.variables.replaceIn('{{$randomLongitude}}');",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1950, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", phoneNumber);",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", addressLine1);",
											"pm.environment.set(\"patientAddressLine2\", addressLine2);",
											"pm.environment.set(\"patientCity\", city);",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", latitude);",
											"pm.environment.set(\"patientLongitude\", longitude);",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2)));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2)));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2)));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "db4fef9d-dd7c-4573-a375-27ab1eedaa0d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						}
					],
					"id": "39538626-4a83-435e-9223-d87d00108cdb"
				},
				{
					"name": "Attachments",
					"item": [
						{
							"name": "Add draft note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify note external id is generated\", function () {",
											"    pm.expect(jsonData.noteExternalId).length.greaterThan(0);",
											"});",
											"",
											"//set noteExternalId to be used in next request",
											"pm.environment.set(\"noteExternalId\", jsonData.noteExternalId);",
											""
										],
										"type": "text/javascript",
										"id": "1afd0c41-7c99-4f77-a511-0f57a1ba0055"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let ld = require('lodash');",
											"",
											"let noteCommunicationMethod = [\"Chat\", \"Email\", \"Inbound phone\", \"Outbound phone\", \"Video\"];",
											"let noteStatus = [\"draft\"];",
											"let activityWithName = [\"Case manager\", \"School\", \"Carer\", \"Patient\", \"Payor\", \"Provider\"];",
											"let noteType = [\"Admissions\", \"Authorization\", \"Billing\", \"Care coordination\", \"Consent forms\", \"Custody agreement\", \"FEN introduction\", \"Informed consent\", \"Inquiry\", \"Insurance\", \"Insurance card\", \"Intake session\", \"Medical clearance\", \"Medical records\", \"Patient chart\", \"Patient follow-up\", \"Phone screen\", \"Presenting problem\", \"Provider assignment\", \"Provider follow-up\", \"Qualifying call\", \"Referral\", \"Referral correspondance\", \"Release of information\", \"Treatment consent\", \"Treatment session\"];",
											"",
											"let recentDateTime = pm.variables.replaceIn('{{$randomDateRecent}}');",
											"let noteContent = \"{\\\"blocks\\\":[{\\\"key\\\":\\\"9vf7r\\\",\\\"text\\\":\\\"\" + pm.variables.replaceIn('{{$randomLoremSentences}}') + \"\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\";",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"noteCommunicationMethod\", ld.sample(noteCommunicationMethod));",
											"pm.environment.set(\"noteStatus\", ld.sample(noteStatus));",
											"pm.environment.set(\"noteTitle\", \"From Postman \" + recentDateTime + \" Equip Health\");",
											"pm.environment.set(\"noteContent\", JSON.stringify(noteContent));",
											"pm.environment.set(\"activityWithName\", ld.sample(activityWithName));",
											"pm.environment.set(\"noteType\", ld.sample(noteType));",
											"pm.environment.set(\"isActive\", pm.variables.replaceIn('{{$randomBoolean}}'));",
											"pm.environment.set(\"isConfidential\", pm.variables.replaceIn('{{$randomBoolean}}'));"
										],
										"type": "text/javascript",
										"id": "badf5a7b-e92d-448f-ad6a-dbe000fae855"
									}
								}
							],
							"id": "f3a12d9a-08b8-4f02-a754-04433e1d0bd3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"authoredByProviderExternalId\": \"{{authoredByProviderExternalId}}\",\n    \"patientExternalId\": \"{{patientId}}\",\n    \"title\": \"{{noteTitle}}\",\n    \"noteStatus\": \"{{noteStatus}}\",\n    \"noteContent\": {{noteContent}},\n    \"activityWith\": [\n        {\n            \"activityWithName\": \"{{activityWithName}}\",\n            \"otherName\": \"Postman otherName\",\n            \"isActive\": {{isActive}}\n        }\n    ],\n    \"noteCommunicationMethod\": \"{{noteCommunicationMethod}}\",\n    \"isConfidential\": {{isConfidential}},\n    \"noteType\": \"{{noteType}}\",\n    \"tags\": [\n        \"Test tag\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/notes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get upload url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify attachment upload url\", function () {",
											"    pm.expect(jsonData.attachmentUploadUrl).to.include(\"clinicaldata-service.s3\");",
											"    pm.expect(jsonData.attachmentExternalId).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"attachmentExternalId\",jsonData.attachmentExternalId);",
											"pm.environment.set(\"attachmentUploadUrl\",(jsonData.attachmentUploadUrl).split('Amz-Date')[0]);",
											"",
											""
										],
										"type": "text/javascript",
										"id": "d3c9448a-fa37-40a1-9344-bf0ae21767b7"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let fileName = pm.variables.replaceIn('{{$randomCommonFileName}}');",
											"",
											"pm.environment.set(\"fileName\", fileName);"
										],
										"type": "text/javascript",
										"id": "96c3fa75-7956-43fb-88a3-7c5c004a849c"
									}
								}
							],
							"id": "16de890a-c46c-4eca-b798-f3d566aa517d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/notes/{{noteExternalId}}/attachments/{{fileName}}/upload-url",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"notes",
										"{{noteExternalId}}",
										"attachments",
										"{{fileName}}",
										"upload-url"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get download url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify attachment download url\", function () {",
											"    pm.expect((jsonData.attachmentDownloadUrl).split('Amz-Date')[0]).to.eql(pm.environment.get('attachmentUploadUrl'));",
											"});"
										],
										"type": "text/javascript",
										"id": "30da36ff-88d0-4487-810a-4fe081c16ab2"
									}
								}
							],
							"id": "47e02abd-444f-41d9-a003-60f2af345798",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/notes/{{noteExternalId}}/attachments/{{fileName}}/download-url",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"notes",
										"{{noteExternalId}}",
										"attachments",
										"{{fileName}}",
										"download-url"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete attachment",
							"id": "de680fd6-6285-46eb-9655-c93aa3337046",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/clinical-data/notes/{{noteExternalId}}/attachments/{{attachmentExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"notes",
										"{{noteExternalId}}",
										"attachments",
										"{{attachmentExternalId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "ee70d65a-c972-4c3e-a0ea-b2cf9789bd37"
				},
				{
					"name": "Add/Delete draft notes",
					"item": [
						{
							"name": "Add draft note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify note external id is generated\", function () {",
											"    pm.expect(jsonData.noteExternalId).length.greaterThan(0);",
											"});",
											"",
											"//set noteExternalId to be used in next request",
											"pm.environment.set(\"noteExternalId\", jsonData.noteExternalId);",
											""
										],
										"type": "text/javascript",
										"id": "9edefd48-c67d-4ff7-a863-096de50d29b3"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let ld = require('lodash');",
											"",
											"let noteCommunicationMethod = [\"Chat\", \"Email\", \"Inbound phone\", \"Outbound phone\", \"Video\"];",
											"let noteStatus = [\"draft\"];",
											"let activityWithName = [\"Case manager\", \"School\", \"Carer\", \"Patient\", \"Payor\", \"Provider\"];",
											"let noteType = [\"Admissions\", \"Authorization\", \"Billing\", \"Care coordination\", \"Consent forms\", \"Custody agreement\", \"FEN introduction\", \"Informed consent\", \"Inquiry\", \"Insurance\", \"Insurance card\", \"Intake session\", \"Medical clearance\", \"Medical records\", \"Patient chart\", \"Patient follow-up\", \"Phone screen\", \"Presenting problem\", \"Provider assignment\", \"Provider follow-up\", \"Qualifying call\", \"Referral\", \"Referral correspondance\", \"Release of information\", \"Treatment consent\", \"Treatment session\"];",
											"",
											"let recentDateTime = pm.variables.replaceIn('{{$randomDateRecent}}');",
											"let noteContent = \"{\\\"blocks\\\":[{\\\"key\\\":\\\"9vf7r\\\",\\\"text\\\":\\\"\" + pm.variables.replaceIn('{{$randomLoremSentences}}') + \"\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\";",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"noteCommunicationMethod\", ld.sample(noteCommunicationMethod));",
											"pm.environment.set(\"noteStatus\", ld.sample(noteStatus));",
											"pm.environment.set(\"noteTitle\", \"From Postman \" + recentDateTime + \" Equip Health\");",
											"pm.environment.set(\"noteContent\", JSON.stringify(noteContent));",
											"pm.environment.set(\"activityWithName\", ld.sample(activityWithName));",
											"pm.environment.set(\"noteType\", ld.sample(noteType));",
											"pm.environment.set(\"isActive\", pm.variables.replaceIn('{{$randomBoolean}}'));",
											"pm.environment.set(\"isConfidential\", pm.variables.replaceIn('{{$randomBoolean}}'));"
										],
										"type": "text/javascript",
										"id": "890f47dc-e3ea-489a-b4fb-62ffc5fc11c9"
									}
								}
							],
							"id": "3a44d9d2-dd6c-4a56-aef3-c408b22aaee8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"authoredByProviderExternalId\": \"{{authoredByProviderExternalId}}\",\n    \"patientExternalId\": \"{{patientId}}\",\n    \"title\": \"{{noteTitle}}\",\n    \"noteStatus\": \"{{noteStatus}}\",\n    \"noteContent\": {{noteContent}},\n    \"activityWith\": [\n        {\n            \"activityWithName\": \"{{activityWithName}}\",\n            \"otherName\": \"Postman otherName\",\n            \"isActive\": {{isActive}}\n        }\n    ],\n    \"noteCommunicationMethod\": \"{{noteCommunicationMethod}}\",\n    \"isConfidential\": {{isConfidential}},\n    \"noteType\": \"{{noteType}}\",\n    \"tags\": [\n        \"Test tag\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/notes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete draft note by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify draft note is deleted\", function () {",
											"    pm.expect(jsonData.noteExternalId).length.greaterThan(0);",
											"});"
										],
										"type": "text/javascript",
										"id": "99567be1-e53a-4bf1-a00a-88ba8ad50a0c"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let noteExternalId1 = [\"991cc2bb-9d7c-4389-ab6a-6cd18ddbdce0\"];"
										],
										"type": "text/javascript",
										"id": "7efb16c1-dae3-4654-a76f-99f5428ff666"
									}
								}
							],
							"id": "a9d731f9-d8ab-46b9-bc45-05c2c6ed6793",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/notes/{{noteExternalId}}?authoredByProviderExternalId={{authoredByProviderExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"notes",
										"{{noteExternalId}}"
									],
									"query": [
										{
											"key": "authoredByProviderExternalId",
											"value": "{{authoredByProviderExternalId}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "f2964c48-160b-4375-9370-3b41ef134247"
				},
				{
					"name": "Update note with void reason",
					"item": [
						{
							"name": "Add signed note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify note external id is generated\", function () {",
											"    pm.expect(jsonData.noteExternalId).length.greaterThan(0);",
											"});",
											"",
											"//set noteExternalId to be used in next request",
											"pm.environment.set(\"noteExternalId\", jsonData.noteExternalId);",
											""
										],
										"type": "text/javascript",
										"id": "c7b27ab9-cf1b-4d3f-b690-7e3f0104e7bc"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let ld = require('lodash');",
											"",
											"let noteCommunicationMethod = [\"Chat\", \"Email\", \"Inbound phone\", \"Outbound phone\", \"Video\"];",
											"let noteStatus = [\"signed\"];",
											"let activityWithName = [\"Case manager\", \"School\", \"Carer\", \"Patient\", \"Payor\", \"Provider\"];",
											"let noteType = [\"Admissions\", \"Authorization\", \"Billing\", \"Care coordination\", \"Consent forms\", \"Custody agreement\", \"FEN introduction\", \"Informed consent\", \"Inquiry\", \"Insurance\", \"Insurance card\", \"Intake session\", \"Medical clearance\", \"Medical records\", \"Patient chart\", \"Patient follow-up\", \"Phone screen\", \"Presenting problem\", \"Provider assignment\", \"Provider follow-up\", \"Qualifying call\", \"Referral\", \"Referral correspondance\", \"Release of information\", \"Treatment consent\", \"Treatment session\"];",
											"",
											"let recentDateTime = pm.variables.replaceIn('{{$randomDateRecent}}');",
											"let noteContent = \"{\\\"blocks\\\":[{\\\"key\\\":\\\"9vf7r\\\",\\\"text\\\":\\\"\" + pm.variables.replaceIn('{{$randomLoremSentences}}') + \"\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\";",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"noteCommunicationMethod\", ld.sample(noteCommunicationMethod));",
											"pm.environment.set(\"noteStatus\", ld.sample(noteStatus));",
											"pm.environment.set(\"noteTitle\", \"From Postman \" + recentDateTime + \" Equip Health\");",
											"pm.environment.set(\"noteContent\", JSON.stringify(noteContent));",
											"pm.environment.set(\"activityWithName\", ld.sample(activityWithName));",
											"pm.environment.set(\"noteType\", ld.sample(noteType));",
											"pm.environment.set(\"isActive\", pm.variables.replaceIn('{{$randomBoolean}}'));",
											"pm.environment.set(\"isConfidential\", pm.variables.replaceIn('{{$randomBoolean}}'));"
										],
										"type": "text/javascript",
										"id": "79cede34-3310-48db-9757-59f9732f1546"
									}
								}
							],
							"id": "e24112b4-8c63-451c-b2e8-c5eefc7a02ed",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"authoredByProviderExternalId\": \"{{authoredByProviderExternalId}}\",\n    \"patientExternalId\": \"{{patientId}}\",\n    \"title\": \"{{noteTitle}}\",\n    \"noteStatus\": \"{{noteStatus}}\",\n    \"noteContent\": {{noteContent}},\n    \"activityWith\": [\n        {\n            \"activityWithName\": \"{{activityWithName}}\",\n            \"otherName\": \"Postman otherName\",\n            \"isActive\": {{isActive}}\n        }\n    ],\n    \"noteCommunicationMethod\": \"{{noteCommunicationMethod}}\",\n    \"isConfidential\": {{isConfidential}},\n    \"noteType\": \"{{noteType}}\",\n    \"tags\": [\n        \"Test tag\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/notes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update note with void reason",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify note external id is generated\", function () {",
											"    pm.expect(jsonData.noteExternalId).length.greaterThan(0);",
											"});"
										],
										"type": "text/javascript",
										"id": "c46c76bf-4193-479f-9eeb-43a820d9db10"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// setTimeout(function(){}, [2000]);",
											"",
											"let ld = require('lodash');",
											"",
											"let voidReason = [\"Duplicate\", \"Made in error\"];",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"voidReason\", ld.sample(voidReason));",
											"pm.environment.set(\"noteStatus\", \"void\");"
										],
										"type": "text/javascript",
										"id": "bbe3aed4-2283-4c2d-94db-dee63d238242"
									}
								}
							],
							"id": "54c57b21-67a0-4b71-b32c-63e0277716fe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"noteExternalId\": \"{{noteExternalId}}\",\n    \"authoredByProviderExternalId\": \"{{authoredByProviderExternalId}}\",\n    \"noteStatus\": \"{{noteStatus}}\",\n    \"voidReason\": \"{{voidReason}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/notes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get note by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify note details\", function () {",
											"    pm.expect(jsonData.noteExternalId).to.eql(pm.environment.get(\"noteExternalId\"));",
											"    pm.expect(jsonData.patientExternalId).to.eql(pm.environment.get(\"patientId\"));",
											"    pm.expect(jsonData.authoredByProviderExternalId).to.eql(pm.environment.get(\"authoredByProviderExternalId\"));",
											"    pm.expect(jsonData.lastModifiedProviderExternalId).to.eql(pm.environment.get(\"authoredByProviderExternalId\"));",
											"    pm.expect(jsonData.title).to.eql(pm.environment.get(\"noteTitle\"));",
											"    pm.expect(jsonData.noteStatus).to.eql(pm.environment.get(\"noteStatus\"));",
											"    pm.expect(jsonData.noteContent).to.eql(JSON.parse(pm.environment.get(\"noteContent\")));",
											"    pm.expect(jsonData.activityWith[0]['activityWithName'].toLowerCase()).to.eql(pm.environment.get(\"activityWithName\").toLowerCase());",
											"    pm.expect(jsonData.noteCommunicationMethod).to.eql(pm.environment.get(\"noteCommunicationMethod\").toLowerCase());",
											"    pm.expect(jsonData.isConfidential.toString()).to.eql(pm.environment.get(\"isConfidential\"));",
											"    pm.expect(jsonData.noteType).to.eql(pm.environment.get(\"noteType\"));",
											"    pm.expect(jsonData.tags.toString()).to.eql(\"Test tag\");",
											"});"
										],
										"type": "text/javascript",
										"id": "ab0975f2-8a06-4fc8-ad01-472fc6a96ed6"
									}
								}
							],
							"id": "322faf9d-1c3d-42fe-aa90-9fa043feb42e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/notes/{{noteExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"notes",
										"{{noteExternalId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "fc1809a1-e8a0-41f0-8a06-b7d3931dc476"
				},
				{
					"name": "Add/Update draft note",
					"item": [
						{
							"name": "Add note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify note external id is generated\", function () {",
											"    pm.expect(jsonData.noteExternalId).length.greaterThan(0);",
											"});",
											"",
											"//set noteExternalId to be used in next request",
											"pm.environment.set(\"noteExternalId\", jsonData.noteExternalId);",
											""
										],
										"type": "text/javascript",
										"id": "8a0d5109-cb79-4476-a3eb-375c494dfef7"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let ld = require('lodash');",
											"",
											"let noteCommunicationMethod = [\"Chat\", \"Email\", \"Inbound phone\", \"Outbound phone\", \"Video\"];",
											"let noteStatus = [\"draft\"];",
											"let activityWithName = [\"Case manager\", \"School\", \"Carer\", \"Patient\", \"Payor\", \"Provider\"];",
											"let noteType = [\"Admissions\", \"Authorization\", \"Billing\", \"Care coordination\", \"Consent forms\", \"Custody agreement\", \"FEN introduction\", \"Informed consent\", \"Inquiry\", \"Insurance\", \"Insurance card\", \"Intake session\", \"Medical clearance\", \"Medical records\", \"Patient chart\", \"Patient follow-up\", \"Phone screen\", \"Presenting problem\", \"Provider assignment\", \"Provider follow-up\", \"Qualifying call\", \"Referral\", \"Referral correspondance\", \"Release of information\", \"Treatment consent\", \"Treatment session\"];",
											"",
											"let recentDateTime = pm.variables.replaceIn('{{$randomDateRecent}}');",
											"let noteContent = \"{\\\"blocks\\\":[{\\\"key\\\":\\\"9vf7r\\\",\\\"text\\\":\\\"\" + pm.variables.replaceIn('{{$randomLoremSentences}}') + \"\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\";",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"noteCommunicationMethod\", ld.sample(noteCommunicationMethod));",
											"pm.environment.set(\"noteStatus\", ld.sample(noteStatus));",
											"pm.environment.set(\"noteTitle\", \"From Postman \" + recentDateTime + \" Equip Health\");",
											"pm.environment.set(\"noteContent\", JSON.stringify(noteContent));",
											"pm.environment.set(\"activityWithName\", ld.sample(activityWithName));",
											"pm.environment.set(\"noteType\", ld.sample(noteType));",
											"pm.environment.set(\"isActive\", pm.variables.replaceIn('{{$randomBoolean}}'));",
											"pm.environment.set(\"isConfidential\", pm.variables.replaceIn('{{$randomBoolean}}'));"
										],
										"type": "text/javascript",
										"id": "80949060-243f-4aa2-9508-01bf1e84de6d"
									}
								}
							],
							"id": "0497204c-50d7-472a-bda7-dafe6ca6706f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"authoredByProviderExternalId\": \"{{authoredByProviderExternalId}}\",\n    \"patientExternalId\": \"{{patientId}}\",\n    \"title\": \"{{noteTitle}}\",\n    \"noteStatus\": \"{{noteStatus}}\",\n    \"noteContent\": {{noteContent}},\n    \"activityWith\": [\n        {\n            \"activityWithName\": \"{{activityWithName}}\",\n            \"otherName\": \"Postman otherName\",\n            \"isActive\": {{isActive}}\n        }\n    ],\n    \"noteCommunicationMethod\": \"{{noteCommunicationMethod}}\",\n    \"isConfidential\": {{isConfidential}},\n    \"noteType\": \"{{noteType}}\",\n    \"tags\": [\n        \"Test tag\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/notes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get note by id after add",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify note details\", function () {",
											"    pm.expect(jsonData.noteExternalId).to.eql(pm.environment.get(\"noteExternalId\"));",
											"    pm.expect(jsonData.patientExternalId).to.eql(pm.environment.get(\"patientId\"));",
											"    pm.expect(jsonData.authoredByProviderExternalId).to.eql(pm.environment.get(\"authoredByProviderExternalId\"));",
											"    pm.expect(jsonData.lastModifiedProviderExternalId).to.eql(pm.environment.get(\"authoredByProviderExternalId\"));",
											"    pm.expect(jsonData.title).to.eql(pm.environment.get(\"noteTitle\"));",
											"    pm.expect(jsonData.noteStatus).to.eql(pm.environment.get(\"noteStatus\"));",
											"    pm.expect(jsonData.noteContent).to.eql(JSON.parse(pm.environment.get(\"noteContent\")));",
											"    pm.expect(jsonData.activityWith[0]['activityWithName'].toLowerCase()).to.eql(pm.environment.get(\"activityWithName\").toLowerCase());",
											"    pm.expect(jsonData.noteCommunicationMethod).to.eql(pm.environment.get(\"noteCommunicationMethod\").toLowerCase());",
											"    pm.expect(jsonData.isConfidential.toString()).to.eql(pm.environment.get(\"isConfidential\"));",
											"    pm.expect(jsonData.noteType).to.eql(pm.environment.get(\"noteType\"));",
											"    pm.expect(jsonData.tags.toString()).to.eql(\"Test tag\");",
											"});"
										],
										"type": "text/javascript",
										"id": "1c2e9e67-257e-48d1-a2b3-84325061775c"
									}
								}
							],
							"id": "248ef62b-08c4-41c4-9f28-a421e15010b5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/notes/{{noteExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"notes",
										"{{noteExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update note",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d13b0554-0fb1-472b-8312-3442a819566f",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify note external id is generated\", function () {",
											"    pm.expect(jsonData.noteExternalId).length.greaterThan(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7e9d7164-29ae-497a-93fe-5299dc6f0190",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let noteCommunicationMethod = [\"Chat\", \"Email\", \"Inbound phone\", \"Outbound phone\", \"Video\"];",
											"let noteStatus = [\"draft\"];",
											"let activityWithName = [\"Case manager\", \"School\", \"Carer\", \"Patient\", \"Payor\", \"Provider\"];",
											"let noteType = [\"Admissions\", \"Authorization\", \"Billing\", \"Care coordination\", \"Consent forms\", \"Custody agreement\", \"FEN introduction\", \"Informed consent\", \"Inquiry\", \"Insurance\", \"Insurance card\", \"Intake session\", \"Medical clearance\", \"Medical records\", \"Patient chart\", \"Patient follow-up\", \"Phone screen\", \"Presenting problem\", \"Provider assignment\", \"Provider follow-up\", \"Qualifying call\", \"Referral\", \"Referral correspondance\", \"Release of information\", \"Treatment consent\", \"Treatment session\"];",
											"",
											"let recentDateTime = pm.variables.replaceIn('{{$randomDateRecent}}');",
											"let noteContent = \"{\\\"blocks\\\":[{\\\"key\\\":\\\"9vf7r\\\",\\\"text\\\":\\\"\" + pm.variables.replaceIn('{{$randomLoremSentences}}') + \"\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\";",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"noteCommunicationMethod\", ld.sample(noteCommunicationMethod));",
											"pm.environment.set(\"noteStatus\", ld.sample(noteStatus));",
											"pm.environment.set(\"noteContent\", JSON.stringify(noteContent));",
											"pm.environment.set(\"activityWithName\", ld.sample(activityWithName));",
											"pm.environment.set(\"noteType\", ld.sample(noteType));",
											"pm.environment.set(\"isActive\", pm.variables.replaceIn('{{$randomBoolean}}'));",
											"pm.environment.set(\"isConfidential\", pm.variables.replaceIn('{{$randomBoolean}}'));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "741bfcde-07bc-41f5-9e08-85405f17fbbd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"noteExternalId\": \"{{noteExternalId}}\",\n    \"authoredByProviderExternalId\": \"{{authoredByProviderExternalId}}\",\n    \"title\": \"{{noteTitle}}\",\n    \"noteStatus\": \"{{noteStatus}}\",\n    \"noteContent\": {{noteContent}},\n    \"activityWith\": [\n        {\n            \"activityWithName\": \"{{activityWithName}}\",\n            \"otherName\": \"Postman otherName\",\n            \"isActive\": {{isActive}}\n        }\n    ],\n    \"noteCommunicationMethod\": \"{{noteCommunicationMethod}}\",\n    \"isConfidential\": {{isConfidential}},\n    \"noteType\": \"{{noteType}}\",\n    \"tags\": [\n        \"Test tag\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/notes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get note by id after edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify note details\", function () {",
											"    pm.expect(jsonData.noteExternalId).to.eql(pm.environment.get(\"noteExternalId\"));",
											"    pm.expect(jsonData.patientExternalId).to.eql(pm.environment.get(\"patientId\"));",
											"    pm.expect(jsonData.authoredByProviderExternalId).to.eql(pm.environment.get(\"authoredByProviderExternalId\"));",
											"    pm.expect(jsonData.lastModifiedProviderExternalId).to.eql(pm.environment.get(\"authoredByProviderExternalId\"));",
											"    pm.expect(jsonData.title).to.eql(pm.environment.get(\"noteTitle\"));",
											"    pm.expect(jsonData.noteStatus).to.eql(pm.environment.get(\"noteStatus\"));",
											"    pm.expect(jsonData.noteContent).to.eql(JSON.parse(pm.environment.get(\"noteContent\")));",
											"    pm.expect(jsonData.activityWith[0]['activityWithName'].toLowerCase()).to.eql(pm.environment.get(\"activityWithName\").toLowerCase());",
											"    pm.expect(jsonData.noteCommunicationMethod).to.eql(pm.environment.get(\"noteCommunicationMethod\").toLowerCase());",
											"    pm.expect(jsonData.isConfidential.toString()).to.eql(pm.environment.get(\"isConfidential\"));",
											"    pm.expect(jsonData.noteType).to.eql(pm.environment.get(\"noteType\"));",
											"    pm.expect(jsonData.tags.toString()).to.eql(\"Test tag\");",
											"});"
										],
										"type": "text/javascript",
										"id": "d86ea579-40bb-4a14-9f58-f20ddaf1321b"
									}
								}
							],
							"id": "f0bb1a05-38ef-4827-856b-c560935263a4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/notes/{{noteExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"notes",
										"{{noteExternalId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "4cc71249-4d2a-4776-b28f-6ac2bcc57aa1"
				},
				{
					"name": "Get note-types",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"//Verify json schema",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/schema\",",
									"    \"items\": {",
									"        \"anyOf\": [",
									"            {",
									"                \"required\": [",
									"                    \"noteTypeExternalId\",",
									"                    \"noteType\"",
									"                ],",
									"                \"properties\": {",
									"                    \"noteTypeExternalId\": {},",
									"                    \"noteType\": {}",
									"                }",
									"            }",
									"        ]",
									"    }",
									"};",
									"",
									"pm.test('Verify json schema', function () {",
									"    pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"let noteTypes = [\"Admissions\", \"Authorization\", \"Billing\", \"Care coordination\", \"Consent forms\", \"Custody agreement\", \"FEN introduction\", \"Informed consent\", \"Inquiry\", \"Insurance\", \"Insurance card\", \"Intake session\", \"Medical clearance\", \"Medical records\", \"Patient chart\", \"Patient follow-up\", \"Phone screen\", \"Presenting problem\", \"Provider assignment\", \"Provider follow-up\", \"Qualifying call\", \"Referral\", \"Referral correspondance\", \"Release of information\", \"Treatment consent\", \"Treatment session\"];",
									"",
									"pm.test(\"Verify note types\", function () {",
									"    noteTypes.sort();",
									"    console.log(noteTypes);",
									"    let ld = require('lodash');",
									"    let sortedJsonData = ld.orderBy(jsonData, ['label'], ['asc']);",
									"    console.log(sortedJsonData);",
									"    for (i = 0; i < noteTypes.length; i++) {",
									"        tests[\"Note Type: \" + noteTypes[i] + \" exists\"] = pm.expect(sortedJsonData[i][\"noteType\"]).to.eql(noteTypes[i]);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "79f0f51e-2564-45ad-93e4-d787904425f1"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "5a013fcd-4d67-4155-a512-95758d02aae6"
							}
						}
					],
					"id": "04c228b2-ae76-4479-b5d4-f0d0767574ed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/notes/note-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"notes",
								"note-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get void reason",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"let voidReasons = [\"Duplicate\", \"Made in error\"];",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i]['voidReasonExternalId']).to.be.a('string');",
									"        pm.expect(jsonData[i]['voidReason']).to.be.a('string');",
									"        pm.expect(jsonData[i]['isActive']).to.be.a('boolean');",
									"    }",
									"});",
									"",
									"pm.test(\"Verify void reasons\", function () {",
									"    voidReasons.sort();",
									"    let ld = require('lodash');",
									"    let sortedJsonData = ld.orderBy(jsonData, ['label'], ['asc']);",
									"",
									"    for (i = 0; i < voidReasons.length; i++) {",
									"        tests[\"Void reason: \" + voidReasons[i] + \" exists\"] = pm.expect(sortedJsonData[i]['voidReason']).eql(voidReasons[i]);",
									"    }",
									"});",
									"",
									"pm.environment.set(\"voidReasonExternalId\", jsonData[0]['voidReasonExternalId']);"
								],
								"type": "text/javascript",
								"id": "2310405e-33f9-4bc7-98ce-1b8dad18965f"
							}
						}
					],
					"id": "54951d3c-eb54-4ffc-8925-da94ed306fe6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/notes/void-reasons",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"notes",
								"void-reasons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get activity-with",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"let activityWithName = [\"Carer\", \"Case manager\", \"Patient\", \"Payor\", \"Provider\", \"School\"];",
									"",
									"pm.test(\"Verify activity with\", function () {",
									"    activityWithName.sort();",
									"    let ld = require('lodash');",
									"    let sortedJsonData = ld.orderBy(jsonData, ['label'], ['asc']);",
									"",
									"    for (i = 0; i < activityWithName.length; i++) {",
									"        tests[\"Activity with: \" + activityWithName[i] + \" exists\"] = pm.expect(sortedJsonData[i][\"activityWithName\"]).to.eql(activityWithName[i]);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "e5cd2783-4da2-49b0-b1eb-8b35fad5a1bf"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "b4916d6e-7057-4c1c-9503-da0caafa35d4"
							}
						}
					],
					"id": "e2788592-e9fc-4b50-9c67-e40ef046fc17",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/notes/activity-with",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"notes",
								"activity-with"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get communication methods",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"let communicationMethods = [\"Inbound phone\", \"Outbound phone\", \"Video\", \"Email\", \"Chat\"];",
									"",
									"pm.test(\"Verify communication methods\", function () {",
									"    communicationMethods.sort();",
									"    let ld = require('lodash');",
									"    let sortedJsonData = ld.orderBy(jsonData, ['methodName'], ['asc']);",
									"",
									"    for (i = 0; i < communicationMethods.length; i++) {",
									"        tests[\"Communication method: \" + communicationMethods[i] + \" exists\"] = pm.expect(sortedJsonData[i][\"methodName\"]).to.eql(communicationMethods[i]);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "b5a099e8-9d9f-4e36-9b7c-132e2ab61d1c"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "445ce642-5f4a-4f7f-ae8f-7ea2b439f1ba"
							}
						}
					],
					"id": "ce490f60-a4ae-473f-811b-3484e660d34b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/notes/communication-methods",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"notes",
								"communication-methods"
							]
						}
					},
					"response": []
				}
			],
			"id": "6a01c402-2977-486e-b8d9-b669e346be13",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "e3c99149-dd3f-40a1-94ce-54a0547ca711"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "d62d0747-91ac-4a20-8943-95db729793de"
					}
				}
			]
		},
		{
			"name": "Coverage",
			"item": [
				{
					"name": "Add Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2c882b5-67de-4bea-93e6-9629f3d51f2a",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"patientId\", jsonData.id);",
									"// pm.environment.set(\"firstName\", response_text);",
									"// pm.environment.set(\"lastName\", response_text);",
									"// pm.environment.set(\"dateOfBirth\", response_text);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ddb3d198-1439-4fdb-8b81-d94448e2efd4",
								"exec": [
									"let ld = require('lodash');",
									"",
									"let gendersList = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"let pronounsList = [",
									"    \"He/Him/His\",",
									"    \"She/Her/Hers\",",
									"    \"They/Them/Theirs\",",
									"    \"Other\"",
									"];",
									"",
									"let ethnicitiesList = [",
									"    \"Asian\",",
									"    \"Black/African American\",",
									"    \"White/Caucasian\",",
									"    \"Hispanic/Latinx\",",
									"    \"Native American, Indian American, or Alaska Native\",",
									"    \"Native Hawaiian or other Pacific Islander\",",
									"    \"Middle Eastern or North African\",",
									"    \"Prefer not to answer\",",
									"    \"Other\"",
									"];",
									"",
									"let languagesList = [",
									"    \"English\",",
									"    \"Spanish\",",
									"    \"Chinese\",",
									"    \"French\",",
									"    \"Tagalog\",",
									"    \"Vietnamese\",",
									"    \"Korean\",",
									"    \"German\",",
									"    \"Russian\",",
									"    \"Italian\",",
									"    \"Portuguese\",",
									"    \"Polish\",",
									"    \"Japanese\",",
									"    \"Persian\",",
									"    \"Greek\",",
									"    \"Serbo-Croatian\",",
									"    \"Armenian\",",
									"    \"Yiddish\",",
									"    \"American Sign Language (ASL)\"",
									"];",
									"",
									"let sexList = [",
									"    \"Male\",",
									"    \"Female\"",
									"];",
									"",
									"let timezonesList = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\"",
									"];",
									"",
									"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"patientFirstName\", firstName);",
									"pm.environment.set(\"patientLastName\", lastName);",
									"pm.environment.set(\"patientEmail\", email);",
									"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientChosenName\", chosenName);",
									"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
									"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
									"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientCountry\", \"US\");",
									"pm.environment.set(\"patientZip\", zip.toString());",
									"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
									"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
									"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientSex\", ld.sample(sexList));",
									"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
									"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "36d22779-1db6-4aa3-bcef-b982a5719a7d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add coverage1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "eeb3447a-efae-4f24-9fdb-9d5aaed4ebf2",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"var payorExternalids;",
									"",
									"if (pm.environment.name === \"qa\") {",
									"    payorExternalids = [",
									"",
									"  \"3e395a8c-521e-399e-c413-ada8965515da\",",
									"  \"8de23718-b5f8-dc6b-c079-0e1ccf39c174\",",
									"  \"0a0d9714-be8b-76a9-6a85-e5446abdfd72\",",
									"  \"1771abe3-0ea6-0da0-b1f2-16543d0c9235\",",
									"  \"166ea8c8-7541-b0ac-61d5-3dd4222b28b5\",",
									"  \"21ee4ad0-5a10-0ef4-67b9-c0e20c44e7c3\",",
									"  \"5921b11f-f1a3-9cc9-bffc-86eea8b431c2\",",
									"  \"0a8f0cc7-71d6-c236-f3de-8cdcff0e741a\",",
									"  \"5c95d9fb-7f38-4062-6502-bacd9a177b22\",",
									"  \"7113e37e-ff58-ba1e-1cf5-9902d698c232\",",
									"  \"649dec3f-910a-6147-a599-bee65689fc93\",",
									"  \"87b4ba4b-499d-4119-f35e-8dd9dc1c7c0a\",",
									"  \"8e5b223b-0358-f6aa-a736-1667389f033f\",",
									"  \"d2175acf-d9f5-5490-f9e7-ecfdb2b720bb\",",
									"  \"e201f6f9-346b-d5d9-01dc-7efc817f26f5\",",
									"  \"9295512b-0828-519a-7f6c-76177b977a39\",",
									"  \"f0aa80ef-2592-2d2a-6cc3-fcd3c2937885\",",
									"  \"ad3a64bf-91c0-57ff-3d5c-86f68e70ef3a\",",
									"  \"d8630164-6c15-2737-bc05-d605746ec9e9\",",
									"  \"6b758c44-bbb3-5932-5290-a1653d5a4edc\",",
									"  \"88a14513-8064-c579-af9b-2b643226cfbd\",",
									"  \"8898dbb6-1e8f-3351-f6b6-da85d0af2769\",",
									"  \"e80cfead-15b8-f4f7-01cd-6ada6f73b727\",",
									"  \"c4f14fb2-ef4d-f7d5-6a59-56bfcf1e019f\",",
									"  \"4d576ad1-7ea4-31f3-9d18-c8427e96613c\",",
									"  \"158d3862-29da-626b-5fc0-b9d26e99fe16\",",
									"  \"ba149d58-9b57-d43e-68ef-7c2512b64706\",",
									"  \"c796b1e8-5a96-1243-8972-81830db39b41\",",
									"  \"2808e5d0-3238-8e09-2b0e-aa1df1fc4d5e\",",
									"  \"71c17385-9ab6-54bc-960d-89723ecc128a\",",
									"  \"a9d28970-647a-7fe1-f334-476e8840c05b\",",
									"  \"0b0f80af-28d3-45bd-01b3-d94f2752683a\",",
									"  \"0ceff77d-a8ba-24aa-9c8a-980fbce8c181\",",
									"  \"6f160c82-f8b6-dad5-35b3-c659cac7bf90\",",
									"  \"8132da12-e499-767d-4375-0e5069c5d19b\",",
									"  \"5548c2e8-8920-104b-b9a6-c9ae02342b04\",",
									"  \"6cb52ff0-9d4b-6132-2ce4-84d44d0674f2\",",
									"  \"0017a4fd-0d32-0156-de21-7d109719af5f\",",
									"  \"3ec238c1-2327-43a5-48ea-18ae20295ed7\",",
									"  \"6da2522f-bb9c-4230-d013-d4221a1d08e1\",",
									"  \"b28710ed-3d49-3b34-e212-38d85391c9e1\",",
									"  \"d96346bf-3bd1-cad6-c08b-fc178ed1c493\",",
									"  \"c84af9f9-760a-841c-55d4-1176cce14df0\",",
									"  \"b1bce313-7550-a084-a8e4-fddfb79c50ee\",",
									"  \"3b5f1abf-ecc1-4a29-5c9a-96307b9066cd\",",
									"  \"cbf9b456-2ada-a1a8-c83c-eb32d727d09b\",",
									"  \"4a946da6-3548-fccb-6a4c-6a4b7ade0adf\",",
									"  \"17d0a805-747f-e222-4008-6aef21dbca1c\",",
									"  \"51eec5ff-02b5-b56a-a2df-e936d8f458ef\",",
									"  \"95d4720f-9682-2e69-886a-6aa6ae3010f8\",",
									"  \"ba6e4eed-7245-14cc-36bc-089b7eb022f2\",",
									"  \"94fbba21-6630-bb25-ae1b-2ffe3e259a3c\",",
									"  \"069293f9-2970-1107-20a7-c267d4ee2c75\",",
									"  \"1b966e58-e358-68ad-7baf-cf3af7364298\",",
									"  \"23fc50c3-2499-ef22-5138-7d3efba331b6\",",
									"  \"d8292d3e-2872-bbe0-7ec2-62e281ba8e48\",",
									"  \"e399962f-6470-c2d6-a17c-9e88f46a0a92\",",
									"  \"7c883601-97f5-b9c0-6622-d180f5abb237\",",
									"  \"55a26fd5-45d8-76d2-2878-6ee87835a356\",",
									"  \"957200ee-dfb9-ec80-f158-30d25aaedf4a\",",
									"  \"2bff21f9-ed17-62ba-16f9-4ac1a3dc3756\",",
									"  \"49401fc5-1579-38ac-be1d-6913cb27792b\",",
									"  \"a7abc99e-4c97-6b41-f836-ba455f00d55b\",",
									"  \"eda43b92-6865-3ae6-b36a-e8d37244829d\",",
									"  \"798b7d74-6b3c-2c2a-8014-953134d9e62a\",",
									"  \"2896cdec-ec99-7582-3121-58f76cc9474b\",",
									"  \"8c6c8372-39e7-f059-b9a3-e3e0d5167379\",",
									"  \"d727659f-0d75-72f3-574f-5ae300d40f8a\",",
									"  \"14890191-4561-8e7f-015b-74c85f93d1bd\",",
									"  \"58bbd1b6-d3ba-5ddc-f76e-62305c67144b\",",
									"  \"218332b0-51aa-8e8c-c215-b3835164c4c1\",",
									"  \"25599c3e-f84f-ff24-518a-23137741f837\",",
									"  \"2a880b89-199f-edfe-7c54-ec7bb0e564b8\",",
									"  \"d03c6f2e-027b-006f-e8cb-ecd3e36b21b4\",",
									"  \"6a3b9a74-4ff4-bc62-077e-04b8b9c3947c\",",
									"  \"76ba20e4-7b06-1b8f-f46b-bac8d8d0493f\",",
									"  \"5b96ab81-9e1d-b668-d1c2-50709ae930ab\",",
									"  \"22d50042-2d59-c3cc-eb83-55051515201f\",",
									"  \"3b7d24fc-7878-ff8d-b7a4-ad1f14e92980\",",
									"  \"ecede5fb-6ebe-ebca-d0f6-7925c6de930e\",",
									"  \"e37fd416-6b89-c30a-cb24-1e87fa6d864a\",",
									"  \"fe7bccd0-123d-9129-2bcc-91f8822eafbe\",",
									"  \"5e53ad01-c0ec-6540-0b8b-1c3ad31c7336\",",
									"  \"4e655db0-230c-a3ad-662e-c141a0d48d6e\",",
									"  \"fcba7519-1795-4569-e4c4-6521bd8549ef\",",
									"  \"db9709a4-9285-589c-e3ca-055c271f6bc7\",",
									"  \"9c20d0c9-f96c-5711-d161-7b47cde657f5\",",
									"  \"71d15488-2355-7198-9913-94af8947e16b\",",
									"  \"d7b7bdb7-e89d-7783-194f-7fc424396b25\",",
									"  \"cc990363-d368-92b4-1984-329a4dfd0ce8\",",
									"  \"68bae04b-3715-026f-cc57-7948a129fd0b\",",
									"  \"13514748-8b22-c0c4-abc2-744ccac0bd1a\",",
									"  \"44bedf25-4661-1182-211d-1da66e5f7071\",",
									"  \"22f8939f-e2c6-fe4f-fb16-3722a6e6dd0d\",",
									"  \"3a694823-a761-a630-aa7a-581a8d09ab63\",",
									"  \"001b3d9b-090e-1ee1-53c5-3b0e6efb2159\",",
									"  \"c0fc2936-0f80-d577-ea9e-0d28cc7040b2\",",
									"  \"287a2bb1-f442-951a-2c38-18ef2bb60b26\",",
									"  \"19813cef-c0b4-bcd7-1d1c-d96348d3164b\",",
									"  \"ce921aee-b487-eaa0-f494-67791d635cdd\",",
									"  \"b97caebd-314d-1bce-e04a-21e255613efc\",",
									"  \"4d1e96a6-69d0-9bf4-0018-434d6b69ad23\",",
									"  \"1048f774-3126-a2e6-bf90-e4acd19d6366\",",
									"  \"0f81615a-6522-5a05-8e90-c7e8f06fcc76\",",
									"  \"a6c8ff4b-a293-66ee-d89d-54db9da1bede\",",
									"  \"c4dbe960-70ab-3273-25fb-c4b3e0672458\",",
									"  \"6df5a799-0639-ae2f-5e89-15c9fdd3d895\",",
									"  \"3d638c03-2b82-d1ed-420c-e5a7ca88a9eb\",",
									"  \"821cd139-a747-2831-de0a-4d7bc53d9598\",",
									"  \"8eb6945d-6e6d-4c65-f3f5-f546a6b206f1\",",
									"  \"0091c97c-9a42-c5b5-bf09-019bff28b81a\",",
									"  \"e195258d-8e66-5235-4c25-186d789a2447\",",
									"  \"0880111b-bfb1-e886-c5c1-388689c662d4\",",
									"  \"fb519ecb-1903-37c1-e8e1-f275797f4332\",",
									"  \"18b0f15e-1fc3-285f-ac39-89f80e832c46\",",
									"  \"a2761ba3-ebd8-c66c-a0b1-43c0e903b398\",",
									"  \"c3920868-de1b-ef5b-b122-38b3ac826c8e\",",
									"  \"fe2689f0-38f3-e514-784e-7658b655fb03\",",
									"  \"acb0ce16-dddb-45b9-3337-b15f70e8bd5f\",",
									"  \"f308f1d6-d436-3f40-9cef-2d483733424b\",",
									"  \"0ce6a421-b2a1-21f7-d2e0-2ffc91e3b273\",",
									"  \"cb29e242-6be5-6847-a618-132e894951e2\"",
									"",
									"]",
									"    ",
									"} else if (pm.environment.name === \"dev\") {",
									"    payorExternalids = [",
									"  \"56e1db12-7e55-01fd-7e3e-ac646787d538\",",
									"  \"789c7f90-52d4-8539-541f-eee11e53c828\",",
									"  \"41091953-ee99-9873-f6b0-f7ee226f625d\",",
									"  \"8d03afa7-ceea-00be-9e2a-11eb047a0a99\",",
									"  \"e3e9ca54-3fe0-3068-2c9e-95022ccfd3a6\",",
									"  \"cee8a51f-79e4-bfad-9e5b-5d770fbfa31e\",",
									"  \"dc0feb71-161f-a80a-9074-2644f9a83e44\",",
									"  \"3ede1080-5a05-b105-a251-e6ceace7de3c\",",
									"  \"78fffe05-5189-9f19-e020-40bf4a8f27c4\",",
									"  \"5340cb8e-9d53-9be5-0af3-02afc24cd06e\",",
									"  \"9f58e2a8-ddfe-cda2-a844-9b1ed5879037\",",
									"  \"2bd0444b-72c0-6207-8c86-c452fd01b494\",",
									"  \"a389019a-67e2-9ed6-42cf-fc778edae229\",",
									"  \"ad5ceabf-4247-7c20-5a99-44905a0faca5\",",
									"  \"3e5478f3-41f5-702a-3e57-2ddfd5d7bae8\",",
									"  \"db809b7c-452d-7c69-eda8-7b4aa1ee3625\",",
									"  \"2f0a9b51-f311-2416-3b02-46f0876a1f1b\",",
									"  \"afd0498d-fa43-1db5-7c70-03d0075133aa\",",
									"  \"b5a7419c-7224-a65b-b940-75759394b4d0\",",
									"  \"df284e79-e50a-e2b6-5c4d-164e1e5d8059\",",
									"  \"764954ff-70e4-805b-7986-6418183d65d0\",",
									"  \"6cc6c489-0d69-0bd5-4d18-ec799247383d\",",
									"  \"9f5324a2-7d74-f4fe-b5ee-ecfc2e8959df\",",
									"  \"c1759b51-2dad-68ed-0a74-ff775c1ee678\",",
									"  \"51b8f7cf-4843-8905-c6bc-191da1460a35\",",
									"  \"8f870f49-e8dd-0337-2aa5-7ac0196be607\",",
									"  \"77b05ed9-9078-9268-2025-eb569370dc27\",",
									"  \"3ad62974-129f-5449-95dc-031e978a531b\",",
									"  \"fabfad30-7656-76bf-8031-882fa18609d5\",",
									"  \"287d0c0f-11d2-c0c0-09de-b394ac650478\",",
									"  \"828c09c5-aa47-6a23-bfda-c7c1fecfe063\",",
									"  \"6f918c15-9016-84e3-8c6d-e673e1f44e6f\",",
									"  \"5fb58801-58b4-9f72-ecaf-60f1999236de\",",
									"  \"2d51586e-2e4c-a822-f5ac-79687d949531\",",
									"  \"bb0a2bdc-4a92-6c5e-0ee1-c59896729588\",",
									"  \"59815314-0a43-0412-9872-0349fcec9a87\",",
									"  \"2caf83f0-8a2c-c622-db70-9faf471094df\",",
									"  \"8e21d58b-b05d-8771-70ee-371ec5555c3f\",",
									"  \"d619cf91-882c-712c-42a9-a9cf909bbcdb\",",
									"  \"9898f740-86c0-0869-beaa-1501a02fb404\",",
									"  \"fbb105e4-82d0-3b8f-9a5f-35689bab4f63\",",
									"  \"88c7c852-b957-f6c7-d261-55a81bae2eb7\",",
									"  \"e714f5a3-1ea5-a87c-a4c0-38e06f8d2dc3\",",
									"  \"9298d74f-08cc-a58f-76db-2858befab318\",",
									"  \"420d036f-d8ff-31f1-13c6-f0ea7ae2004f\",",
									"  \"135554b1-d5da-ffd2-baf1-1d8e30615f24\",",
									"  \"e1dfdcb0-7fb2-1972-cbbf-b92510b739df\",",
									"  \"4d85e003-8414-3a00-2975-29feb860ce61\",",
									"  \"53994cf3-4bc6-7e33-a079-b2da9cfc1233\",",
									"  \"7df9b205-64c7-8a82-e7e4-f426c36da508\",",
									"  \"90c28c29-fced-0403-0322-bbe10ae1bcca\",",
									"  \"57ebea90-f0bf-5c73-0f3d-67eda0c04b59\",",
									"  \"ae120eb4-783d-d12b-1cc0-a27faaa558dd\",",
									"  \"d142a418-153c-5ce5-8c0b-69613165c5b1\",",
									"  \"f1aba850-cf38-4052-61db-ceb62479413c\",",
									"  \"2d70a060-62d3-8ecf-9753-3ace4682be87\",",
									"  \"6c8d21c9-112c-29bb-cb39-3031c17edac1\",",
									"  \"289478ff-ab71-6100-4f67-2aabec17fca2\",",
									"  \"c8b272f0-9e35-1274-0be1-92048540c4f6\",",
									"  \"418f9afc-9665-a69d-2e2d-90e76b062c1a\",",
									"  \"653bd3ac-2975-c806-7fa6-ece182481f96\",",
									"  \"f78c4a3e-b62d-0a84-4f54-823636c226db\",",
									"  \"53795161-3e7b-cfda-b414-4380dbe73aab\",",
									"  \"f0058ecb-daf6-401d-119c-e2dc33965c63\",",
									"  \"6d29ab83-0a71-a508-8968-bdbf5cf14fb5\",",
									"  \"e92f03f1-6b6d-fff1-acd6-1cdeec6c7729\",",
									"  \"a5c9e3f3-d021-4a2e-3a9d-53a778d9893e\",",
									"  \"3015be5d-ab80-1e91-8897-78f940f91f81\",",
									"  \"e1dd302a-b8ba-98ba-e192-aee1c321e629\",",
									"  \"b3e5f2b5-39ba-dc32-d4b3-d10c42066ae9\",",
									"  \"6360eeaf-edbe-cd2d-1704-85bb4d9f0db8\",",
									"  \"c01f2394-aa8c-1356-7ead-0425e3f05aca\",",
									"  \"5bcaf9b1-ce54-6c78-2305-87107fc6be56\",",
									"  \"1ad2cea9-789f-df99-c939-3aea441a687a\",",
									"  \"2558adad-06f4-c397-b87a-0ca9db1d463a\",",
									"  \"a93c50d6-aea1-5d39-164e-3adf8ec87431\",",
									"  \"72a8dd10-cdd0-8fbf-5859-660a25623f4c\",",
									"  \"f2aed711-9295-66e5-6a70-22f88255356f\",",
									"  \"7991f244-092e-9c37-6195-67992743e429\",",
									"  \"dd561bbf-462c-b70b-3847-f321ab0c22d7\",",
									"  \"8413a34f-262c-5468-be04-4db1e7c66f2d\",",
									"  \"d4865c06-68cc-46f6-258c-ea75185855fe\",",
									"  \"a137099a-4ab5-76a7-02fb-514bb8eb2ed9\",",
									"  \"c025411e-ee6a-aa92-d144-92e94b177fa2\",",
									"  \"5a95289b-48aa-890e-c16d-90708d0f4ef8\",",
									"  \"62f4d685-d69c-107b-b03d-e82b763ee62a\",",
									"  \"6710efef-31ff-4bf0-be7b-efa4e4c8d3e9\",",
									"  \"4cd5a1ff-7407-4982-e81a-9e5b89d07b04\",",
									"  \"1e6edb88-1e75-96c9-6976-dbd8702ab4c6\",",
									"  \"4cd89fd8-cdca-700f-36b6-25fc67b10c27\",",
									"  \"40f1bac9-dc29-61d6-5325-455f14e5d543\",",
									"  \"b57019ec-eda6-1716-3bb7-abb27f54c4fc\",",
									"  \"266a7f8d-0e10-c7bb-077c-6ac63a5a88af\",",
									"  \"e5261244-6ab6-8617-11cf-8cdb64d47e52\",",
									"  \"96c499f5-cf38-1c30-38b6-5cd10089e8b7\",",
									"  \"8f0419a0-8303-752a-6094-e304360b34a6\",",
									"  \"f21d3a9f-d737-3964-56b1-cdeb83ec6baf\",",
									"  \"c1acf4d0-e787-ab92-fa25-d1dddac56f03\",",
									"  \"63c2b49d-40e6-3eaa-6f3b-1037b3039d43\",",
									"  \"84235458-5076-361d-67d5-c69dbbbbf507\",",
									"  \"eb9b7f63-9775-8586-4360-52ce304306ce\",",
									"  \"b1f10152-309b-cdb6-a309-d041fc7e39e1\",",
									"  \"d238be68-3b18-ec51-e4fb-45ea98e453e3\",",
									"  \"b307b1c3-d4b5-f8b0-dbe0-f9d82d9afcc5\",",
									"  \"9e05de64-88b4-ef92-f461-2810d2bdcae9\",",
									"  \"ad26d957-d231-0457-54d6-e0f071eab3b1\",",
									"  \"17059ee6-904b-a5db-9626-9e32c6e7932c\",",
									"  \"aba32389-2f9a-cbdb-3990-fc51aaa076c2\",",
									"  \"b4a2448f-5ea3-8246-9e7a-11e95f4338a1\",",
									"  \"219df6ae-a750-8e31-9eb1-aef6b3d38ab2\",",
									"  \"30b83a67-482d-4f30-7c04-16f66dc56157\",",
									"  \"a82aa276-302e-bbe3-ed94-49bd1b0a187a\",",
									"  \"9c787381-66d3-140c-1c3e-9022add21dc6\",",
									"  \"a7de2fe9-13ef-52f0-b662-53b7910be768\",",
									"  \"b8532e62-5139-2f83-6a15-10da6cb56bf3\",",
									"  \"7a14758b-99da-b869-9d2b-f287b2e8a47a\",",
									"  \"2760f6d5-0522-d311-2877-b8d99112483e\",",
									"  \"97b90f2f-255e-9262-d0da-7ea24dfaa320\",",
									"  \"8a0f5f79-476a-6f08-3a16-cd8d26ed6923\",",
									"  \"5af67ab6-6d44-2f1b-94d0-23628999330f\",",
									"  \"02f1ab4c-b81f-7d96-34cd-9545b89ec11b\",",
									"  \"10dcebdf-0df7-4b26-4c07-a71bdbbe6c55\"",
									"",
									"    ];",
									"}",
									"",
									"const payor_names = [ ",
									"  \"Aetna\",",
									"  \"Alameda Behavioral Health\",",
									"  \"All Savers\",",
									"  \"AmeriHealth\",",
									"  \"Amida Care\",",
									"  \"Anthem\",",
									"  \"Arkansas Blue Cross and Blue Shield\",",
									"  \"Asuras Northwest Health plan\",",
									"  \"AvMed Health Plan\",",
									"  \"Blue Cross and Blue Shield of Alabama\",",
									"  \"Blue Cross and Blue Shield of Illinois\",",
									"  \"Blue Cross and Blue Shield of Kansas\",",
									"  \"Blue Cross and Blue Shield of Kansas City\",",
									"  \"Blue Cross and Blue Shield of Louisiana\",",
									"  \"Blue Cross and Blue Shield of Minnesota\",",
									"  \"Blue Cross and Blue Shield of Mississippi\",",
									"  \"Blue Cross and Blue Shield of Montana\",",
									"  \"Blue Cross and Blue Shield of Nebraska\",",
									"  \"Blue Cross and Blue Shield of New Mexico\",",
									"  \"Blue Cross and Blue Shield of North Carolina\",",
									"  \"Blue Cross and Blue Shield of Oklahoma\",",
									"  \"Blue Cross and Blue Shield of Rhode Island\",",
									"  \"Blue Cross and Blue Shield of Texas\",",
									"  \"Blue Cross and Blue Shield of Vermont\",",
									"  \"Blue Cross and Blue Shield of Wyoming\",",
									"  \"Blue Cross Blue Shield of Arizona\",",
									"  \"Blue Cross Blue Shield of Massachusetts\",",
									"  \"Blue Cross Blue Shield of Michigan\",",
									"  \"Blue Cross Blue Shield of North Dakota\",",
									"  \"Blue Cross of Idaho Health Service, Inc.\",",
									"  \"Blue Shield of California\",",
									"  \"BlueCross BlueShield of South Carolina\",",
									"  \"BlueCross BlueShield of Tennessee\",",
									"  \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\",",
									"  \"BridgeSpan Health Company\",",
									"  \"Bright Health\",",
									"  \"Capital District Physicians' Health Plan, Inc. (CDPHP)\",",
									"  \"Care N' Care Health Plan\",",
									"  \"CareFirst BCBS\",",
									"  \"CareOregon\",",
									"  \"Centene\",",
									"  \"Cigna\",",
									"  \"Community Care Health Plan\",",
									"  \"Community First Health Plans\",",
									"  \"Community Health Choice, Inc. (CHC)\",",
									"  \"Community Health Group\",",
									"  \"Community Health Plan of Washington (CHPW)\",",
									"  \"ConnectiCare, Inc.\",",
									"  \"Contra Costa Health Plan\",",
									"  \"Cook Children's Health Plan (CCHP)\",",
									"  \"Dean Health Plan\",",
									"  \"Dell Children's Health Plan\",",
									"  \"Driscoll Health Plan\",",
									"  \"El Paso First Health Plans\",",
									"  \"Empire/NYSHIP\",",
									"  \"Excellus BlueCross BlueShield\",",
									"  \"Fallon Health\",",
									"  \"GEHA (Government Employee Health Association)\",",
									"  \"Geisinger Health Plan\",",
									"  \"GHI (Emblem Health)\",",
									"  \"Gold Coast Health Plan\",",
									"  \"Harvard Pilgrim Health Care, Inc.\",",
									"  \"Health Alliance\",",
									"  \"Health New England, Inc.\",",
									"  \"Health Plan of San Joaquin\",",
									"  \"Health Plan of San Mateo\",",
									"  \"HealthCare Management Administrators\",",
									"  \"Healthfirst\",",
									"  \"Highmark BCBS\",",
									"  \"Highmark Health\",",
									"  \"HIP/Emblem Health\",",
									"  \"Horizon Blue Cross Blue Shield of New Jersey\",",
									"  \"Humana\",",
									"  \"Independence Blue Cross\",",
									"  \"Independent Health Association, Inc.\",",
									"  \"Inland Empire Health Plan\",",
									"  \"InnovaCare Health Solutions\",",
									"  \"Kaiser Colorado\",",
									"  \"Kaiser Foundation Health Plan (Northern California)\",",
									"  \"Kaiser Foundation Health Plan (Southern California)\",",
									"  \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\",",
									"  \"Kaiser Foundation Health Plan of Washington\",",
									"  \"Kaiser Georgia\",",
									"  \"Kaiser Hawaii\",",
									"  \"L.A. Care Health Plan\",",
									"  \"Medica\",",
									"  \"Memorial Hermann Health Insurance Company\",",
									"  \"Miami Children’s Health Plan\",",
									"  \"Moda Health\",",
									"  \"Molina Healthcare\",",
									"  \"Neighborhood Health Plan of Rhode Island, Inc.\",",
									"  \"No Insurance\",",
									"  \"Oscar Insurance Corporation\",",
									"  \"Other\",",
									"  \"Oxford\",",
									"  \"PacificSource Health Plans\",",
									"  \"Partnership HealthPlan of California\",",
									"  \"Premera Blue Cross\",",
									"  \"Presbyterian Health Plan\",",
									"  \"Priority Health\",",
									"  \"Providence Health Plan\",",
									"  \"Regence BlueShield\",",
									"  \"San Joaquin County\",",
									"  \"Santa Cruz County\",",
									"  \"SelectHealth\",",
									"  \"Sentara Health Plans, Inc. (fka Optima Health)\",",
									"  \"Sharp Health Plan\",",
									"  \"State of Texas\",",
									"  \"Sutter Health Plus\",",
									"  \"Texas Children's Health Plan\",",
									"  \"Tufts Health Plan\",",
									"  \"UCare\",",
									"  \"UMR\",",
									"  \"UnitedHealthcare\",",
									"  \"UPMC Health Plan\",",
									"  \"ValueCare\",",
									"  \"Ventura Healthplan\",",
									"  \"WEA Trust\",",
									"  \"WellCare Health Plans, Inc.\",",
									"  \"Wellmark Blue Cross and Blue Shield of Iowa\",",
									"  \"Wellmark Blue Cross and Blue Shield of South Dakota\",",
									"  \"Western Health Advantage\"",
									"",
									"];",
									"",
									"let patientRelation = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
									"",
									"let statesList = [\"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"];",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"//Coverage Start Date",
									"let coverageStartDate = collectionMethods.randomDate(new Date(), new Date());",
									"let coverageStartDateFormatted = coverageStartDate.getFullYear() + '-' + (\"0\" + (coverageStartDate.getMonth() + 1)).slice(-2) + '-' + (\"0\" + coverageStartDate.getDate()).slice(-2);",
									"",
									"//Coverage End Date",
									"//Add number of days to coverageStartDate to make the coverageEndDate in future",
									"let AddNumberOfDays = 90",
									"let coverageEndDate = coverageStartDate.setDate(coverageStartDate.getDate() + AddNumberOfDays);",
									"let coverageEndDateFormatted = new Date(coverageEndDate).getFullYear() + '-' + (\"0\" + (new Date(coverageEndDate).getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date(coverageEndDate).getDate()).slice(-2);",
									"",
									"let random = Math.floor(Math.random() * payor_names.length);",
									"",
									"pm.environment.set(\"group_id1\", Math.floor(Math.random() * (70 - 10) + 10));",
									"pm.environment.set(\"subscriber_id1\", Math.floor(Math.random() * (70 - 10) + 10));",
									"pm.environment.set(\"alternative_id1\", Math.floor(Math.random() * (70 - 10) + 10));",
									"",
									"pm.environment.set(\"payor_name1\", payor_names[random]);",
									"// pm.environment.set(\"payor_program_name1\", payor_program);",
									"pm.environment.set(\"Coverage1StartDate\", moment().format('YYYY-MM-DD'));",
									"pm.environment.set(\"Coverage1EndDate\", moment().add(6, 'months').format('YYYY-MM-DD'));",
									"pm.environment.set(\"payor_externalid1\", payorExternalids[random]);",
									"pm.environment.set(\"patientState1\", ld.sample(statesList));",
									"pm.environment.set(\"providerServicesPhoneNumber1\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patient_relation1\", ld.sample(patientRelation));",
									"pm.environment.set(\"RelationFirstName1\", firstName);",
									"pm.environment.set(\"RelationLastName1\", lastName);",
									"pm.environment.set(\"RelationDateOfBirth1\", dateOfBirth);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c980f4f1-de71-42ed-8834-fe1027c16121",
								"exec": [
									"var response_text = pm.response.text();",
									"",
									"//pm.environment.set(\"response_text\", response_text);",
									"//pm.environment.set(\"CoverageExternalId\", response_text);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify CoverageExternalId is generated\", function () {",
									"    pm.expect(response_text).to.not.be.empty;",
									"});",
									"",
									"pm.environment.set(\"coverageExternalId\", response_text);",
									"console.log(\"response_text\" + response_text)"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5238af00-983d-496d-8913-0f31b64df707",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payor\": \"{{payor_name1}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{group_id1}}\",\n    \"subscriberId\": \"{{subscriber_id1}}\",\n    \"alternativeId\": \"{{alternative_id1}}\",\n    \"customPayorName\": \"\",\n    \"stateCode\": \"{{patientState1}}\",\n    \"startDate\": \"{{Coverage1StartDate}}\",\n    \"endDate\": \"{{Coverage1EndDate}}\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber1}}\",\n    \"patientRelationToSubscriber\": \"{{patient_relation1}}\",\n    \"subscriberFirstName\": \"{{RelationFirstName1}}\",\n    \"subscriberLastName\": \"{{RelationLastName1}}\",\n    \"subscriberDateOfBirth\": \"{{RelationDateOfBirth1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"coverages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get coverage details1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73833a7c-1280-44af-b50c-7be5bf7169bc",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_response = [",
									"    {",
									"        \"payor\": \"\" + pm.environment.get(\"payor_name1\") + \"\",",
									"        \"payorExternalId\": \"\" + pm.environment.get(\"payor_externalid1\") + \"\",",
									"        \"coverageExternalId\": \"\" + pm.environment.get(\"coverageExternalId\") + \"\",",
									"        \"patientExternalId\": \"\" + pm.environment.get(\"patientId\") + \"\",",
									"        \"subscriberId\": \"\" + pm.environment.get(\"subscriber_id1\") + \"\",",
									"        \"groupId\": \"\" + pm.environment.get(\"group_id1\") + \"\",",
									"        \"stateCode\": \"\" + pm.environment.get(\"patientState1\") + \"\",",
									"        \"startDate\": \"\" + pm.environment.get(\"Coverage1StartDate\") + \"\",",
									"        \"endDate\": \"\" + pm.environment.get(\"Coverage1EndDate\") + \"\",",
									"        \"providerServicesPhoneNumber\": \"+1 \" + pm.environment.get(\"providerServicesPhoneNumber1\") + \"\",",
									"        \"patientRelationToSubscriber\": \"\" + pm.environment.get(\"patient_relation1\") + \"\",",
									"        \"subscriberFirstName\": \"\" + pm.environment.get(\"RelationFirstName1\") + \"\",",
									"        \"subscriberLastName\": \"\" + pm.environment.get(\"RelationLastName1\") + \"\",",
									"        \"subscriberDateOfBirth\": \"\" + pm.environment.get(\"RelationDateOfBirth1\") + \"\",",
									"        \"alternativeId\": \"\" + pm.environment.get(\"alternative_id1\") + \"\",",
									"        \"customPayorName\": null,",
									"        \"isActive\": true",
									"    }",
									"];",
									"",
									"pm.test(\"Validate response\", function () {",
									"    console.log(\"jsonData: \" + JSON.stringify(jsonData));",
									"    console.log(\"exp_response: \" + JSON.stringify(exp_response).replace(/\\\\/g, ''));",
									"    pm.expect(JSON.stringify(jsonData)).to.eql(JSON.stringify(exp_response).replace(/\\\\/g, ''));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6cf6c140-9e50-47a2-a8d9-025ca15f87d9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "955d286d-c7ad-42d4-b9da-200f9719804b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"coverages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add coverage2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "78f63a15-2d06-4ee8-859a-531ac8ae05ea",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"var payorExternalids;",
									"",
									"if (pm.environment.name === \"qa\") {",
									"    payorExternalids = [",
									"",
									"  \"3e395a8c-521e-399e-c413-ada8965515da\",",
									"  \"8de23718-b5f8-dc6b-c079-0e1ccf39c174\",",
									"  \"0a0d9714-be8b-76a9-6a85-e5446abdfd72\",",
									"  \"1771abe3-0ea6-0da0-b1f2-16543d0c9235\",",
									"  \"166ea8c8-7541-b0ac-61d5-3dd4222b28b5\",",
									"  \"21ee4ad0-5a10-0ef4-67b9-c0e20c44e7c3\",",
									"  \"5921b11f-f1a3-9cc9-bffc-86eea8b431c2\",",
									"  \"0a8f0cc7-71d6-c236-f3de-8cdcff0e741a\",",
									"  \"5c95d9fb-7f38-4062-6502-bacd9a177b22\",",
									"  \"7113e37e-ff58-ba1e-1cf5-9902d698c232\",",
									"  \"649dec3f-910a-6147-a599-bee65689fc93\",",
									"  \"87b4ba4b-499d-4119-f35e-8dd9dc1c7c0a\",",
									"  \"8e5b223b-0358-f6aa-a736-1667389f033f\",",
									"  \"d2175acf-d9f5-5490-f9e7-ecfdb2b720bb\",",
									"  \"e201f6f9-346b-d5d9-01dc-7efc817f26f5\",",
									"  \"9295512b-0828-519a-7f6c-76177b977a39\",",
									"  \"f0aa80ef-2592-2d2a-6cc3-fcd3c2937885\",",
									"  \"ad3a64bf-91c0-57ff-3d5c-86f68e70ef3a\",",
									"  \"d8630164-6c15-2737-bc05-d605746ec9e9\",",
									"  \"6b758c44-bbb3-5932-5290-a1653d5a4edc\",",
									"  \"88a14513-8064-c579-af9b-2b643226cfbd\",",
									"  \"8898dbb6-1e8f-3351-f6b6-da85d0af2769\",",
									"  \"e80cfead-15b8-f4f7-01cd-6ada6f73b727\",",
									"  \"c4f14fb2-ef4d-f7d5-6a59-56bfcf1e019f\",",
									"  \"4d576ad1-7ea4-31f3-9d18-c8427e96613c\",",
									"  \"158d3862-29da-626b-5fc0-b9d26e99fe16\",",
									"  \"ba149d58-9b57-d43e-68ef-7c2512b64706\",",
									"  \"c796b1e8-5a96-1243-8972-81830db39b41\",",
									"  \"2808e5d0-3238-8e09-2b0e-aa1df1fc4d5e\",",
									"  \"71c17385-9ab6-54bc-960d-89723ecc128a\",",
									"  \"a9d28970-647a-7fe1-f334-476e8840c05b\",",
									"  \"0b0f80af-28d3-45bd-01b3-d94f2752683a\",",
									"  \"0ceff77d-a8ba-24aa-9c8a-980fbce8c181\",",
									"  \"6f160c82-f8b6-dad5-35b3-c659cac7bf90\",",
									"  \"8132da12-e499-767d-4375-0e5069c5d19b\",",
									"  \"5548c2e8-8920-104b-b9a6-c9ae02342b04\",",
									"  \"6cb52ff0-9d4b-6132-2ce4-84d44d0674f2\",",
									"  \"0017a4fd-0d32-0156-de21-7d109719af5f\",",
									"  \"3ec238c1-2327-43a5-48ea-18ae20295ed7\",",
									"  \"6da2522f-bb9c-4230-d013-d4221a1d08e1\",",
									"  \"b28710ed-3d49-3b34-e212-38d85391c9e1\",",
									"  \"d96346bf-3bd1-cad6-c08b-fc178ed1c493\",",
									"  \"c84af9f9-760a-841c-55d4-1176cce14df0\",",
									"  \"b1bce313-7550-a084-a8e4-fddfb79c50ee\",",
									"  \"3b5f1abf-ecc1-4a29-5c9a-96307b9066cd\",",
									"  \"cbf9b456-2ada-a1a8-c83c-eb32d727d09b\",",
									"  \"4a946da6-3548-fccb-6a4c-6a4b7ade0adf\",",
									"  \"17d0a805-747f-e222-4008-6aef21dbca1c\",",
									"  \"51eec5ff-02b5-b56a-a2df-e936d8f458ef\",",
									"  \"95d4720f-9682-2e69-886a-6aa6ae3010f8\",",
									"  \"ba6e4eed-7245-14cc-36bc-089b7eb022f2\",",
									"  \"94fbba21-6630-bb25-ae1b-2ffe3e259a3c\",",
									"  \"069293f9-2970-1107-20a7-c267d4ee2c75\",",
									"  \"1b966e58-e358-68ad-7baf-cf3af7364298\",",
									"  \"23fc50c3-2499-ef22-5138-7d3efba331b6\",",
									"  \"d8292d3e-2872-bbe0-7ec2-62e281ba8e48\",",
									"  \"e399962f-6470-c2d6-a17c-9e88f46a0a92\",",
									"  \"7c883601-97f5-b9c0-6622-d180f5abb237\",",
									"  \"55a26fd5-45d8-76d2-2878-6ee87835a356\",",
									"  \"957200ee-dfb9-ec80-f158-30d25aaedf4a\",",
									"  \"2bff21f9-ed17-62ba-16f9-4ac1a3dc3756\",",
									"  \"49401fc5-1579-38ac-be1d-6913cb27792b\",",
									"  \"a7abc99e-4c97-6b41-f836-ba455f00d55b\",",
									"  \"eda43b92-6865-3ae6-b36a-e8d37244829d\",",
									"  \"798b7d74-6b3c-2c2a-8014-953134d9e62a\",",
									"  \"2896cdec-ec99-7582-3121-58f76cc9474b\",",
									"  \"8c6c8372-39e7-f059-b9a3-e3e0d5167379\",",
									"  \"d727659f-0d75-72f3-574f-5ae300d40f8a\",",
									"  \"14890191-4561-8e7f-015b-74c85f93d1bd\",",
									"  \"58bbd1b6-d3ba-5ddc-f76e-62305c67144b\",",
									"  \"218332b0-51aa-8e8c-c215-b3835164c4c1\",",
									"  \"25599c3e-f84f-ff24-518a-23137741f837\",",
									"  \"2a880b89-199f-edfe-7c54-ec7bb0e564b8\",",
									"  \"d03c6f2e-027b-006f-e8cb-ecd3e36b21b4\",",
									"  \"6a3b9a74-4ff4-bc62-077e-04b8b9c3947c\",",
									"  \"76ba20e4-7b06-1b8f-f46b-bac8d8d0493f\",",
									"  \"5b96ab81-9e1d-b668-d1c2-50709ae930ab\",",
									"  \"22d50042-2d59-c3cc-eb83-55051515201f\",",
									"  \"3b7d24fc-7878-ff8d-b7a4-ad1f14e92980\",",
									"  \"ecede5fb-6ebe-ebca-d0f6-7925c6de930e\",",
									"  \"e37fd416-6b89-c30a-cb24-1e87fa6d864a\",",
									"  \"fe7bccd0-123d-9129-2bcc-91f8822eafbe\",",
									"  \"5e53ad01-c0ec-6540-0b8b-1c3ad31c7336\",",
									"  \"4e655db0-230c-a3ad-662e-c141a0d48d6e\",",
									"  \"fcba7519-1795-4569-e4c4-6521bd8549ef\",",
									"  \"db9709a4-9285-589c-e3ca-055c271f6bc7\",",
									"  \"9c20d0c9-f96c-5711-d161-7b47cde657f5\",",
									"  \"71d15488-2355-7198-9913-94af8947e16b\",",
									"  \"d7b7bdb7-e89d-7783-194f-7fc424396b25\",",
									"  \"cc990363-d368-92b4-1984-329a4dfd0ce8\",",
									"  \"68bae04b-3715-026f-cc57-7948a129fd0b\",",
									"  \"13514748-8b22-c0c4-abc2-744ccac0bd1a\",",
									"  \"44bedf25-4661-1182-211d-1da66e5f7071\",",
									"  \"22f8939f-e2c6-fe4f-fb16-3722a6e6dd0d\",",
									"  \"3a694823-a761-a630-aa7a-581a8d09ab63\",",
									"  \"001b3d9b-090e-1ee1-53c5-3b0e6efb2159\",",
									"  \"c0fc2936-0f80-d577-ea9e-0d28cc7040b2\",",
									"  \"287a2bb1-f442-951a-2c38-18ef2bb60b26\",",
									"  \"19813cef-c0b4-bcd7-1d1c-d96348d3164b\",",
									"  \"ce921aee-b487-eaa0-f494-67791d635cdd\",",
									"  \"b97caebd-314d-1bce-e04a-21e255613efc\",",
									"  \"4d1e96a6-69d0-9bf4-0018-434d6b69ad23\",",
									"  \"1048f774-3126-a2e6-bf90-e4acd19d6366\",",
									"  \"0f81615a-6522-5a05-8e90-c7e8f06fcc76\",",
									"  \"a6c8ff4b-a293-66ee-d89d-54db9da1bede\",",
									"  \"c4dbe960-70ab-3273-25fb-c4b3e0672458\",",
									"  \"6df5a799-0639-ae2f-5e89-15c9fdd3d895\",",
									"  \"3d638c03-2b82-d1ed-420c-e5a7ca88a9eb\",",
									"  \"821cd139-a747-2831-de0a-4d7bc53d9598\",",
									"  \"8eb6945d-6e6d-4c65-f3f5-f546a6b206f1\",",
									"  \"0091c97c-9a42-c5b5-bf09-019bff28b81a\",",
									"  \"e195258d-8e66-5235-4c25-186d789a2447\",",
									"  \"0880111b-bfb1-e886-c5c1-388689c662d4\",",
									"  \"fb519ecb-1903-37c1-e8e1-f275797f4332\",",
									"  \"18b0f15e-1fc3-285f-ac39-89f80e832c46\",",
									"  \"a2761ba3-ebd8-c66c-a0b1-43c0e903b398\",",
									"  \"c3920868-de1b-ef5b-b122-38b3ac826c8e\",",
									"  \"fe2689f0-38f3-e514-784e-7658b655fb03\",",
									"  \"acb0ce16-dddb-45b9-3337-b15f70e8bd5f\",",
									"  \"f308f1d6-d436-3f40-9cef-2d483733424b\",",
									"  \"0ce6a421-b2a1-21f7-d2e0-2ffc91e3b273\",",
									"  \"cb29e242-6be5-6847-a618-132e894951e2\"",
									"",
									"]",
									"    ",
									"} else if (pm.environment.name === \"dev\") {",
									"    payorExternalids = [",
									"  \"56e1db12-7e55-01fd-7e3e-ac646787d538\",",
									"  \"789c7f90-52d4-8539-541f-eee11e53c828\",",
									"  \"41091953-ee99-9873-f6b0-f7ee226f625d\",",
									"  \"8d03afa7-ceea-00be-9e2a-11eb047a0a99\",",
									"  \"e3e9ca54-3fe0-3068-2c9e-95022ccfd3a6\",",
									"  \"cee8a51f-79e4-bfad-9e5b-5d770fbfa31e\",",
									"  \"dc0feb71-161f-a80a-9074-2644f9a83e44\",",
									"  \"3ede1080-5a05-b105-a251-e6ceace7de3c\",",
									"  \"78fffe05-5189-9f19-e020-40bf4a8f27c4\",",
									"  \"5340cb8e-9d53-9be5-0af3-02afc24cd06e\",",
									"  \"9f58e2a8-ddfe-cda2-a844-9b1ed5879037\",",
									"  \"2bd0444b-72c0-6207-8c86-c452fd01b494\",",
									"  \"a389019a-67e2-9ed6-42cf-fc778edae229\",",
									"  \"ad5ceabf-4247-7c20-5a99-44905a0faca5\",",
									"  \"3e5478f3-41f5-702a-3e57-2ddfd5d7bae8\",",
									"  \"db809b7c-452d-7c69-eda8-7b4aa1ee3625\",",
									"  \"2f0a9b51-f311-2416-3b02-46f0876a1f1b\",",
									"  \"afd0498d-fa43-1db5-7c70-03d0075133aa\",",
									"  \"b5a7419c-7224-a65b-b940-75759394b4d0\",",
									"  \"df284e79-e50a-e2b6-5c4d-164e1e5d8059\",",
									"  \"764954ff-70e4-805b-7986-6418183d65d0\",",
									"  \"6cc6c489-0d69-0bd5-4d18-ec799247383d\",",
									"  \"9f5324a2-7d74-f4fe-b5ee-ecfc2e8959df\",",
									"  \"c1759b51-2dad-68ed-0a74-ff775c1ee678\",",
									"  \"51b8f7cf-4843-8905-c6bc-191da1460a35\",",
									"  \"8f870f49-e8dd-0337-2aa5-7ac0196be607\",",
									"  \"77b05ed9-9078-9268-2025-eb569370dc27\",",
									"  \"3ad62974-129f-5449-95dc-031e978a531b\",",
									"  \"fabfad30-7656-76bf-8031-882fa18609d5\",",
									"  \"287d0c0f-11d2-c0c0-09de-b394ac650478\",",
									"  \"828c09c5-aa47-6a23-bfda-c7c1fecfe063\",",
									"  \"6f918c15-9016-84e3-8c6d-e673e1f44e6f\",",
									"  \"5fb58801-58b4-9f72-ecaf-60f1999236de\",",
									"  \"2d51586e-2e4c-a822-f5ac-79687d949531\",",
									"  \"bb0a2bdc-4a92-6c5e-0ee1-c59896729588\",",
									"  \"59815314-0a43-0412-9872-0349fcec9a87\",",
									"  \"2caf83f0-8a2c-c622-db70-9faf471094df\",",
									"  \"8e21d58b-b05d-8771-70ee-371ec5555c3f\",",
									"  \"d619cf91-882c-712c-42a9-a9cf909bbcdb\",",
									"  \"9898f740-86c0-0869-beaa-1501a02fb404\",",
									"  \"fbb105e4-82d0-3b8f-9a5f-35689bab4f63\",",
									"  \"88c7c852-b957-f6c7-d261-55a81bae2eb7\",",
									"  \"e714f5a3-1ea5-a87c-a4c0-38e06f8d2dc3\",",
									"  \"9298d74f-08cc-a58f-76db-2858befab318\",",
									"  \"420d036f-d8ff-31f1-13c6-f0ea7ae2004f\",",
									"  \"135554b1-d5da-ffd2-baf1-1d8e30615f24\",",
									"  \"e1dfdcb0-7fb2-1972-cbbf-b92510b739df\",",
									"  \"4d85e003-8414-3a00-2975-29feb860ce61\",",
									"  \"53994cf3-4bc6-7e33-a079-b2da9cfc1233\",",
									"  \"7df9b205-64c7-8a82-e7e4-f426c36da508\",",
									"  \"90c28c29-fced-0403-0322-bbe10ae1bcca\",",
									"  \"57ebea90-f0bf-5c73-0f3d-67eda0c04b59\",",
									"  \"ae120eb4-783d-d12b-1cc0-a27faaa558dd\",",
									"  \"d142a418-153c-5ce5-8c0b-69613165c5b1\",",
									"  \"f1aba850-cf38-4052-61db-ceb62479413c\",",
									"  \"2d70a060-62d3-8ecf-9753-3ace4682be87\",",
									"  \"6c8d21c9-112c-29bb-cb39-3031c17edac1\",",
									"  \"289478ff-ab71-6100-4f67-2aabec17fca2\",",
									"  \"c8b272f0-9e35-1274-0be1-92048540c4f6\",",
									"  \"418f9afc-9665-a69d-2e2d-90e76b062c1a\",",
									"  \"653bd3ac-2975-c806-7fa6-ece182481f96\",",
									"  \"f78c4a3e-b62d-0a84-4f54-823636c226db\",",
									"  \"53795161-3e7b-cfda-b414-4380dbe73aab\",",
									"  \"f0058ecb-daf6-401d-119c-e2dc33965c63\",",
									"  \"6d29ab83-0a71-a508-8968-bdbf5cf14fb5\",",
									"  \"e92f03f1-6b6d-fff1-acd6-1cdeec6c7729\",",
									"  \"a5c9e3f3-d021-4a2e-3a9d-53a778d9893e\",",
									"  \"3015be5d-ab80-1e91-8897-78f940f91f81\",",
									"  \"e1dd302a-b8ba-98ba-e192-aee1c321e629\",",
									"  \"b3e5f2b5-39ba-dc32-d4b3-d10c42066ae9\",",
									"  \"6360eeaf-edbe-cd2d-1704-85bb4d9f0db8\",",
									"  \"c01f2394-aa8c-1356-7ead-0425e3f05aca\",",
									"  \"5bcaf9b1-ce54-6c78-2305-87107fc6be56\",",
									"  \"1ad2cea9-789f-df99-c939-3aea441a687a\",",
									"  \"2558adad-06f4-c397-b87a-0ca9db1d463a\",",
									"  \"a93c50d6-aea1-5d39-164e-3adf8ec87431\",",
									"  \"72a8dd10-cdd0-8fbf-5859-660a25623f4c\",",
									"  \"f2aed711-9295-66e5-6a70-22f88255356f\",",
									"  \"7991f244-092e-9c37-6195-67992743e429\",",
									"  \"dd561bbf-462c-b70b-3847-f321ab0c22d7\",",
									"  \"8413a34f-262c-5468-be04-4db1e7c66f2d\",",
									"  \"d4865c06-68cc-46f6-258c-ea75185855fe\",",
									"  \"a137099a-4ab5-76a7-02fb-514bb8eb2ed9\",",
									"  \"c025411e-ee6a-aa92-d144-92e94b177fa2\",",
									"  \"5a95289b-48aa-890e-c16d-90708d0f4ef8\",",
									"  \"62f4d685-d69c-107b-b03d-e82b763ee62a\",",
									"  \"6710efef-31ff-4bf0-be7b-efa4e4c8d3e9\",",
									"  \"4cd5a1ff-7407-4982-e81a-9e5b89d07b04\",",
									"  \"1e6edb88-1e75-96c9-6976-dbd8702ab4c6\",",
									"  \"4cd89fd8-cdca-700f-36b6-25fc67b10c27\",",
									"  \"40f1bac9-dc29-61d6-5325-455f14e5d543\",",
									"  \"b57019ec-eda6-1716-3bb7-abb27f54c4fc\",",
									"  \"266a7f8d-0e10-c7bb-077c-6ac63a5a88af\",",
									"  \"e5261244-6ab6-8617-11cf-8cdb64d47e52\",",
									"  \"96c499f5-cf38-1c30-38b6-5cd10089e8b7\",",
									"  \"8f0419a0-8303-752a-6094-e304360b34a6\",",
									"  \"f21d3a9f-d737-3964-56b1-cdeb83ec6baf\",",
									"  \"c1acf4d0-e787-ab92-fa25-d1dddac56f03\",",
									"  \"63c2b49d-40e6-3eaa-6f3b-1037b3039d43\",",
									"  \"84235458-5076-361d-67d5-c69dbbbbf507\",",
									"  \"eb9b7f63-9775-8586-4360-52ce304306ce\",",
									"  \"b1f10152-309b-cdb6-a309-d041fc7e39e1\",",
									"  \"d238be68-3b18-ec51-e4fb-45ea98e453e3\",",
									"  \"b307b1c3-d4b5-f8b0-dbe0-f9d82d9afcc5\",",
									"  \"9e05de64-88b4-ef92-f461-2810d2bdcae9\",",
									"  \"ad26d957-d231-0457-54d6-e0f071eab3b1\",",
									"  \"17059ee6-904b-a5db-9626-9e32c6e7932c\",",
									"  \"aba32389-2f9a-cbdb-3990-fc51aaa076c2\",",
									"  \"b4a2448f-5ea3-8246-9e7a-11e95f4338a1\",",
									"  \"219df6ae-a750-8e31-9eb1-aef6b3d38ab2\",",
									"  \"30b83a67-482d-4f30-7c04-16f66dc56157\",",
									"  \"a82aa276-302e-bbe3-ed94-49bd1b0a187a\",",
									"  \"9c787381-66d3-140c-1c3e-9022add21dc6\",",
									"  \"a7de2fe9-13ef-52f0-b662-53b7910be768\",",
									"  \"b8532e62-5139-2f83-6a15-10da6cb56bf3\",",
									"  \"7a14758b-99da-b869-9d2b-f287b2e8a47a\",",
									"  \"2760f6d5-0522-d311-2877-b8d99112483e\",",
									"  \"97b90f2f-255e-9262-d0da-7ea24dfaa320\",",
									"  \"8a0f5f79-476a-6f08-3a16-cd8d26ed6923\",",
									"  \"5af67ab6-6d44-2f1b-94d0-23628999330f\",",
									"  \"02f1ab4c-b81f-7d96-34cd-9545b89ec11b\",",
									"  \"10dcebdf-0df7-4b26-4c07-a71bdbbe6c55\"",
									"",
									"    ];",
									"}",
									"",
									"const payor_names = [ ",
									"  \"Aetna\",",
									"  \"Alameda Behavioral Health\",",
									"  \"All Savers\",",
									"  \"AmeriHealth\",",
									"  \"Amida Care\",",
									"  \"Anthem\",",
									"  \"Arkansas Blue Cross and Blue Shield\",",
									"  \"Asuras Northwest Health plan\",",
									"  \"AvMed Health Plan\",",
									"  \"Blue Cross and Blue Shield of Alabama\",",
									"  \"Blue Cross and Blue Shield of Illinois\",",
									"  \"Blue Cross and Blue Shield of Kansas\",",
									"  \"Blue Cross and Blue Shield of Kansas City\",",
									"  \"Blue Cross and Blue Shield of Louisiana\",",
									"  \"Blue Cross and Blue Shield of Minnesota\",",
									"  \"Blue Cross and Blue Shield of Mississippi\",",
									"  \"Blue Cross and Blue Shield of Montana\",",
									"  \"Blue Cross and Blue Shield of Nebraska\",",
									"  \"Blue Cross and Blue Shield of New Mexico\",",
									"  \"Blue Cross and Blue Shield of North Carolina\",",
									"  \"Blue Cross and Blue Shield of Oklahoma\",",
									"  \"Blue Cross and Blue Shield of Rhode Island\",",
									"  \"Blue Cross and Blue Shield of Texas\",",
									"  \"Blue Cross and Blue Shield of Vermont\",",
									"  \"Blue Cross and Blue Shield of Wyoming\",",
									"  \"Blue Cross Blue Shield of Arizona\",",
									"  \"Blue Cross Blue Shield of Massachusetts\",",
									"  \"Blue Cross Blue Shield of Michigan\",",
									"  \"Blue Cross Blue Shield of North Dakota\",",
									"  \"Blue Cross of Idaho Health Service, Inc.\",",
									"  \"Blue Shield of California\",",
									"  \"BlueCross BlueShield of South Carolina\",",
									"  \"BlueCross BlueShield of Tennessee\",",
									"  \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\",",
									"  \"BridgeSpan Health Company\",",
									"  \"Bright Health\",",
									"  \"Capital District Physicians' Health Plan, Inc. (CDPHP)\",",
									"  \"Care N' Care Health Plan\",",
									"  \"CareFirst BCBS\",",
									"  \"CareOregon\",",
									"  \"Centene\",",
									"  \"Cigna\",",
									"  \"Community Care Health Plan\",",
									"  \"Community First Health Plans\",",
									"  \"Community Health Choice, Inc. (CHC)\",",
									"  \"Community Health Group\",",
									"  \"Community Health Plan of Washington (CHPW)\",",
									"  \"ConnectiCare, Inc.\",",
									"  \"Contra Costa Health Plan\",",
									"  \"Cook Children's Health Plan (CCHP)\",",
									"  \"Dean Health Plan\",",
									"  \"Dell Children's Health Plan\",",
									"  \"Driscoll Health Plan\",",
									"  \"El Paso First Health Plans\",",
									"  \"Empire/NYSHIP\",",
									"  \"Excellus BlueCross BlueShield\",",
									"  \"Fallon Health\",",
									"  \"GEHA (Government Employee Health Association)\",",
									"  \"Geisinger Health Plan\",",
									"  \"GHI (Emblem Health)\",",
									"  \"Gold Coast Health Plan\",",
									"  \"Harvard Pilgrim Health Care, Inc.\",",
									"  \"Health Alliance\",",
									"  \"Health New England, Inc.\",",
									"  \"Health Plan of San Joaquin\",",
									"  \"Health Plan of San Mateo\",",
									"  \"HealthCare Management Administrators\",",
									"  \"Healthfirst\",",
									"  \"Highmark BCBS\",",
									"  \"Highmark Health\",",
									"  \"HIP/Emblem Health\",",
									"  \"Horizon Blue Cross Blue Shield of New Jersey\",",
									"  \"Humana\",",
									"  \"Independence Blue Cross\",",
									"  \"Independent Health Association, Inc.\",",
									"  \"Inland Empire Health Plan\",",
									"  \"InnovaCare Health Solutions\",",
									"  \"Kaiser Colorado\",",
									"  \"Kaiser Foundation Health Plan (Northern California)\",",
									"  \"Kaiser Foundation Health Plan (Southern California)\",",
									"  \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\",",
									"  \"Kaiser Foundation Health Plan of Washington\",",
									"  \"Kaiser Georgia\",",
									"  \"Kaiser Hawaii\",",
									"  \"L.A. Care Health Plan\",",
									"  \"Medica\",",
									"  \"Memorial Hermann Health Insurance Company\",",
									"  \"Miami Children’s Health Plan\",",
									"  \"Moda Health\",",
									"  \"Molina Healthcare\",",
									"  \"Neighborhood Health Plan of Rhode Island, Inc.\",",
									"  \"No Insurance\",",
									"  \"Oscar Insurance Corporation\",",
									"  \"Other\",",
									"  \"Oxford\",",
									"  \"PacificSource Health Plans\",",
									"  \"Partnership HealthPlan of California\",",
									"  \"Premera Blue Cross\",",
									"  \"Presbyterian Health Plan\",",
									"  \"Priority Health\",",
									"  \"Providence Health Plan\",",
									"  \"Regence BlueShield\",",
									"  \"San Joaquin County\",",
									"  \"Santa Cruz County\",",
									"  \"SelectHealth\",",
									"  \"Sentara Health Plans, Inc. (fka Optima Health)\",",
									"  \"Sharp Health Plan\",",
									"  \"State of Texas\",",
									"  \"Sutter Health Plus\",",
									"  \"Texas Children's Health Plan\",",
									"  \"Tufts Health Plan\",",
									"  \"UCare\",",
									"  \"UMR\",",
									"  \"UnitedHealthcare\",",
									"  \"UPMC Health Plan\",",
									"  \"ValueCare\",",
									"  \"Ventura Healthplan\",",
									"  \"WEA Trust\",",
									"  \"WellCare Health Plans, Inc.\",",
									"  \"Wellmark Blue Cross and Blue Shield of Iowa\",",
									"  \"Wellmark Blue Cross and Blue Shield of South Dakota\",",
									"  \"Western Health Advantage\"",
									"",
									"];",
									"",
									"let patientRelation = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
									"",
									"let statesList = [\"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"];",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"//Coverage Start Date",
									"let coverageStartDate = collectionMethods.randomDate(new Date(), new Date());",
									"let coverageStartDateFormatted = coverageStartDate.getFullYear() + '-' + (\"0\" + (coverageStartDate.getMonth() + 1)).slice(-2) + '-' + (\"0\" + coverageStartDate.getDate()).slice(-2);",
									"",
									"//Coverage End Date",
									"//Add number of days to coverageStartDate to make the coverageEndDate in future",
									"let AddNumberOfDays = 90",
									"let coverageEndDate = coverageStartDate.setDate(coverageStartDate.getDate() + AddNumberOfDays);",
									"let coverageEndDateFormatted = new Date(coverageEndDate).getFullYear() + '-' + (\"0\" + (new Date(coverageEndDate).getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date(coverageEndDate).getDate()).slice(-2);",
									"",
									"let random = Math.floor(Math.random() * payor_names.length);",
									"",
									"pm.environment.set(\"group_id2\", Math.floor(Math.random() * (70 - 10) + 10));",
									"pm.environment.set(\"subscriber_id2\", Math.floor(Math.random() * (70 - 10) + 10));",
									"pm.environment.set(\"alternative_id2\", Math.floor(Math.random() * (70 - 10) + 10));",
									"",
									"pm.environment.set(\"payor_name2\", payor_names[random]);",
									"// pm.environment.set(\"payor_program_name1\", payor_program);",
									"pm.environment.set(\"Coverage2StartDate\", coverageStartDateFormatted);",
									"pm.environment.set(\"Coverage2EndDate\", coverageEndDateFormatted);",
									"pm.environment.set(\"payor_externalid2\", payorExternalids[random]);",
									"pm.environment.set(\"patientState2\", ld.sample(statesList));",
									"pm.environment.set(\"providerServicesPhoneNumber2\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patient_relation2\", ld.sample(patientRelation));",
									"pm.environment.set(\"RelationFirstName2\", firstName);",
									"pm.environment.set(\"RelationLastName2\", lastName);",
									"pm.environment.set(\"RelationDateOfBirth2\", dateOfBirth);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a076cd85-fa7e-4a00-8777-6786feabce0d",
								"exec": [
									"var response_text = pm.response.text();",
									"",
									"//pm.environment.set(\"response_text\", response_text);",
									"pm.environment.set(\"CoverageExternalId2\", response_text);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// pm.test(\"Verify CoverageExternalId is generated\", function () {",
									"//     pm.expect(jsonData.id).length.greaterThan(0);",
									"// });",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a927e51e-9cf8-4312-b63f-39d180aff763",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payor\": \"{{payor_name2}}\",\n    \"payorProgram\": \"{{payor_program_name2}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{group_id2}}\",\n    \"subscriberId\": \"{{subscriber_id2}}\",\n     \"alternativeId\": \"{{alternative_id2}}\",\n    \"customPayorName\": \"\",\n    \"stateCode\": \"{{patientState2}}\",\n    \"startDate\": \"{{Coverage2StartDate}}\",\n    \"endDate\": \"{{Coverage2EndDate}}\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber2}}\",\n     \"patientRelationToSubscriber\": \"{{patient_relation2}}\",  \n    \"subscriberFirstName\": \"{{RelationFirstName2}}\",\n    \"subscriberLastName\": \"{{RelationLastName2}}\",\n    \"subscriberDateOfBirth\":\"{{RelationDateOfBirth2}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"coverages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get coverage details2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "899ece28-848c-4278-89b0-b655dccab9f3",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_response = [",
									"    {",
									"",
									"         \"payor\": \"\" + pm.environment.get(\"payor_name1\") + \"\", ",
									"     \"payorExternalId\": \"\" + pm.environment.get(\"payor_externalid1\") +\"\",",
									"        \"coverageExternalId\": \"\" + pm.environment.get(\"coverageExternalId\") + \"\",",
									"        \"patientExternalId\": \"\" + pm.environment.get(\"patientId\") + \"\",",
									"        \"subscriberId\": \"\" + pm.environment.get(\"subscriber_id1\") + \"\",",
									"        \"groupId\": \"\" + pm.environment.get(\"group_id1\") + \"\",",
									"        \"stateCode\": \"\"+ pm.environment.get(\"patientState1\") + \"\",",
									"        \"startDate\": \"\"+ pm.environment.get(\"Coverage1StartDate\") + \"\",",
									"        \"endDate\": \"\" + pm.environment.get(\"Coverage1EndDate\") + \"\", ",
									"        \"providerServicesPhoneNumber\":  \"+1 \" + pm.environment.get(\"providerServicesPhoneNumber1\") +\"\",",
									"        \"patientRelationToSubscriber\": \"\" + pm.environment.get(\"patient_relation1\") +\"\",",
									"    \"subscriberFirstName\":\"\" + pm.environment.get(\"RelationFirstName1\") + \"\",",
									"    \"subscriberLastName\":\"\" + pm.environment.get(\"RelationLastName1\") + \"\",",
									"    \"subscriberDateOfBirth\":\"\" + pm.environment.get(\"RelationDateOfBirth1\") + \"\",",
									"    \"alternativeId\": \"\"+pm.environment.get(\"alternative_id1\")+\"\",",
									"    \"customPayorName\" : null,",
									"        \"isActive\": true",
									"      ",
									"    },    ",
									"",
									"       {",
									"  \"payor\": \"\" + pm.environment.get(\"payor_name2\") + \"\",",
									"          \"payorExternalId\": \"\" + pm.environment.get(\"payor_externalid2\") +\"\",",
									"        \"coverageExternalId\": \"\" + pm.environment.get(\"CoverageExternalId2\") + \"\",",
									"        \"patientExternalId\": \"\" + pm.environment.get(\"patientId\") + \"\",",
									"        \"subscriberId\": \"\" + pm.environment.get(\"subscriber_id2\") + \"\",",
									"        \"groupId\": \"\" + pm.environment.get(\"group_id2\") + \"\",",
									"        \"stateCode\": \"\"+ pm.environment.get(\"patientState2\") + \"\",",
									"    \"startDate\": \"\"+ pm.environment.get(\"Coverage2StartDate\") + \"\",",
									"        \"endDate\": \"\" + pm.environment.get(\"Coverage2EndDate\") + \"\",",
									"       \"providerServicesPhoneNumber\":  \"+1 \" + pm.environment.get(\"providerServicesPhoneNumber2\") ,",
									" \"patientRelationToSubscriber\": \"\" + pm.environment.get(\"patient_relation2\") +\"\",",
									"   \"subscriberFirstName\":\"\" + pm.environment.get(\"RelationFirstName2\") + \"\",",
									"    \"subscriberLastName\":\"\" + pm.environment.get(\"RelationLastName2\") + \"\",",
									"    \"subscriberDateOfBirth\":\"\" + pm.environment.get(\"RelationDateOfBirth2\") + \"\",",
									"    \"alternativeId\": \"\"+pm.environment.get(\"alternative_id2\")+\"\",",
									"    \"customPayorName\" : null,",
									"        \"isActive\": true  ",
									"      ",
									"    },  ",
									"];  ",
									"    ",
									"pm.test(\"Validate response\", function () {",
									"    console.log(\"jsonData: \"+JSON.stringify(jsonData));",
									"    console.log(\"exp_response: \"+JSON.stringify(exp_response).replace(/\\\\/g, ''));",
									"    pm.expect(JSON.stringify(jsonData)).to.eql(JSON.stringify(exp_response).replace(/\\\\/g, ''));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b3fc8a93-0bf4-4ea5-923e-4ae46fe9ad61",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "dad4328d-cc2d-427a-9a5f-c75070bcde05",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"coverages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update coverage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "85b716fc-c1b5-4686-b11b-07a20acaba7f",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"var payorExternalids;",
									"",
									"if (pm.environment.name === \"qa\") {",
									"    payorExternalids = [",
									"",
									"  \"3e395a8c-521e-399e-c413-ada8965515da\",",
									"  \"8de23718-b5f8-dc6b-c079-0e1ccf39c174\",",
									"  \"0a0d9714-be8b-76a9-6a85-e5446abdfd72\",",
									"  \"1771abe3-0ea6-0da0-b1f2-16543d0c9235\",",
									"  \"166ea8c8-7541-b0ac-61d5-3dd4222b28b5\",",
									"  \"21ee4ad0-5a10-0ef4-67b9-c0e20c44e7c3\",",
									"  \"5921b11f-f1a3-9cc9-bffc-86eea8b431c2\",",
									"  \"0a8f0cc7-71d6-c236-f3de-8cdcff0e741a\",",
									"  \"5c95d9fb-7f38-4062-6502-bacd9a177b22\",",
									"  \"7113e37e-ff58-ba1e-1cf5-9902d698c232\",",
									"  \"649dec3f-910a-6147-a599-bee65689fc93\",",
									"  \"87b4ba4b-499d-4119-f35e-8dd9dc1c7c0a\",",
									"  \"8e5b223b-0358-f6aa-a736-1667389f033f\",",
									"  \"d2175acf-d9f5-5490-f9e7-ecfdb2b720bb\",",
									"  \"e201f6f9-346b-d5d9-01dc-7efc817f26f5\",",
									"  \"9295512b-0828-519a-7f6c-76177b977a39\",",
									"  \"f0aa80ef-2592-2d2a-6cc3-fcd3c2937885\",",
									"  \"ad3a64bf-91c0-57ff-3d5c-86f68e70ef3a\",",
									"  \"d8630164-6c15-2737-bc05-d605746ec9e9\",",
									"  \"6b758c44-bbb3-5932-5290-a1653d5a4edc\",",
									"  \"88a14513-8064-c579-af9b-2b643226cfbd\",",
									"  \"8898dbb6-1e8f-3351-f6b6-da85d0af2769\",",
									"  \"e80cfead-15b8-f4f7-01cd-6ada6f73b727\",",
									"  \"c4f14fb2-ef4d-f7d5-6a59-56bfcf1e019f\",",
									"  \"4d576ad1-7ea4-31f3-9d18-c8427e96613c\",",
									"  \"158d3862-29da-626b-5fc0-b9d26e99fe16\",",
									"  \"ba149d58-9b57-d43e-68ef-7c2512b64706\",",
									"  \"c796b1e8-5a96-1243-8972-81830db39b41\",",
									"  \"2808e5d0-3238-8e09-2b0e-aa1df1fc4d5e\",",
									"  \"71c17385-9ab6-54bc-960d-89723ecc128a\",",
									"  \"a9d28970-647a-7fe1-f334-476e8840c05b\",",
									"  \"0b0f80af-28d3-45bd-01b3-d94f2752683a\",",
									"  \"0ceff77d-a8ba-24aa-9c8a-980fbce8c181\",",
									"  \"6f160c82-f8b6-dad5-35b3-c659cac7bf90\",",
									"  \"8132da12-e499-767d-4375-0e5069c5d19b\",",
									"  \"5548c2e8-8920-104b-b9a6-c9ae02342b04\",",
									"  \"6cb52ff0-9d4b-6132-2ce4-84d44d0674f2\",",
									"  \"0017a4fd-0d32-0156-de21-7d109719af5f\",",
									"  \"3ec238c1-2327-43a5-48ea-18ae20295ed7\",",
									"  \"6da2522f-bb9c-4230-d013-d4221a1d08e1\",",
									"  \"b28710ed-3d49-3b34-e212-38d85391c9e1\",",
									"  \"d96346bf-3bd1-cad6-c08b-fc178ed1c493\",",
									"  \"c84af9f9-760a-841c-55d4-1176cce14df0\",",
									"  \"b1bce313-7550-a084-a8e4-fddfb79c50ee\",",
									"  \"3b5f1abf-ecc1-4a29-5c9a-96307b9066cd\",",
									"  \"cbf9b456-2ada-a1a8-c83c-eb32d727d09b\",",
									"  \"4a946da6-3548-fccb-6a4c-6a4b7ade0adf\",",
									"  \"17d0a805-747f-e222-4008-6aef21dbca1c\",",
									"  \"51eec5ff-02b5-b56a-a2df-e936d8f458ef\",",
									"  \"95d4720f-9682-2e69-886a-6aa6ae3010f8\",",
									"  \"ba6e4eed-7245-14cc-36bc-089b7eb022f2\",",
									"  \"94fbba21-6630-bb25-ae1b-2ffe3e259a3c\",",
									"  \"069293f9-2970-1107-20a7-c267d4ee2c75\",",
									"  \"1b966e58-e358-68ad-7baf-cf3af7364298\",",
									"  \"23fc50c3-2499-ef22-5138-7d3efba331b6\",",
									"  \"d8292d3e-2872-bbe0-7ec2-62e281ba8e48\",",
									"  \"e399962f-6470-c2d6-a17c-9e88f46a0a92\",",
									"  \"7c883601-97f5-b9c0-6622-d180f5abb237\",",
									"  \"55a26fd5-45d8-76d2-2878-6ee87835a356\",",
									"  \"957200ee-dfb9-ec80-f158-30d25aaedf4a\",",
									"  \"2bff21f9-ed17-62ba-16f9-4ac1a3dc3756\",",
									"  \"49401fc5-1579-38ac-be1d-6913cb27792b\",",
									"  \"a7abc99e-4c97-6b41-f836-ba455f00d55b\",",
									"  \"eda43b92-6865-3ae6-b36a-e8d37244829d\",",
									"  \"798b7d74-6b3c-2c2a-8014-953134d9e62a\",",
									"  \"2896cdec-ec99-7582-3121-58f76cc9474b\",",
									"  \"8c6c8372-39e7-f059-b9a3-e3e0d5167379\",",
									"  \"d727659f-0d75-72f3-574f-5ae300d40f8a\",",
									"  \"14890191-4561-8e7f-015b-74c85f93d1bd\",",
									"  \"58bbd1b6-d3ba-5ddc-f76e-62305c67144b\",",
									"  \"218332b0-51aa-8e8c-c215-b3835164c4c1\",",
									"  \"25599c3e-f84f-ff24-518a-23137741f837\",",
									"  \"2a880b89-199f-edfe-7c54-ec7bb0e564b8\",",
									"  \"d03c6f2e-027b-006f-e8cb-ecd3e36b21b4\",",
									"  \"6a3b9a74-4ff4-bc62-077e-04b8b9c3947c\",",
									"  \"76ba20e4-7b06-1b8f-f46b-bac8d8d0493f\",",
									"  \"5b96ab81-9e1d-b668-d1c2-50709ae930ab\",",
									"  \"22d50042-2d59-c3cc-eb83-55051515201f\",",
									"  \"3b7d24fc-7878-ff8d-b7a4-ad1f14e92980\",",
									"  \"ecede5fb-6ebe-ebca-d0f6-7925c6de930e\",",
									"  \"e37fd416-6b89-c30a-cb24-1e87fa6d864a\",",
									"  \"fe7bccd0-123d-9129-2bcc-91f8822eafbe\",",
									"  \"5e53ad01-c0ec-6540-0b8b-1c3ad31c7336\",",
									"  \"4e655db0-230c-a3ad-662e-c141a0d48d6e\",",
									"  \"fcba7519-1795-4569-e4c4-6521bd8549ef\",",
									"  \"db9709a4-9285-589c-e3ca-055c271f6bc7\",",
									"  \"9c20d0c9-f96c-5711-d161-7b47cde657f5\",",
									"  \"71d15488-2355-7198-9913-94af8947e16b\",",
									"  \"d7b7bdb7-e89d-7783-194f-7fc424396b25\",",
									"  \"cc990363-d368-92b4-1984-329a4dfd0ce8\",",
									"  \"68bae04b-3715-026f-cc57-7948a129fd0b\",",
									"  \"13514748-8b22-c0c4-abc2-744ccac0bd1a\",",
									"  \"44bedf25-4661-1182-211d-1da66e5f7071\",",
									"  \"22f8939f-e2c6-fe4f-fb16-3722a6e6dd0d\",",
									"  \"3a694823-a761-a630-aa7a-581a8d09ab63\",",
									"  \"001b3d9b-090e-1ee1-53c5-3b0e6efb2159\",",
									"  \"c0fc2936-0f80-d577-ea9e-0d28cc7040b2\",",
									"  \"287a2bb1-f442-951a-2c38-18ef2bb60b26\",",
									"  \"19813cef-c0b4-bcd7-1d1c-d96348d3164b\",",
									"  \"ce921aee-b487-eaa0-f494-67791d635cdd\",",
									"  \"b97caebd-314d-1bce-e04a-21e255613efc\",",
									"  \"4d1e96a6-69d0-9bf4-0018-434d6b69ad23\",",
									"  \"1048f774-3126-a2e6-bf90-e4acd19d6366\",",
									"  \"0f81615a-6522-5a05-8e90-c7e8f06fcc76\",",
									"  \"a6c8ff4b-a293-66ee-d89d-54db9da1bede\",",
									"  \"c4dbe960-70ab-3273-25fb-c4b3e0672458\",",
									"  \"6df5a799-0639-ae2f-5e89-15c9fdd3d895\",",
									"  \"3d638c03-2b82-d1ed-420c-e5a7ca88a9eb\",",
									"  \"821cd139-a747-2831-de0a-4d7bc53d9598\",",
									"  \"8eb6945d-6e6d-4c65-f3f5-f546a6b206f1\",",
									"  \"0091c97c-9a42-c5b5-bf09-019bff28b81a\",",
									"  \"e195258d-8e66-5235-4c25-186d789a2447\",",
									"  \"0880111b-bfb1-e886-c5c1-388689c662d4\",",
									"  \"fb519ecb-1903-37c1-e8e1-f275797f4332\",",
									"  \"18b0f15e-1fc3-285f-ac39-89f80e832c46\",",
									"  \"a2761ba3-ebd8-c66c-a0b1-43c0e903b398\",",
									"  \"c3920868-de1b-ef5b-b122-38b3ac826c8e\",",
									"  \"fe2689f0-38f3-e514-784e-7658b655fb03\",",
									"  \"acb0ce16-dddb-45b9-3337-b15f70e8bd5f\",",
									"  \"f308f1d6-d436-3f40-9cef-2d483733424b\",",
									"  \"0ce6a421-b2a1-21f7-d2e0-2ffc91e3b273\",",
									"  \"cb29e242-6be5-6847-a618-132e894951e2\"",
									"",
									"]",
									"    ",
									"} else if (pm.environment.name === \"dev\") {",
									"    payorExternalids = [",
									"  \"56e1db12-7e55-01fd-7e3e-ac646787d538\",",
									"  \"789c7f90-52d4-8539-541f-eee11e53c828\",",
									"  \"41091953-ee99-9873-f6b0-f7ee226f625d\",",
									"  \"8d03afa7-ceea-00be-9e2a-11eb047a0a99\",",
									"  \"e3e9ca54-3fe0-3068-2c9e-95022ccfd3a6\",",
									"  \"cee8a51f-79e4-bfad-9e5b-5d770fbfa31e\",",
									"  \"dc0feb71-161f-a80a-9074-2644f9a83e44\",",
									"  \"3ede1080-5a05-b105-a251-e6ceace7de3c\",",
									"  \"78fffe05-5189-9f19-e020-40bf4a8f27c4\",",
									"  \"5340cb8e-9d53-9be5-0af3-02afc24cd06e\",",
									"  \"9f58e2a8-ddfe-cda2-a844-9b1ed5879037\",",
									"  \"2bd0444b-72c0-6207-8c86-c452fd01b494\",",
									"  \"a389019a-67e2-9ed6-42cf-fc778edae229\",",
									"  \"ad5ceabf-4247-7c20-5a99-44905a0faca5\",",
									"  \"3e5478f3-41f5-702a-3e57-2ddfd5d7bae8\",",
									"  \"db809b7c-452d-7c69-eda8-7b4aa1ee3625\",",
									"  \"2f0a9b51-f311-2416-3b02-46f0876a1f1b\",",
									"  \"afd0498d-fa43-1db5-7c70-03d0075133aa\",",
									"  \"b5a7419c-7224-a65b-b940-75759394b4d0\",",
									"  \"df284e79-e50a-e2b6-5c4d-164e1e5d8059\",",
									"  \"764954ff-70e4-805b-7986-6418183d65d0\",",
									"  \"6cc6c489-0d69-0bd5-4d18-ec799247383d\",",
									"  \"9f5324a2-7d74-f4fe-b5ee-ecfc2e8959df\",",
									"  \"c1759b51-2dad-68ed-0a74-ff775c1ee678\",",
									"  \"51b8f7cf-4843-8905-c6bc-191da1460a35\",",
									"  \"8f870f49-e8dd-0337-2aa5-7ac0196be607\",",
									"  \"77b05ed9-9078-9268-2025-eb569370dc27\",",
									"  \"3ad62974-129f-5449-95dc-031e978a531b\",",
									"  \"fabfad30-7656-76bf-8031-882fa18609d5\",",
									"  \"287d0c0f-11d2-c0c0-09de-b394ac650478\",",
									"  \"828c09c5-aa47-6a23-bfda-c7c1fecfe063\",",
									"  \"6f918c15-9016-84e3-8c6d-e673e1f44e6f\",",
									"  \"5fb58801-58b4-9f72-ecaf-60f1999236de\",",
									"  \"2d51586e-2e4c-a822-f5ac-79687d949531\",",
									"  \"bb0a2bdc-4a92-6c5e-0ee1-c59896729588\",",
									"  \"59815314-0a43-0412-9872-0349fcec9a87\",",
									"  \"2caf83f0-8a2c-c622-db70-9faf471094df\",",
									"  \"8e21d58b-b05d-8771-70ee-371ec5555c3f\",",
									"  \"d619cf91-882c-712c-42a9-a9cf909bbcdb\",",
									"  \"9898f740-86c0-0869-beaa-1501a02fb404\",",
									"  \"fbb105e4-82d0-3b8f-9a5f-35689bab4f63\",",
									"  \"88c7c852-b957-f6c7-d261-55a81bae2eb7\",",
									"  \"e714f5a3-1ea5-a87c-a4c0-38e06f8d2dc3\",",
									"  \"9298d74f-08cc-a58f-76db-2858befab318\",",
									"  \"420d036f-d8ff-31f1-13c6-f0ea7ae2004f\",",
									"  \"135554b1-d5da-ffd2-baf1-1d8e30615f24\",",
									"  \"e1dfdcb0-7fb2-1972-cbbf-b92510b739df\",",
									"  \"4d85e003-8414-3a00-2975-29feb860ce61\",",
									"  \"53994cf3-4bc6-7e33-a079-b2da9cfc1233\",",
									"  \"7df9b205-64c7-8a82-e7e4-f426c36da508\",",
									"  \"90c28c29-fced-0403-0322-bbe10ae1bcca\",",
									"  \"57ebea90-f0bf-5c73-0f3d-67eda0c04b59\",",
									"  \"ae120eb4-783d-d12b-1cc0-a27faaa558dd\",",
									"  \"d142a418-153c-5ce5-8c0b-69613165c5b1\",",
									"  \"f1aba850-cf38-4052-61db-ceb62479413c\",",
									"  \"2d70a060-62d3-8ecf-9753-3ace4682be87\",",
									"  \"6c8d21c9-112c-29bb-cb39-3031c17edac1\",",
									"  \"289478ff-ab71-6100-4f67-2aabec17fca2\",",
									"  \"c8b272f0-9e35-1274-0be1-92048540c4f6\",",
									"  \"418f9afc-9665-a69d-2e2d-90e76b062c1a\",",
									"  \"653bd3ac-2975-c806-7fa6-ece182481f96\",",
									"  \"f78c4a3e-b62d-0a84-4f54-823636c226db\",",
									"  \"53795161-3e7b-cfda-b414-4380dbe73aab\",",
									"  \"f0058ecb-daf6-401d-119c-e2dc33965c63\",",
									"  \"6d29ab83-0a71-a508-8968-bdbf5cf14fb5\",",
									"  \"e92f03f1-6b6d-fff1-acd6-1cdeec6c7729\",",
									"  \"a5c9e3f3-d021-4a2e-3a9d-53a778d9893e\",",
									"  \"3015be5d-ab80-1e91-8897-78f940f91f81\",",
									"  \"e1dd302a-b8ba-98ba-e192-aee1c321e629\",",
									"  \"b3e5f2b5-39ba-dc32-d4b3-d10c42066ae9\",",
									"  \"6360eeaf-edbe-cd2d-1704-85bb4d9f0db8\",",
									"  \"c01f2394-aa8c-1356-7ead-0425e3f05aca\",",
									"  \"5bcaf9b1-ce54-6c78-2305-87107fc6be56\",",
									"  \"1ad2cea9-789f-df99-c939-3aea441a687a\",",
									"  \"2558adad-06f4-c397-b87a-0ca9db1d463a\",",
									"  \"a93c50d6-aea1-5d39-164e-3adf8ec87431\",",
									"  \"72a8dd10-cdd0-8fbf-5859-660a25623f4c\",",
									"  \"f2aed711-9295-66e5-6a70-22f88255356f\",",
									"  \"7991f244-092e-9c37-6195-67992743e429\",",
									"  \"dd561bbf-462c-b70b-3847-f321ab0c22d7\",",
									"  \"8413a34f-262c-5468-be04-4db1e7c66f2d\",",
									"  \"d4865c06-68cc-46f6-258c-ea75185855fe\",",
									"  \"a137099a-4ab5-76a7-02fb-514bb8eb2ed9\",",
									"  \"c025411e-ee6a-aa92-d144-92e94b177fa2\",",
									"  \"5a95289b-48aa-890e-c16d-90708d0f4ef8\",",
									"  \"62f4d685-d69c-107b-b03d-e82b763ee62a\",",
									"  \"6710efef-31ff-4bf0-be7b-efa4e4c8d3e9\",",
									"  \"4cd5a1ff-7407-4982-e81a-9e5b89d07b04\",",
									"  \"1e6edb88-1e75-96c9-6976-dbd8702ab4c6\",",
									"  \"4cd89fd8-cdca-700f-36b6-25fc67b10c27\",",
									"  \"40f1bac9-dc29-61d6-5325-455f14e5d543\",",
									"  \"b57019ec-eda6-1716-3bb7-abb27f54c4fc\",",
									"  \"266a7f8d-0e10-c7bb-077c-6ac63a5a88af\",",
									"  \"e5261244-6ab6-8617-11cf-8cdb64d47e52\",",
									"  \"96c499f5-cf38-1c30-38b6-5cd10089e8b7\",",
									"  \"8f0419a0-8303-752a-6094-e304360b34a6\",",
									"  \"f21d3a9f-d737-3964-56b1-cdeb83ec6baf\",",
									"  \"c1acf4d0-e787-ab92-fa25-d1dddac56f03\",",
									"  \"63c2b49d-40e6-3eaa-6f3b-1037b3039d43\",",
									"  \"84235458-5076-361d-67d5-c69dbbbbf507\",",
									"  \"eb9b7f63-9775-8586-4360-52ce304306ce\",",
									"  \"b1f10152-309b-cdb6-a309-d041fc7e39e1\",",
									"  \"d238be68-3b18-ec51-e4fb-45ea98e453e3\",",
									"  \"b307b1c3-d4b5-f8b0-dbe0-f9d82d9afcc5\",",
									"  \"9e05de64-88b4-ef92-f461-2810d2bdcae9\",",
									"  \"ad26d957-d231-0457-54d6-e0f071eab3b1\",",
									"  \"17059ee6-904b-a5db-9626-9e32c6e7932c\",",
									"  \"aba32389-2f9a-cbdb-3990-fc51aaa076c2\",",
									"  \"b4a2448f-5ea3-8246-9e7a-11e95f4338a1\",",
									"  \"219df6ae-a750-8e31-9eb1-aef6b3d38ab2\",",
									"  \"30b83a67-482d-4f30-7c04-16f66dc56157\",",
									"  \"a82aa276-302e-bbe3-ed94-49bd1b0a187a\",",
									"  \"9c787381-66d3-140c-1c3e-9022add21dc6\",",
									"  \"a7de2fe9-13ef-52f0-b662-53b7910be768\",",
									"  \"b8532e62-5139-2f83-6a15-10da6cb56bf3\",",
									"  \"7a14758b-99da-b869-9d2b-f287b2e8a47a\",",
									"  \"2760f6d5-0522-d311-2877-b8d99112483e\",",
									"  \"97b90f2f-255e-9262-d0da-7ea24dfaa320\",",
									"  \"8a0f5f79-476a-6f08-3a16-cd8d26ed6923\",",
									"  \"5af67ab6-6d44-2f1b-94d0-23628999330f\",",
									"  \"02f1ab4c-b81f-7d96-34cd-9545b89ec11b\",",
									"  \"10dcebdf-0df7-4b26-4c07-a71bdbbe6c55\"",
									"",
									"    ];",
									"}",
									"",
									"const payor_names = [ ",
									"  \"Aetna\",",
									"  \"Alameda Behavioral Health\",",
									"  \"All Savers\",",
									"  \"AmeriHealth\",",
									"  \"Amida Care\",",
									"  \"Anthem\",",
									"  \"Arkansas Blue Cross and Blue Shield\",",
									"  \"Asuras Northwest Health plan\",",
									"  \"AvMed Health Plan\",",
									"  \"Blue Cross and Blue Shield of Alabama\",",
									"  \"Blue Cross and Blue Shield of Illinois\",",
									"  \"Blue Cross and Blue Shield of Kansas\",",
									"  \"Blue Cross and Blue Shield of Kansas City\",",
									"  \"Blue Cross and Blue Shield of Louisiana\",",
									"  \"Blue Cross and Blue Shield of Minnesota\",",
									"  \"Blue Cross and Blue Shield of Mississippi\",",
									"  \"Blue Cross and Blue Shield of Montana\",",
									"  \"Blue Cross and Blue Shield of Nebraska\",",
									"  \"Blue Cross and Blue Shield of New Mexico\",",
									"  \"Blue Cross and Blue Shield of North Carolina\",",
									"  \"Blue Cross and Blue Shield of Oklahoma\",",
									"  \"Blue Cross and Blue Shield of Rhode Island\",",
									"  \"Blue Cross and Blue Shield of Texas\",",
									"  \"Blue Cross and Blue Shield of Vermont\",",
									"  \"Blue Cross and Blue Shield of Wyoming\",",
									"  \"Blue Cross Blue Shield of Arizona\",",
									"  \"Blue Cross Blue Shield of Massachusetts\",",
									"  \"Blue Cross Blue Shield of Michigan\",",
									"  \"Blue Cross Blue Shield of North Dakota\",",
									"  \"Blue Cross of Idaho Health Service, Inc.\",",
									"  \"Blue Shield of California\",",
									"  \"BlueCross BlueShield of South Carolina\",",
									"  \"BlueCross BlueShield of Tennessee\",",
									"  \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\",",
									"  \"BridgeSpan Health Company\",",
									"  \"Bright Health\",",
									"  \"Capital District Physicians' Health Plan, Inc. (CDPHP)\",",
									"  \"Care N' Care Health Plan\",",
									"  \"CareFirst BCBS\",",
									"  \"CareOregon\",",
									"  \"Centene\",",
									"  \"Cigna\",",
									"  \"Community Care Health Plan\",",
									"  \"Community First Health Plans\",",
									"  \"Community Health Choice, Inc. (CHC)\",",
									"  \"Community Health Group\",",
									"  \"Community Health Plan of Washington (CHPW)\",",
									"  \"ConnectiCare, Inc.\",",
									"  \"Contra Costa Health Plan\",",
									"  \"Cook Children's Health Plan (CCHP)\",",
									"  \"Dean Health Plan\",",
									"  \"Dell Children's Health Plan\",",
									"  \"Driscoll Health Plan\",",
									"  \"El Paso First Health Plans\",",
									"  \"Empire/NYSHIP\",",
									"  \"Excellus BlueCross BlueShield\",",
									"  \"Fallon Health\",",
									"  \"GEHA (Government Employee Health Association)\",",
									"  \"Geisinger Health Plan\",",
									"  \"GHI (Emblem Health)\",",
									"  \"Gold Coast Health Plan\",",
									"  \"Harvard Pilgrim Health Care, Inc.\",",
									"  \"Health Alliance\",",
									"  \"Health New England, Inc.\",",
									"  \"Health Plan of San Joaquin\",",
									"  \"Health Plan of San Mateo\",",
									"  \"HealthCare Management Administrators\",",
									"  \"Healthfirst\",",
									"  \"Highmark BCBS\",",
									"  \"Highmark Health\",",
									"  \"HIP/Emblem Health\",",
									"  \"Horizon Blue Cross Blue Shield of New Jersey\",",
									"  \"Humana\",",
									"  \"Independence Blue Cross\",",
									"  \"Independent Health Association, Inc.\",",
									"  \"Inland Empire Health Plan\",",
									"  \"InnovaCare Health Solutions\",",
									"  \"Kaiser Colorado\",",
									"  \"Kaiser Foundation Health Plan (Northern California)\",",
									"  \"Kaiser Foundation Health Plan (Southern California)\",",
									"  \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\",",
									"  \"Kaiser Foundation Health Plan of Washington\",",
									"  \"Kaiser Georgia\",",
									"  \"Kaiser Hawaii\",",
									"  \"L.A. Care Health Plan\",",
									"  \"Medica\",",
									"  \"Memorial Hermann Health Insurance Company\",",
									"  \"Miami Children’s Health Plan\",",
									"  \"Moda Health\",",
									"  \"Molina Healthcare\",",
									"  \"Neighborhood Health Plan of Rhode Island, Inc.\",",
									"  \"No Insurance\",",
									"  \"Oscar Insurance Corporation\",",
									"  \"Other\",",
									"  \"Oxford\",",
									"  \"PacificSource Health Plans\",",
									"  \"Partnership HealthPlan of California\",",
									"  \"Premera Blue Cross\",",
									"  \"Presbyterian Health Plan\",",
									"  \"Priority Health\",",
									"  \"Providence Health Plan\",",
									"  \"Regence BlueShield\",",
									"  \"San Joaquin County\",",
									"  \"Santa Cruz County\",",
									"  \"SelectHealth\",",
									"  \"Sentara Health Plans, Inc. (fka Optima Health)\",",
									"  \"Sharp Health Plan\",",
									"  \"State of Texas\",",
									"  \"Sutter Health Plus\",",
									"  \"Texas Children's Health Plan\",",
									"  \"Tufts Health Plan\",",
									"  \"UCare\",",
									"  \"UMR\",",
									"  \"UnitedHealthcare\",",
									"  \"UPMC Health Plan\",",
									"  \"ValueCare\",",
									"  \"Ventura Healthplan\",",
									"  \"WEA Trust\",",
									"  \"WellCare Health Plans, Inc.\",",
									"  \"Wellmark Blue Cross and Blue Shield of Iowa\",",
									"  \"Wellmark Blue Cross and Blue Shield of South Dakota\",",
									"  \"Western Health Advantage\"",
									"",
									"];",
									"",
									"let patientRelation = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
									"",
									"let statesList = [\"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"];",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"//Coverage Start Date",
									"let coverageStartDate = collectionMethods.randomDate(new Date(), new Date());",
									"let coverageStartDateFormatted = coverageStartDate.getFullYear() + '-' + (\"0\" + (coverageStartDate.getMonth() + 1)).slice(-2) + '-' + (\"0\" + coverageStartDate.getDate()).slice(-2);",
									"",
									"//Coverage End Date",
									"//Add number of days to coverageStartDate to make the coverageEndDate in future",
									"let AddNumberOfDays = 90",
									"let coverageEndDate = coverageStartDate.setDate(coverageStartDate.getDate() + AddNumberOfDays);",
									"let coverageEndDateFormatted = new Date(coverageEndDate).getFullYear() + '-' + (\"0\" + (new Date(coverageEndDate).getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date(coverageEndDate).getDate()).slice(-2);",
									"",
									"let random = Math.floor(Math.random() * payor_names.length);",
									"",
									"pm.environment.set(\"group_id1\", Math.floor(Math.random() * (70 - 10) + 10));",
									"pm.environment.set(\"subscriber_id1\", Math.floor(Math.random() * (70 - 10) + 10));",
									"pm.environment.set(\"alternative_id1\", Math.floor(Math.random() * (70 - 10) + 10));",
									"",
									"pm.environment.set(\"payor_name1\", payor_names[random]);",
									"// pm.environment.set(\"payor_program_name1\", payor_program);",
									"pm.environment.set(\"Coverage1StartDate\", coverageStartDateFormatted);",
									"pm.environment.set(\"Coverage1EndDate\", coverageEndDateFormatted);",
									"pm.environment.set(\"payor_externalid1\", payorExternalids[random]);",
									"pm.environment.set(\"patientState1\", ld.sample(statesList));",
									"pm.environment.set(\"providerServicesPhoneNumber1\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patient_relation1\", ld.sample(patientRelation));",
									"pm.environment.set(\"RelationFirstName1\", firstName);",
									"pm.environment.set(\"RelationLastName1\", lastName);",
									"pm.environment.set(\"RelationDateOfBirth1\", dateOfBirth);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "059cd684-78cd-4628-a67c-802a5fc6091c",
								"exec": [
									"var response_text = pm.response.text();",
									"",
									"//pm.environment.set(\"response_text\", response_text);",
									"//pm.environment.set(\"CoverageExternalId\", response_text);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// pm.test(\"Verify CoverageExternalId is generated\", function () {",
									"//     pm.expect(jsonData.id).length.greaterThan(0);",
									"// });",
									"",
									"pm.environment.set(\"coverageExternalId\", response_text);",
									"console.log(\"response_text\"+response_text)"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "22f7defa-3cc7-4ab2-a2cb-b3987cd1e6dd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payor\": \"{{payor_name1}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{group_id1}}\",\n    \"subscriberId\": \"{{subscriber_id1}}\",\n    \"alternativeId\": \"{{alternative_id1}}\",\n    \"customPayorName\": \"\",\n    \"stateCode\": \"{{patientState1}}\",\n       \"startDate\": \"{{Coverage1StartDate}}\",\n    \"endDate\": \"{{Coverage1EndDate}}\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber1}}\",\n    \"patientRelationToSubscriber\": \"{{patient_relation1}}\",  \n    \"subscriberFirstName\": \"{{RelationFirstName1}}\",\n    \"subscriberLastName\": \"{{RelationLastName1}}\",\n    \"subscriberDateOfBirth\":\"{{RelationDateOfBirth1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages/{{coverageExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"coverages",
								"{{coverageExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get coverage details - after update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e585dae5-8093-4b32-9b35-a1d2167e2f64",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_response = [   ",
									"           {",
									"  \"payor\": \"\" + pm.environment.get(\"payor_name2\") + \"\",",
									"          \"payorExternalId\": \"\" + pm.environment.get(\"payor_externalid2\") +\"\",",
									"        \"coverageExternalId\": \"\" + pm.environment.get(\"CoverageExternalId2\") + \"\",",
									"        \"patientExternalId\": \"\" + pm.environment.get(\"patientId\") + \"\",",
									"        \"subscriberId\": \"\" + pm.environment.get(\"subscriber_id2\") + \"\",",
									"        \"groupId\": \"\" + pm.environment.get(\"group_id2\") + \"\",",
									"        \"stateCode\": \"\"+ pm.environment.get(\"patientState2\") + \"\",",
									"    \"startDate\": \"\"+ pm.environment.get(\"Coverage2StartDate\") + \"\",",
									"        \"endDate\": \"\" + pm.environment.get(\"Coverage2EndDate\") + \"\",",
									"       \"providerServicesPhoneNumber\":  \"+1 \" + pm.environment.get(\"providerServicesPhoneNumber2\") ,",
									" \"patientRelationToSubscriber\": \"\" + pm.environment.get(\"patient_relation2\") +\"\",",
									"   \"subscriberFirstName\":\"\" + pm.environment.get(\"RelationFirstName2\") + \"\",",
									"    \"subscriberLastName\":\"\" + pm.environment.get(\"RelationLastName2\") + \"\",",
									"    \"subscriberDateOfBirth\":\"\" + pm.environment.get(\"RelationDateOfBirth2\") + \"\",",
									"    \"alternativeId\": \"\"+pm.environment.get(\"alternative_id2\")+\"\",",
									"    \"customPayorName\" : null,",
									"        \"isActive\": true  ",
									"      ",
									"    },  ",
									"    {",
									"",
									"         \"payor\": \"\" + pm.environment.get(\"payor_name1\") + \"\", ",
									"     \"payorExternalId\": \"\" + pm.environment.get(\"payor_externalid1\") +\"\",",
									"        \"coverageExternalId\": \"\" + pm.environment.get(\"coverageExternalId\") + \"\",",
									"        \"patientExternalId\": \"\" + pm.environment.get(\"patientId\") + \"\",",
									"        \"subscriberId\": \"\" + pm.environment.get(\"subscriber_id1\") + \"\",",
									"        \"groupId\": \"\" + pm.environment.get(\"group_id1\") + \"\",",
									"        \"stateCode\": \"\"+ pm.environment.get(\"patientState1\") + \"\",",
									"        \"startDate\": \"\"+ pm.environment.get(\"Coverage1StartDate\") + \"\",",
									"        \"endDate\": \"\" + pm.environment.get(\"Coverage1EndDate\") + \"\", ",
									"        \"providerServicesPhoneNumber\":  \"+1 \" + pm.environment.get(\"providerServicesPhoneNumber1\") +\"\",",
									"        \"patientRelationToSubscriber\": \"\" + pm.environment.get(\"patient_relation1\") +\"\",",
									"    \"subscriberFirstName\":\"\" + pm.environment.get(\"RelationFirstName1\") + \"\",",
									"    \"subscriberLastName\":\"\" + pm.environment.get(\"RelationLastName1\") + \"\",",
									"    \"subscriberDateOfBirth\":\"\" + pm.environment.get(\"RelationDateOfBirth1\") + \"\",",
									"    \"alternativeId\": \"\"+pm.environment.get(\"alternative_id1\")+\"\",",
									"    \"customPayorName\" : \"\",",
									"        \"isActive\": true",
									"      ",
									"    }, ",
									"];  ",
									"",
									"",
									"    ",
									"pm.test(\"Validate response\", function () {",
									"    console.log(\"jsonData: \"+JSON.stringify(jsonData));",
									"    console.log(\"exp_response: \"+JSON.stringify(exp_response).replace(/\\\\/g, ''));",
									"    pm.expect(JSON.stringify(jsonData)).to.eql(JSON.stringify(exp_response).replace(/\\\\/g, ''));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cb2b434e-7f80-4156-ad47-1117ab96e123",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a097451a-7d58-4dd1-b5fc-41304e1deb72",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"coverages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add coverage3",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7366a201-14f6-46bf-9202-8ab87c0602ae",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"var payorExternalids;",
									"",
									"if (pm.environment.name === \"qa\") {",
									"    payorExternalids = [",
									"",
									"  \"3e395a8c-521e-399e-c413-ada8965515da\",",
									"  \"8de23718-b5f8-dc6b-c079-0e1ccf39c174\",",
									"  \"0a0d9714-be8b-76a9-6a85-e5446abdfd72\",",
									"  \"1771abe3-0ea6-0da0-b1f2-16543d0c9235\",",
									"  \"166ea8c8-7541-b0ac-61d5-3dd4222b28b5\",",
									"  \"21ee4ad0-5a10-0ef4-67b9-c0e20c44e7c3\",",
									"  \"5921b11f-f1a3-9cc9-bffc-86eea8b431c2\",",
									"  \"0a8f0cc7-71d6-c236-f3de-8cdcff0e741a\",",
									"  \"5c95d9fb-7f38-4062-6502-bacd9a177b22\",",
									"  \"7113e37e-ff58-ba1e-1cf5-9902d698c232\",",
									"  \"649dec3f-910a-6147-a599-bee65689fc93\",",
									"  \"87b4ba4b-499d-4119-f35e-8dd9dc1c7c0a\",",
									"  \"8e5b223b-0358-f6aa-a736-1667389f033f\",",
									"  \"d2175acf-d9f5-5490-f9e7-ecfdb2b720bb\",",
									"  \"e201f6f9-346b-d5d9-01dc-7efc817f26f5\",",
									"  \"9295512b-0828-519a-7f6c-76177b977a39\",",
									"  \"f0aa80ef-2592-2d2a-6cc3-fcd3c2937885\",",
									"  \"ad3a64bf-91c0-57ff-3d5c-86f68e70ef3a\",",
									"  \"d8630164-6c15-2737-bc05-d605746ec9e9\",",
									"  \"6b758c44-bbb3-5932-5290-a1653d5a4edc\",",
									"  \"88a14513-8064-c579-af9b-2b643226cfbd\",",
									"  \"8898dbb6-1e8f-3351-f6b6-da85d0af2769\",",
									"  \"e80cfead-15b8-f4f7-01cd-6ada6f73b727\",",
									"  \"c4f14fb2-ef4d-f7d5-6a59-56bfcf1e019f\",",
									"  \"4d576ad1-7ea4-31f3-9d18-c8427e96613c\",",
									"  \"158d3862-29da-626b-5fc0-b9d26e99fe16\",",
									"  \"ba149d58-9b57-d43e-68ef-7c2512b64706\",",
									"  \"c796b1e8-5a96-1243-8972-81830db39b41\",",
									"  \"2808e5d0-3238-8e09-2b0e-aa1df1fc4d5e\",",
									"  \"71c17385-9ab6-54bc-960d-89723ecc128a\",",
									"  \"a9d28970-647a-7fe1-f334-476e8840c05b\",",
									"  \"0b0f80af-28d3-45bd-01b3-d94f2752683a\",",
									"  \"0ceff77d-a8ba-24aa-9c8a-980fbce8c181\",",
									"  \"6f160c82-f8b6-dad5-35b3-c659cac7bf90\",",
									"  \"8132da12-e499-767d-4375-0e5069c5d19b\",",
									"  \"5548c2e8-8920-104b-b9a6-c9ae02342b04\",",
									"  \"6cb52ff0-9d4b-6132-2ce4-84d44d0674f2\",",
									"  \"0017a4fd-0d32-0156-de21-7d109719af5f\",",
									"  \"3ec238c1-2327-43a5-48ea-18ae20295ed7\",",
									"  \"6da2522f-bb9c-4230-d013-d4221a1d08e1\",",
									"  \"b28710ed-3d49-3b34-e212-38d85391c9e1\",",
									"  \"d96346bf-3bd1-cad6-c08b-fc178ed1c493\",",
									"  \"c84af9f9-760a-841c-55d4-1176cce14df0\",",
									"  \"b1bce313-7550-a084-a8e4-fddfb79c50ee\",",
									"  \"3b5f1abf-ecc1-4a29-5c9a-96307b9066cd\",",
									"  \"cbf9b456-2ada-a1a8-c83c-eb32d727d09b\",",
									"  \"4a946da6-3548-fccb-6a4c-6a4b7ade0adf\",",
									"  \"17d0a805-747f-e222-4008-6aef21dbca1c\",",
									"  \"51eec5ff-02b5-b56a-a2df-e936d8f458ef\",",
									"  \"95d4720f-9682-2e69-886a-6aa6ae3010f8\",",
									"  \"ba6e4eed-7245-14cc-36bc-089b7eb022f2\",",
									"  \"94fbba21-6630-bb25-ae1b-2ffe3e259a3c\",",
									"  \"069293f9-2970-1107-20a7-c267d4ee2c75\",",
									"  \"1b966e58-e358-68ad-7baf-cf3af7364298\",",
									"  \"23fc50c3-2499-ef22-5138-7d3efba331b6\",",
									"  \"d8292d3e-2872-bbe0-7ec2-62e281ba8e48\",",
									"  \"e399962f-6470-c2d6-a17c-9e88f46a0a92\",",
									"  \"7c883601-97f5-b9c0-6622-d180f5abb237\",",
									"  \"55a26fd5-45d8-76d2-2878-6ee87835a356\",",
									"  \"957200ee-dfb9-ec80-f158-30d25aaedf4a\",",
									"  \"2bff21f9-ed17-62ba-16f9-4ac1a3dc3756\",",
									"  \"49401fc5-1579-38ac-be1d-6913cb27792b\",",
									"  \"a7abc99e-4c97-6b41-f836-ba455f00d55b\",",
									"  \"eda43b92-6865-3ae6-b36a-e8d37244829d\",",
									"  \"798b7d74-6b3c-2c2a-8014-953134d9e62a\",",
									"  \"2896cdec-ec99-7582-3121-58f76cc9474b\",",
									"  \"8c6c8372-39e7-f059-b9a3-e3e0d5167379\",",
									"  \"d727659f-0d75-72f3-574f-5ae300d40f8a\",",
									"  \"14890191-4561-8e7f-015b-74c85f93d1bd\",",
									"  \"58bbd1b6-d3ba-5ddc-f76e-62305c67144b\",",
									"  \"218332b0-51aa-8e8c-c215-b3835164c4c1\",",
									"  \"25599c3e-f84f-ff24-518a-23137741f837\",",
									"  \"2a880b89-199f-edfe-7c54-ec7bb0e564b8\",",
									"  \"d03c6f2e-027b-006f-e8cb-ecd3e36b21b4\",",
									"  \"6a3b9a74-4ff4-bc62-077e-04b8b9c3947c\",",
									"  \"76ba20e4-7b06-1b8f-f46b-bac8d8d0493f\",",
									"  \"5b96ab81-9e1d-b668-d1c2-50709ae930ab\",",
									"  \"22d50042-2d59-c3cc-eb83-55051515201f\",",
									"  \"3b7d24fc-7878-ff8d-b7a4-ad1f14e92980\",",
									"  \"ecede5fb-6ebe-ebca-d0f6-7925c6de930e\",",
									"  \"e37fd416-6b89-c30a-cb24-1e87fa6d864a\",",
									"  \"fe7bccd0-123d-9129-2bcc-91f8822eafbe\",",
									"  \"5e53ad01-c0ec-6540-0b8b-1c3ad31c7336\",",
									"  \"4e655db0-230c-a3ad-662e-c141a0d48d6e\",",
									"  \"fcba7519-1795-4569-e4c4-6521bd8549ef\",",
									"  \"db9709a4-9285-589c-e3ca-055c271f6bc7\",",
									"  \"9c20d0c9-f96c-5711-d161-7b47cde657f5\",",
									"  \"71d15488-2355-7198-9913-94af8947e16b\",",
									"  \"d7b7bdb7-e89d-7783-194f-7fc424396b25\",",
									"  \"cc990363-d368-92b4-1984-329a4dfd0ce8\",",
									"  \"68bae04b-3715-026f-cc57-7948a129fd0b\",",
									"  \"13514748-8b22-c0c4-abc2-744ccac0bd1a\",",
									"  \"44bedf25-4661-1182-211d-1da66e5f7071\",",
									"  \"22f8939f-e2c6-fe4f-fb16-3722a6e6dd0d\",",
									"  \"3a694823-a761-a630-aa7a-581a8d09ab63\",",
									"  \"001b3d9b-090e-1ee1-53c5-3b0e6efb2159\",",
									"  \"c0fc2936-0f80-d577-ea9e-0d28cc7040b2\",",
									"  \"287a2bb1-f442-951a-2c38-18ef2bb60b26\",",
									"  \"19813cef-c0b4-bcd7-1d1c-d96348d3164b\",",
									"  \"ce921aee-b487-eaa0-f494-67791d635cdd\",",
									"  \"b97caebd-314d-1bce-e04a-21e255613efc\",",
									"  \"4d1e96a6-69d0-9bf4-0018-434d6b69ad23\",",
									"  \"1048f774-3126-a2e6-bf90-e4acd19d6366\",",
									"  \"0f81615a-6522-5a05-8e90-c7e8f06fcc76\",",
									"  \"a6c8ff4b-a293-66ee-d89d-54db9da1bede\",",
									"  \"c4dbe960-70ab-3273-25fb-c4b3e0672458\",",
									"  \"6df5a799-0639-ae2f-5e89-15c9fdd3d895\",",
									"  \"3d638c03-2b82-d1ed-420c-e5a7ca88a9eb\",",
									"  \"821cd139-a747-2831-de0a-4d7bc53d9598\",",
									"  \"8eb6945d-6e6d-4c65-f3f5-f546a6b206f1\",",
									"  \"0091c97c-9a42-c5b5-bf09-019bff28b81a\",",
									"  \"e195258d-8e66-5235-4c25-186d789a2447\",",
									"  \"0880111b-bfb1-e886-c5c1-388689c662d4\",",
									"  \"fb519ecb-1903-37c1-e8e1-f275797f4332\",",
									"  \"18b0f15e-1fc3-285f-ac39-89f80e832c46\",",
									"  \"a2761ba3-ebd8-c66c-a0b1-43c0e903b398\",",
									"  \"c3920868-de1b-ef5b-b122-38b3ac826c8e\",",
									"  \"fe2689f0-38f3-e514-784e-7658b655fb03\",",
									"  \"acb0ce16-dddb-45b9-3337-b15f70e8bd5f\",",
									"  \"f308f1d6-d436-3f40-9cef-2d483733424b\",",
									"  \"0ce6a421-b2a1-21f7-d2e0-2ffc91e3b273\",",
									"  \"cb29e242-6be5-6847-a618-132e894951e2\"",
									"",
									"]",
									"    ",
									"} else if (pm.environment.name === \"dev\") {",
									"    payorExternalids = [",
									"  \"56e1db12-7e55-01fd-7e3e-ac646787d538\",",
									"  \"789c7f90-52d4-8539-541f-eee11e53c828\",",
									"  \"41091953-ee99-9873-f6b0-f7ee226f625d\",",
									"  \"8d03afa7-ceea-00be-9e2a-11eb047a0a99\",",
									"  \"e3e9ca54-3fe0-3068-2c9e-95022ccfd3a6\",",
									"  \"cee8a51f-79e4-bfad-9e5b-5d770fbfa31e\",",
									"  \"dc0feb71-161f-a80a-9074-2644f9a83e44\",",
									"  \"3ede1080-5a05-b105-a251-e6ceace7de3c\",",
									"  \"78fffe05-5189-9f19-e020-40bf4a8f27c4\",",
									"  \"5340cb8e-9d53-9be5-0af3-02afc24cd06e\",",
									"  \"9f58e2a8-ddfe-cda2-a844-9b1ed5879037\",",
									"  \"2bd0444b-72c0-6207-8c86-c452fd01b494\",",
									"  \"a389019a-67e2-9ed6-42cf-fc778edae229\",",
									"  \"ad5ceabf-4247-7c20-5a99-44905a0faca5\",",
									"  \"3e5478f3-41f5-702a-3e57-2ddfd5d7bae8\",",
									"  \"db809b7c-452d-7c69-eda8-7b4aa1ee3625\",",
									"  \"2f0a9b51-f311-2416-3b02-46f0876a1f1b\",",
									"  \"afd0498d-fa43-1db5-7c70-03d0075133aa\",",
									"  \"b5a7419c-7224-a65b-b940-75759394b4d0\",",
									"  \"df284e79-e50a-e2b6-5c4d-164e1e5d8059\",",
									"  \"764954ff-70e4-805b-7986-6418183d65d0\",",
									"  \"6cc6c489-0d69-0bd5-4d18-ec799247383d\",",
									"  \"9f5324a2-7d74-f4fe-b5ee-ecfc2e8959df\",",
									"  \"c1759b51-2dad-68ed-0a74-ff775c1ee678\",",
									"  \"51b8f7cf-4843-8905-c6bc-191da1460a35\",",
									"  \"8f870f49-e8dd-0337-2aa5-7ac0196be607\",",
									"  \"77b05ed9-9078-9268-2025-eb569370dc27\",",
									"  \"3ad62974-129f-5449-95dc-031e978a531b\",",
									"  \"fabfad30-7656-76bf-8031-882fa18609d5\",",
									"  \"287d0c0f-11d2-c0c0-09de-b394ac650478\",",
									"  \"828c09c5-aa47-6a23-bfda-c7c1fecfe063\",",
									"  \"6f918c15-9016-84e3-8c6d-e673e1f44e6f\",",
									"  \"5fb58801-58b4-9f72-ecaf-60f1999236de\",",
									"  \"2d51586e-2e4c-a822-f5ac-79687d949531\",",
									"  \"bb0a2bdc-4a92-6c5e-0ee1-c59896729588\",",
									"  \"59815314-0a43-0412-9872-0349fcec9a87\",",
									"  \"2caf83f0-8a2c-c622-db70-9faf471094df\",",
									"  \"8e21d58b-b05d-8771-70ee-371ec5555c3f\",",
									"  \"d619cf91-882c-712c-42a9-a9cf909bbcdb\",",
									"  \"9898f740-86c0-0869-beaa-1501a02fb404\",",
									"  \"fbb105e4-82d0-3b8f-9a5f-35689bab4f63\",",
									"  \"88c7c852-b957-f6c7-d261-55a81bae2eb7\",",
									"  \"e714f5a3-1ea5-a87c-a4c0-38e06f8d2dc3\",",
									"  \"9298d74f-08cc-a58f-76db-2858befab318\",",
									"  \"420d036f-d8ff-31f1-13c6-f0ea7ae2004f\",",
									"  \"135554b1-d5da-ffd2-baf1-1d8e30615f24\",",
									"  \"e1dfdcb0-7fb2-1972-cbbf-b92510b739df\",",
									"  \"4d85e003-8414-3a00-2975-29feb860ce61\",",
									"  \"53994cf3-4bc6-7e33-a079-b2da9cfc1233\",",
									"  \"7df9b205-64c7-8a82-e7e4-f426c36da508\",",
									"  \"90c28c29-fced-0403-0322-bbe10ae1bcca\",",
									"  \"57ebea90-f0bf-5c73-0f3d-67eda0c04b59\",",
									"  \"ae120eb4-783d-d12b-1cc0-a27faaa558dd\",",
									"  \"d142a418-153c-5ce5-8c0b-69613165c5b1\",",
									"  \"f1aba850-cf38-4052-61db-ceb62479413c\",",
									"  \"2d70a060-62d3-8ecf-9753-3ace4682be87\",",
									"  \"6c8d21c9-112c-29bb-cb39-3031c17edac1\",",
									"  \"289478ff-ab71-6100-4f67-2aabec17fca2\",",
									"  \"c8b272f0-9e35-1274-0be1-92048540c4f6\",",
									"  \"418f9afc-9665-a69d-2e2d-90e76b062c1a\",",
									"  \"653bd3ac-2975-c806-7fa6-ece182481f96\",",
									"  \"f78c4a3e-b62d-0a84-4f54-823636c226db\",",
									"  \"53795161-3e7b-cfda-b414-4380dbe73aab\",",
									"  \"f0058ecb-daf6-401d-119c-e2dc33965c63\",",
									"  \"6d29ab83-0a71-a508-8968-bdbf5cf14fb5\",",
									"  \"e92f03f1-6b6d-fff1-acd6-1cdeec6c7729\",",
									"  \"a5c9e3f3-d021-4a2e-3a9d-53a778d9893e\",",
									"  \"3015be5d-ab80-1e91-8897-78f940f91f81\",",
									"  \"e1dd302a-b8ba-98ba-e192-aee1c321e629\",",
									"  \"b3e5f2b5-39ba-dc32-d4b3-d10c42066ae9\",",
									"  \"6360eeaf-edbe-cd2d-1704-85bb4d9f0db8\",",
									"  \"c01f2394-aa8c-1356-7ead-0425e3f05aca\",",
									"  \"5bcaf9b1-ce54-6c78-2305-87107fc6be56\",",
									"  \"1ad2cea9-789f-df99-c939-3aea441a687a\",",
									"  \"2558adad-06f4-c397-b87a-0ca9db1d463a\",",
									"  \"a93c50d6-aea1-5d39-164e-3adf8ec87431\",",
									"  \"72a8dd10-cdd0-8fbf-5859-660a25623f4c\",",
									"  \"f2aed711-9295-66e5-6a70-22f88255356f\",",
									"  \"7991f244-092e-9c37-6195-67992743e429\",",
									"  \"dd561bbf-462c-b70b-3847-f321ab0c22d7\",",
									"  \"8413a34f-262c-5468-be04-4db1e7c66f2d\",",
									"  \"d4865c06-68cc-46f6-258c-ea75185855fe\",",
									"  \"a137099a-4ab5-76a7-02fb-514bb8eb2ed9\",",
									"  \"c025411e-ee6a-aa92-d144-92e94b177fa2\",",
									"  \"5a95289b-48aa-890e-c16d-90708d0f4ef8\",",
									"  \"62f4d685-d69c-107b-b03d-e82b763ee62a\",",
									"  \"6710efef-31ff-4bf0-be7b-efa4e4c8d3e9\",",
									"  \"4cd5a1ff-7407-4982-e81a-9e5b89d07b04\",",
									"  \"1e6edb88-1e75-96c9-6976-dbd8702ab4c6\",",
									"  \"4cd89fd8-cdca-700f-36b6-25fc67b10c27\",",
									"  \"40f1bac9-dc29-61d6-5325-455f14e5d543\",",
									"  \"b57019ec-eda6-1716-3bb7-abb27f54c4fc\",",
									"  \"266a7f8d-0e10-c7bb-077c-6ac63a5a88af\",",
									"  \"e5261244-6ab6-8617-11cf-8cdb64d47e52\",",
									"  \"96c499f5-cf38-1c30-38b6-5cd10089e8b7\",",
									"  \"8f0419a0-8303-752a-6094-e304360b34a6\",",
									"  \"f21d3a9f-d737-3964-56b1-cdeb83ec6baf\",",
									"  \"c1acf4d0-e787-ab92-fa25-d1dddac56f03\",",
									"  \"63c2b49d-40e6-3eaa-6f3b-1037b3039d43\",",
									"  \"84235458-5076-361d-67d5-c69dbbbbf507\",",
									"  \"eb9b7f63-9775-8586-4360-52ce304306ce\",",
									"  \"b1f10152-309b-cdb6-a309-d041fc7e39e1\",",
									"  \"d238be68-3b18-ec51-e4fb-45ea98e453e3\",",
									"  \"b307b1c3-d4b5-f8b0-dbe0-f9d82d9afcc5\",",
									"  \"9e05de64-88b4-ef92-f461-2810d2bdcae9\",",
									"  \"ad26d957-d231-0457-54d6-e0f071eab3b1\",",
									"  \"17059ee6-904b-a5db-9626-9e32c6e7932c\",",
									"  \"aba32389-2f9a-cbdb-3990-fc51aaa076c2\",",
									"  \"b4a2448f-5ea3-8246-9e7a-11e95f4338a1\",",
									"  \"219df6ae-a750-8e31-9eb1-aef6b3d38ab2\",",
									"  \"30b83a67-482d-4f30-7c04-16f66dc56157\",",
									"  \"a82aa276-302e-bbe3-ed94-49bd1b0a187a\",",
									"  \"9c787381-66d3-140c-1c3e-9022add21dc6\",",
									"  \"a7de2fe9-13ef-52f0-b662-53b7910be768\",",
									"  \"b8532e62-5139-2f83-6a15-10da6cb56bf3\",",
									"  \"7a14758b-99da-b869-9d2b-f287b2e8a47a\",",
									"  \"2760f6d5-0522-d311-2877-b8d99112483e\",",
									"  \"97b90f2f-255e-9262-d0da-7ea24dfaa320\",",
									"  \"8a0f5f79-476a-6f08-3a16-cd8d26ed6923\",",
									"  \"5af67ab6-6d44-2f1b-94d0-23628999330f\",",
									"  \"02f1ab4c-b81f-7d96-34cd-9545b89ec11b\",",
									"  \"10dcebdf-0df7-4b26-4c07-a71bdbbe6c55\"",
									"",
									"    ];",
									"}",
									"",
									"const payor_names = [ ",
									"  \"Aetna\",",
									"  \"Alameda Behavioral Health\",",
									"  \"All Savers\",",
									"  \"AmeriHealth\",",
									"  \"Amida Care\",",
									"  \"Anthem\",",
									"  \"Arkansas Blue Cross and Blue Shield\",",
									"  \"Asuras Northwest Health plan\",",
									"  \"AvMed Health Plan\",",
									"  \"Blue Cross and Blue Shield of Alabama\",",
									"  \"Blue Cross and Blue Shield of Illinois\",",
									"  \"Blue Cross and Blue Shield of Kansas\",",
									"  \"Blue Cross and Blue Shield of Kansas City\",",
									"  \"Blue Cross and Blue Shield of Louisiana\",",
									"  \"Blue Cross and Blue Shield of Minnesota\",",
									"  \"Blue Cross and Blue Shield of Mississippi\",",
									"  \"Blue Cross and Blue Shield of Montana\",",
									"  \"Blue Cross and Blue Shield of Nebraska\",",
									"  \"Blue Cross and Blue Shield of New Mexico\",",
									"  \"Blue Cross and Blue Shield of North Carolina\",",
									"  \"Blue Cross and Blue Shield of Oklahoma\",",
									"  \"Blue Cross and Blue Shield of Rhode Island\",",
									"  \"Blue Cross and Blue Shield of Texas\",",
									"  \"Blue Cross and Blue Shield of Vermont\",",
									"  \"Blue Cross and Blue Shield of Wyoming\",",
									"  \"Blue Cross Blue Shield of Arizona\",",
									"  \"Blue Cross Blue Shield of Massachusetts\",",
									"  \"Blue Cross Blue Shield of Michigan\",",
									"  \"Blue Cross Blue Shield of North Dakota\",",
									"  \"Blue Cross of Idaho Health Service, Inc.\",",
									"  \"Blue Shield of California\",",
									"  \"BlueCross BlueShield of South Carolina\",",
									"  \"BlueCross BlueShield of Tennessee\",",
									"  \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\",",
									"  \"BridgeSpan Health Company\",",
									"  \"Bright Health\",",
									"  \"Capital District Physicians' Health Plan, Inc. (CDPHP)\",",
									"  \"Care N' Care Health Plan\",",
									"  \"CareFirst BCBS\",",
									"  \"CareOregon\",",
									"  \"Centene\",",
									"  \"Cigna\",",
									"  \"Community Care Health Plan\",",
									"  \"Community First Health Plans\",",
									"  \"Community Health Choice, Inc. (CHC)\",",
									"  \"Community Health Group\",",
									"  \"Community Health Plan of Washington (CHPW)\",",
									"  \"ConnectiCare, Inc.\",",
									"  \"Contra Costa Health Plan\",",
									"  \"Cook Children's Health Plan (CCHP)\",",
									"  \"Dean Health Plan\",",
									"  \"Dell Children's Health Plan\",",
									"  \"Driscoll Health Plan\",",
									"  \"El Paso First Health Plans\",",
									"  \"Empire/NYSHIP\",",
									"  \"Excellus BlueCross BlueShield\",",
									"  \"Fallon Health\",",
									"  \"GEHA (Government Employee Health Association)\",",
									"  \"Geisinger Health Plan\",",
									"  \"GHI (Emblem Health)\",",
									"  \"Gold Coast Health Plan\",",
									"  \"Harvard Pilgrim Health Care, Inc.\",",
									"  \"Health Alliance\",",
									"  \"Health New England, Inc.\",",
									"  \"Health Plan of San Joaquin\",",
									"  \"Health Plan of San Mateo\",",
									"  \"HealthCare Management Administrators\",",
									"  \"Healthfirst\",",
									"  \"Highmark BCBS\",",
									"  \"Highmark Health\",",
									"  \"HIP/Emblem Health\",",
									"  \"Horizon Blue Cross Blue Shield of New Jersey\",",
									"  \"Humana\",",
									"  \"Independence Blue Cross\",",
									"  \"Independent Health Association, Inc.\",",
									"  \"Inland Empire Health Plan\",",
									"  \"InnovaCare Health Solutions\",",
									"  \"Kaiser Colorado\",",
									"  \"Kaiser Foundation Health Plan (Northern California)\",",
									"  \"Kaiser Foundation Health Plan (Southern California)\",",
									"  \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\",",
									"  \"Kaiser Foundation Health Plan of Washington\",",
									"  \"Kaiser Georgia\",",
									"  \"Kaiser Hawaii\",",
									"  \"L.A. Care Health Plan\",",
									"  \"Medica\",",
									"  \"Memorial Hermann Health Insurance Company\",",
									"  \"Miami Children’s Health Plan\",",
									"  \"Moda Health\",",
									"  \"Molina Healthcare\",",
									"  \"Neighborhood Health Plan of Rhode Island, Inc.\",",
									"  \"No Insurance\",",
									"  \"Oscar Insurance Corporation\",",
									"  \"Other\",",
									"  \"Oxford\",",
									"  \"PacificSource Health Plans\",",
									"  \"Partnership HealthPlan of California\",",
									"  \"Premera Blue Cross\",",
									"  \"Presbyterian Health Plan\",",
									"  \"Priority Health\",",
									"  \"Providence Health Plan\",",
									"  \"Regence BlueShield\",",
									"  \"San Joaquin County\",",
									"  \"Santa Cruz County\",",
									"  \"SelectHealth\",",
									"  \"Sentara Health Plans, Inc. (fka Optima Health)\",",
									"  \"Sharp Health Plan\",",
									"  \"State of Texas\",",
									"  \"Sutter Health Plus\",",
									"  \"Texas Children's Health Plan\",",
									"  \"Tufts Health Plan\",",
									"  \"UCare\",",
									"  \"UMR\",",
									"  \"UnitedHealthcare\",",
									"  \"UPMC Health Plan\",",
									"  \"ValueCare\",",
									"  \"Ventura Healthplan\",",
									"  \"WEA Trust\",",
									"  \"WellCare Health Plans, Inc.\",",
									"  \"Wellmark Blue Cross and Blue Shield of Iowa\",",
									"  \"Wellmark Blue Cross and Blue Shield of South Dakota\",",
									"  \"Western Health Advantage\"",
									"",
									"];",
									"let patientRelation = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
									"",
									"let statesList = [\"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"];",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"//Coverage Start Date",
									"let coverageStartDate = collectionMethods.randomDate(new Date(), new Date());",
									"let coverageStartDateFormatted = coverageStartDate.getFullYear() + '-' + (\"0\" + (coverageStartDate.getMonth() + 1)).slice(-2) + '-' + (\"0\" + coverageStartDate.getDate()).slice(-2);",
									"",
									"//Coverage End Date",
									"//Add number of days to coverageStartDate to make the coverageEndDate in future",
									"let AddNumberOfDays = 90",
									"let coverageEndDate = coverageStartDate.setDate(coverageStartDate.getDate() + AddNumberOfDays);",
									"let coverageEndDateFormatted = new Date(coverageEndDate).getFullYear() + '-' + (\"0\" + (new Date(coverageEndDate).getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date(coverageEndDate).getDate()).slice(-2);",
									"",
									"let random = Math.floor(Math.random() * payor_names.length);",
									"",
									"pm.environment.set(\"group_id3\", Math.floor(Math.random() * (70 - 10) + 10));",
									"pm.environment.set(\"subscriber_id3\", Math.floor(Math.random() * (70 - 10) + 10));",
									"pm.environment.set(\"alternative_id3\", Math.floor(Math.random() * (70 - 10) + 10));",
									"",
									"pm.environment.set(\"payor_name3\", payor_names[random]);",
									"// pm.environment.set(\"payor_program_name1\", payor_program);",
									"pm.environment.set(\"Coverage3StartDate\", coverageStartDateFormatted);",
									"pm.environment.set(\"Coverage3EndDate\", coverageEndDateFormatted);",
									"pm.environment.set(\"payor_externalid3\", payorExternalids[random]);",
									"pm.environment.set(\"patientState3\", ld.sample(statesList));",
									"pm.environment.set(\"providerServicesPhoneNumber3\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patient_relation3\", ld.sample(patientRelation));",
									"pm.environment.set(\"RelationFirstName3\", firstName);",
									"pm.environment.set(\"RelationLastName3\", lastName);",
									"pm.environment.set(\"RelationDateOfBirth3\", dateOfBirth);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "19785a16-5eeb-45c6-901b-6b65c2cc4145",
								"exec": [
									"var response_text = pm.response.text();",
									"",
									"",
									"pm.environment.set(\"CoverageExternalId3\", response_text);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8473bf82-79d3-4876-bddc-e03d0d4570ca",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payor\": \"{{payor_name3}}\",\n    \"payorProgram\": \"{{payor_program_name3}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{group_id3}}\",\n    \"subscriberId\": \"{{subscriber_id3}}\",\n     \"alternativeId\": \"{{alternative_id3}}\",\n    \"customPayorName\": \"\",\n    \"stateCode\": \"{{patientState3}}\",\n   \"startDate\": \"{{Coverage3StartDate}}\",\n    \"endDate\": \"{{Coverage3EndDate}}\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber3}}\",\n    \"patientRelationToSubscriber\": \"{{patient_relation3}}\",  \n    \"subscriberFirstName\": \"{{RelationFirstName3}}\",\n    \"subscriberLastName\": \"{{RelationLastName3}}\",\n    \"subscriberDateOfBirth\":\"{{RelationDateOfBirth3}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"coverages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get coverage details3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4bc666c3-a95b-443c-a0c6-9017ddc6c0df",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"let exp_response = [",
									" ",
									"    ",
									" {",
									"  ",
									"      \"payor\": \"\" + pm.environment.get(\"payor_name2\") + \"\",",
									"          \"payorExternalId\": \"\" + pm.environment.get(\"payor_externalid2\") +\"\",",
									"        \"coverageExternalId\": \"\" + pm.environment.get(\"CoverageExternalId2\") + \"\",",
									"        \"patientExternalId\": \"\" + pm.environment.get(\"patientId\") + \"\",",
									"        \"subscriberId\": \"\" + pm.environment.get(\"subscriber_id2\") + \"\",",
									"        \"groupId\": \"\" + pm.environment.get(\"group_id2\") + \"\",",
									"        \"stateCode\": \"\"+ pm.environment.get(\"patientState2\") + \"\",",
									"    \"startDate\": \"\"+ pm.environment.get(\"Coverage2StartDate\") + \"\",",
									"        \"endDate\": \"\" + pm.environment.get(\"Coverage2EndDate\") + \"\",",
									" \"providerServicesPhoneNumber\":  \"+1 \" + pm.environment.get(\"providerServicesPhoneNumber2\"),      \"patientRelationToSubscriber\": \"\" + pm.environment.get(\"patient_relation2\") +\"\",",
									"   \"subscriberFirstName\":\"\" + pm.environment.get(\"RelationFirstName2\") + \"\",",
									"    \"subscriberLastName\":\"\" + pm.environment.get(\"RelationLastName2\") + \"\",",
									"    \"subscriberDateOfBirth\":\"\" + pm.environment.get(\"RelationDateOfBirth2\") + \"\",",
									"      \"alternativeId\": \"\"+pm.environment.get(\"alternative_id2\")+\"\",",
									"    \"customPayorName\" : null,",
									"        \"isActive\": true  ",
									"      ",
									"    },",
									"",
									"    {",
									"               \"payor\": \"\" + pm.environment.get(\"payor_name1\") + \"\",",
									"    ",
									"     \"payorExternalId\": \"\" + pm.environment.get(\"payor_externalid1\") +\"\",",
									"        \"coverageExternalId\": \"\" + pm.environment.get(\"coverageExternalId\") + \"\",",
									"        \"patientExternalId\": \"\" + pm.environment.get(\"patientId\") + \"\",",
									"        \"subscriberId\": \"\" + pm.environment.get(\"subscriber_id1\") + \"\",",
									"        \"groupId\": \"\" + pm.environment.get(\"group_id1\") + \"\",",
									"        \"stateCode\": \"\"+ pm.environment.get(\"patientState1\") + \"\",",
									"        \"startDate\": \"\"+ pm.environment.get(\"Coverage1StartDate\") + \"\",",
									"        \"endDate\": \"\" + pm.environment.get(\"Coverage1EndDate\") + \"\",",
									" \"providerServicesPhoneNumber\":  \"+1 \" + pm.environment.get(\"providerServicesPhoneNumber1\") ,        \"patientRelationToSubscriber\": \"\" + pm.environment.get(\"patient_relation1\") +\"\",",
									"    \"subscriberFirstName\":\"\" + pm.environment.get(\"RelationFirstName1\") + \"\",",
									"    \"subscriberLastName\":\"\" + pm.environment.get(\"RelationLastName1\") + \"\",",
									"    \"subscriberDateOfBirth\":\"\" + pm.environment.get(\"RelationDateOfBirth1\") + \"\",",
									"      \"alternativeId\": \"\"+pm.environment.get(\"alternative_id1\")+\"\",",
									"    \"customPayorName\" : \"\",",
									"        \"isActive\": true",
									"    },   ",
									"",
									"       {",
									"        ",
									"",
									"        \"payor\": \"\" + pm.environment.get(\"payor_name3\") + \"\",",
									"        //\"payorProgram\": \"\" + pm.environment.get(\"payor_program_name3\") + \"\",",
									"                \"payorExternalId\": \"\" + pm.environment.get(\"payor_externalid3\") +\"\",",
									"        \"coverageExternalId\": \"\" + pm.environment.get(\"CoverageExternalId3\") + \"\",",
									"        \"patientExternalId\": \"\" + pm.environment.get(\"patientId\") + \"\",",
									"        \"subscriberId\": \"\" + pm.environment.get(\"subscriber_id3\") + \"\",",
									"        \"groupId\": \"\" + pm.environment.get(\"group_id3\") + \"\",",
									"        \"stateCode\": \"\"+ pm.environment.get(\"patientState3\") + \"\",",
									"       \"startDate\": \"\"+ pm.environment.get(\"Coverage3StartDate\") + \"\",",
									"        \"endDate\": \"\" + pm.environment.get(\"Coverage3EndDate\") + \"\",",
									" \"providerServicesPhoneNumber\":  \"+1 \" + pm.environment.get(\"providerServicesPhoneNumber3\"),         \"patientRelationToSubscriber\": \"\" + pm.environment.get(\"patient_relation3\") +\"\",",
									"    \"subscriberFirstName\":\"\" + pm.environment.get(\"RelationFirstName3\") + \"\",",
									"    \"subscriberLastName\":\"\" + pm.environment.get(\"RelationLastName3\") + \"\",",
									"    \"subscriberDateOfBirth\":\"\" + pm.environment.get(\"RelationDateOfBirth3\") + \"\",",
									"     \"alternativeId\": \"\"+pm.environment.get(\"alternative_id3\")+\"\",",
									"    \"customPayorName\" : null,",
									"        \"isActive\": true",
									"    },  ",
									"    ",
									"];  ",
									"",
									"",
									"    ",
									"pm.test(\"Validate response\", function () {",
									"    console.log(\"jsonData: \"+JSON.stringify(jsonData));",
									"    console.log(\"exp_response: \"+JSON.stringify(exp_response).replace(/\\\\/g, ''));",
									"    pm.expect(JSON.stringify(jsonData)).to.eql(JSON.stringify(exp_response).replace(/\\\\/g, ''));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6890cfc8-f4eb-4610-b05d-638743053d3f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b0c7885e-b1b3-4004-890f-89119692afc4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"coverages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get US states",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let usStatesList = [",
									"    {",
									"        \"label\": \"Alaska\",",
									"        \"externalId\": \"AK\"",
									"    },",
									"    {",
									"        \"label\": \"Alabama\",",
									"        \"externalId\": \"AL\"",
									"    },",
									"    {",
									"        \"label\": \"Arizona\",",
									"        \"externalId\": \"AZ\"",
									"    },",
									"    {",
									"        \"label\": \"Arkansas\",",
									"        \"externalId\": \"AR\"",
									"    },",
									"    {",
									"        \"label\": \"California\",",
									"        \"externalId\": \"CA\"",
									"    },",
									"    {",
									"        \"label\": \"Colorado\",",
									"        \"externalId\": \"CO\"",
									"    },",
									"    {",
									"        \"label\": \"Connecticut\",",
									"        \"externalId\": \"CT\"",
									"    },",
									"    {",
									"        \"label\": \"Delaware\",",
									"        \"externalId\": \"DE\"",
									"    },",
									"    {",
									"        \"label\": \"District of Columbia\",",
									"        \"externalId\": \"DC\"",
									"    },",
									"    {",
									"        \"label\": \"Florida\",",
									"        \"externalId\": \"FL\"",
									"    },",
									"    {",
									"        \"label\": \"Georgia\",",
									"        \"externalId\": \"GA\"",
									"    },",
									"    {",
									"        \"label\": \"Hawaii\",",
									"        \"externalId\": \"HI\"",
									"    },",
									"    {",
									"        \"label\": \"Idaho\",",
									"        \"externalId\": \"ID\"",
									"    },",
									"    {",
									"        \"label\": \"Illinois\",",
									"        \"externalId\": \"IL\"",
									"    },",
									"    {",
									"        \"label\": \"Indiana\",",
									"        \"externalId\": \"IN\"",
									"    },",
									"    {",
									"        \"label\": \"Iowa\",",
									"        \"externalId\": \"IA\"",
									"    },",
									"    {",
									"        \"label\": \"Kansas\",",
									"        \"externalId\": \"KS\"",
									"    },",
									"    {",
									"        \"label\": \"Kentucky\",",
									"        \"externalId\": \"KY\"",
									"    },",
									"    {",
									"        \"label\": \"Louisiana\",",
									"        \"externalId\": \"LA\"",
									"    },",
									"    {",
									"        \"label\": \"Maine\",",
									"        \"externalId\": \"ME\"",
									"    },",
									"    {",
									"        \"label\": \"Maryland\",",
									"        \"externalId\": \"MD\"",
									"    },",
									"    {",
									"        \"label\": \"Massachusetts\",",
									"        \"externalId\": \"MA\"",
									"    },",
									"    {",
									"        \"label\": \"Michigan\",",
									"        \"externalId\": \"MI\"",
									"    },",
									"    {",
									"        \"label\": \"Minnesota\",",
									"        \"externalId\": \"MN\"",
									"    },",
									"    {",
									"        \"label\": \"Mississippi\",",
									"        \"externalId\": \"MS\"",
									"    },",
									"    {",
									"        \"label\": \"Missouri\",",
									"        \"externalId\": \"MO\"",
									"    },",
									"    {",
									"        \"label\": \"Montana\",",
									"        \"externalId\": \"MT\"",
									"    },",
									"    {",
									"        \"label\": \"Nebraska\",",
									"        \"externalId\": \"NE\"",
									"    },",
									"    {",
									"        \"label\": \"Nevada\",",
									"        \"externalId\": \"NV\"",
									"    },",
									"    {",
									"        \"label\": \"New Hampshire\",",
									"        \"externalId\": \"NH\"",
									"    },",
									"    {",
									"        \"label\": \"New Jersey\",",
									"        \"externalId\": \"NJ\"",
									"    },",
									"    {",
									"        \"label\": \"New Mexico\",",
									"        \"externalId\": \"NM\"",
									"    },",
									"    {",
									"        \"label\": \"New York\",",
									"        \"externalId\": \"NY\"",
									"    },",
									"    {",
									"        \"label\": \"North Carolina\",",
									"        \"externalId\": \"NC\"",
									"    },",
									"    {",
									"        \"label\": \"North Dakota\",",
									"        \"externalId\": \"ND\"",
									"    },",
									"    {",
									"        \"label\": \"Ohio\",",
									"        \"externalId\": \"OH\"",
									"    },",
									"    {",
									"        \"label\": \"Oklahoma\",",
									"        \"externalId\": \"OK\"",
									"    },",
									"    {",
									"        \"label\": \"Oregon\",",
									"        \"externalId\": \"OR\"",
									"    },",
									"    {",
									"        \"label\": \"Pennsylvania\",",
									"        \"externalId\": \"PA\"",
									"    },",
									"    {",
									"        \"label\": \"Puerto Rico\",",
									"        \"externalId\": \"PR\"",
									"    },",
									"    {",
									"        \"label\": \"Rhode Island\",",
									"        \"externalId\": \"RI\"",
									"    },",
									"    {",
									"        \"label\": \"South Carolina\",",
									"        \"externalId\": \"SC\"",
									"    },",
									"    {",
									"        \"label\": \"South Dakota\",",
									"        \"externalId\": \"SD\"",
									"    },",
									"    {",
									"        \"label\": \"Tennessee\",",
									"        \"externalId\": \"TN\"",
									"    },",
									"    {",
									"        \"label\": \"Texas\",",
									"        \"externalId\": \"TX\"",
									"    },",
									"    {",
									"        \"label\": \"Utah\",",
									"        \"externalId\": \"UT\"",
									"    },",
									"    {",
									"        \"label\": \"Vermont\",",
									"        \"externalId\": \"VT\"",
									"    },",
									"    {",
									"        \"label\": \"Virginia\",",
									"        \"externalId\": \"VA\"",
									"    },",
									"    {",
									"        \"label\": \"Washington\",",
									"        \"externalId\": \"WA\"",
									"    },",
									"    {",
									"        \"label\": \"West Virginia\",",
									"        \"externalId\": \"WV\"",
									"    },",
									"    {",
									"        \"label\": \"Wisconsin\",",
									"        \"externalId\": \"WI\"",
									"    },",
									"    {",
									"        \"label\": \"Wyoming\",",
									"        \"externalId\": \"WY\"",
									"    },",
									"    {",
									"        \"label\": \"Outside US\",",
									"        \"externalId\": \"Outside US\"",
									"    },",
									"    {",
									"        \"label\": \"Unknown\",",
									"        \"externalId\": \"Unknown\"",
									"    }",
									"];",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i][\"label\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"externalId\"]).to.be.a('string');",
									"    }",
									"});",
									"",
									"",
									"pm.test(\"Verify US State values\", function () {",
									"    let ld = require('lodash');",
									"    let expectedSortedOrder = ld.orderBy(usStatesList, ['label'], ['asc']);",
									"    let sortedJsonData = ld.orderBy(jsonData, ['label'], ['asc']);",
									"",
									"    for (i = 0; i < usStatesList.length; i++) {",
									"        tests[\"US State: \" + expectedSortedOrder[i][\"label\"] + \" exists\"] = pm.expect(sortedJsonData[i][\"label\"]).to.be.eql(expectedSortedOrder[i][\"label\"]);",
									"        tests[\"US State acronym: \" + expectedSortedOrder[i][\"externalId\"] + \" exists\"] = pm.expect(sortedJsonData[i][\"externalId\"]).to.be.eql(expectedSortedOrder[i][\"externalId\"]);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "9a3b9f9f-e0f0-4961-88c0-041befcb54ed"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "6ab347e4-94a3-4986-8878-2d29a59c593c"
							}
						}
					],
					"id": "921f52d1-e020-4f76-bbcc-e6c4285259d6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/clinical-data/us-states",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"us-states"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get subscriber relations to patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"let subscriberRelationToPatient = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i].label).to.be.a('string');",
									"        pm.expect(jsonData[i].externalId).to.be.a('string');",
									"    }",
									"});",
									"let ld = require('lodash');",
									"",
									"pm.test(\"Verify subscriber relation to patient values\", function () {",
									"    subscriberRelationToPatient.sort();",
									"    let ld = require('lodash');",
									"    let sortedJsonData = ld.orderBy(jsonData, ['label'], ['asc']);",
									"",
									"    for (i = 0; i < subscriberRelationToPatient.length; i++) {",
									"        tests[\"Subscriber relation To patient: \" + subscriberRelationToPatient[i] + \" exists\"] = pm.expect(sortedJsonData[i].label).eql(subscriberRelationToPatient[i]);",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"id": "5e570be9-19f5-4099-9523-c3b994cdd02a"
							}
						}
					],
					"id": "3e8b715e-b5e9-4ff6-b26b-01268b4ade16",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/clinical-data/coverage-subscriber-relations-to-patient",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"coverage-subscriber-relations-to-patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get payors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee177c90-0c37-4bd9-bc97-a8107bd87bd6",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i][\"label\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"externalId\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"isActive\"]).to.be.a('boolean');",
									"    }",
									"});",
									"",
									"let payorList = [",
									"  {",
									"        \"label\": \"Aetna\",",
									"        \"externalId\": \"3e395a8c-521e-399e-c413-ada8965515da\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Affinity Health Plan\",",
									"        \"externalId\": \"9b2fcd52-eeee-9065-b299-fc4836f83bfc\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"AgeRight Advantage Health Plan\",",
									"        \"externalId\": \"0343b510-f5ef-0cc6-1bf6-dd0c3cd044e6\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"AgeWell New York\",",
									"        \"externalId\": \"24a53322-147a-20b0-9a14-1b23a8924f50\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"AIDS Healthcare Foundation\",",
									"        \"externalId\": \"ac958859-d141-aaa7-47ce-35edb54c2713\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Alameda Alliance for Health\",",
									"        \"externalId\": \"29f91d83-4744-0022-a013-742d993c3c2a\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Alameda Behavioral Health\",",
									"        \"externalId\": \"8de23718-b5f8-dc6b-c079-0e1ccf39c174\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Alignment Health Plan\",",
									"        \"externalId\": \"9b6a8c63-adc5-d34a-f4ca-219325fcd0dc\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"All Savers\",",
									"        \"externalId\": \"0a0d9714-be8b-76a9-6a85-e5446abdfd72\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"AllCare IPA, fka Mid Rogue IPA HealthPlan\",",
									"        \"externalId\": \"738027e6-d570-4c72-f506-87a1a88b4ef7\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"AltaMed PACE\",",
									"        \"externalId\": \"1824eb10-c504-d4dc-65cc-697d23d46454\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"AmeriHealth\",",
									"        \"externalId\": \"1771abe3-0ea6-0da0-b1f2-16543d0c9235\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Amida Care\",",
									"        \"externalId\": \"166ea8c8-7541-b0ac-61d5-3dd4222b28b5\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Anthem\",",
									"        \"externalId\": \"21ee4ad0-5a10-0ef4-67b9-c0e20c44e7c3\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Arkansas Blue Cross and Blue Shield\",",
									"        \"externalId\": \"5921b11f-f1a3-9cc9-bffc-86eea8b431c2\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Aspire Health Plan\",",
									"        \"externalId\": \"b5bb240b-e71b-1704-a343-b976c05a3ef1\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Asuras Northwest Health plan\",",
									"        \"externalId\": \"0a8f0cc7-71d6-c236-f3de-8cdcff0e741a\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Asuris Northwest Health\",",
									"        \"externalId\": \"6d78d422-adbc-e9a0-ff5b-79f2934442af\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Atlanticare LIFE Connection\",",
									"        \"externalId\": \"5162fa95-e74e-2916-3771-ea5e2f59d65b\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"ATRIO Health Plans\",",
									"        \"externalId\": \"5d383e10-8748-0c8b-e9e7-073c52da34e7\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Auxilio Salud Plus\",",
									"        \"externalId\": \"04e0fd1e-3cba-f09d-7c4a-0966b52c9556\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Avera Health Plans, Inc.\",",
									"        \"externalId\": \"85587f25-1f1a-e245-b9ee-e5eb63964612\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"AvMed Health Plan\",",
									"        \"externalId\": \"5c95d9fb-7f38-4062-6502-bacd9a177b22\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\",",
									"        \"externalId\": \"e8be450b-d0ce-ed34-95e7-821871ccf730\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Bienvivir Senior Health Services\",",
									"        \"externalId\": \"4e557e5c-17c2-84c0-7dda-82cd7593fa11\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of Alabama\",",
									"        \"externalId\": \"7113e37e-ff58-ba1e-1cf5-9902d698c232\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of Illinois\",",
									"        \"externalId\": \"649dec3f-910a-6147-a599-bee65689fc93\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of Kansas\",",
									"        \"externalId\": \"87b4ba4b-499d-4119-f35e-8dd9dc1c7c0a\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of Kansas City\",",
									"        \"externalId\": \"8e5b223b-0358-f6aa-a736-1667389f033f\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of Louisiana\",",
									"        \"externalId\": \"d2175acf-d9f5-5490-f9e7-ecfdb2b720bb\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of Minnesota\",",
									"        \"externalId\": \"e201f6f9-346b-d5d9-01dc-7efc817f26f5\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of Mississippi\",",
									"        \"externalId\": \"9295512b-0828-519a-7f6c-76177b977a39\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of Montana\",",
									"        \"externalId\": \"f0aa80ef-2592-2d2a-6cc3-fcd3c2937885\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of Nebraska\",",
									"        \"externalId\": \"ad3a64bf-91c0-57ff-3d5c-86f68e70ef3a\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of New Mexico\",",
									"        \"externalId\": \"d8630164-6c15-2737-bc05-d605746ec9e9\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of North Carolina\",",
									"        \"externalId\": \"6b758c44-bbb3-5932-5290-a1653d5a4edc\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of Oklahoma\",",
									"        \"externalId\": \"88a14513-8064-c579-af9b-2b643226cfbd\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of Rhode Island\",",
									"        \"externalId\": \"8898dbb6-1e8f-3351-f6b6-da85d0af2769\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of Texas\",",
									"        \"externalId\": \"e80cfead-15b8-f4f7-01cd-6ada6f73b727\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of Vermont\",",
									"        \"externalId\": \"c4f14fb2-ef4d-f7d5-6a59-56bfcf1e019f\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross and Blue Shield of Wyoming\",",
									"        \"externalId\": \"4d576ad1-7ea4-31f3-9d18-c8427e96613c\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross Blue Shield of Arizona\",",
									"        \"externalId\": \"158d3862-29da-626b-5fc0-b9d26e99fe16\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross Blue Shield of Massachusetts\",",
									"        \"externalId\": \"ba149d58-9b57-d43e-68ef-7c2512b64706\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross Blue Shield of Michigan\",",
									"        \"externalId\": \"c796b1e8-5a96-1243-8972-81830db39b41\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross Blue Shield of North Dakota\",",
									"        \"externalId\": \"2808e5d0-3238-8e09-2b0e-aa1df1fc4d5e\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Cross of Idaho Health Service, Inc.\",",
									"        \"externalId\": \"71c17385-9ab6-54bc-960d-89723ecc128a\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Blue Shield of California\",",
									"        \"externalId\": \"a9d28970-647a-7fe1-f334-476e8840c05b\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"BlueCross BlueShield of South Carolina\",",
									"        \"externalId\": \"0b0f80af-28d3-45bd-01b3-d94f2752683a\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"BlueCross BlueShield of Tennessee\",",
									"        \"externalId\": \"0ceff77d-a8ba-24aa-9c8a-980fbce8c181\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\",",
									"        \"externalId\": \"6f160c82-f8b6-dad5-35b3-c659cac7bf90\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Brand New Day\",",
									"        \"externalId\": \"c25397d2-4080-5273-b230-122085285f03\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Brandman Centers for Senior Care (BCSC)\",",
									"        \"externalId\": \"285b11eb-9ab5-2c2f-f75d-2b801f33cf46\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"BridgeSpan Health Company\",",
									"        \"externalId\": \"8132da12-e499-767d-4375-0e5069c5d19b\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Bright Health\",",
									"        \"externalId\": \"5548c2e8-8920-104b-b9a6-c9ae02342b04\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"CalOptima\",",
									"        \"externalId\": \"0e0f3757-77cb-bff2-b144-0421fe5ddebf\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"CalViva Health\",",
									"        \"externalId\": \"e9ffde28-cbaa-1ae0-a7b4-d14f119dc9b2\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Capital District Physicians' Health Plan, Inc. (CDPHP)\",",
									"        \"externalId\": \"6cb52ff0-9d4b-6132-2ce4-84d44d0674f2\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Care N' Care Health Plan\",",
									"        \"externalId\": \"0017a4fd-0d32-0156-de21-7d109719af5f\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"CareFirst BCBS\",",
									"        \"externalId\": \"3ec238c1-2327-43a5-48ea-18ae20295ed7\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"CareOregon\",",
									"        \"externalId\": \"6da2522f-bb9c-4230-d013-d4221a1d08e1\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Cascade Health Alliance, LLC\",",
									"        \"externalId\": \"b7cfd159-9a10-30f0-882b-7d1cc3ff2b32\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Catholic Health LIFE\",",
									"        \"externalId\": \"9aceec39-d31a-6fb9-0a63-0a3c42df7080\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"CenCal Health\",",
									"        \"externalId\": \"7b350aa4-53bd-c9c6-6a8a-2d26d1dd0a37\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Centene\",",
									"        \"externalId\": \"b28710ed-3d49-3b34-e212-38d85391c9e1\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Center for Elders Independence\",",
									"        \"externalId\": \"bd48eea4-2d92-3963-8dab-95b926c24fe5\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"CenterLight Healthcare\",",
									"        \"externalId\": \"7bcbf445-b485-0b35-add4-9fb666d55e2f\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Centers for Medicare and Medicaid Services (CMS)\",",
									"        \"externalId\": \"4e3ba1c0-ea9e-b8f6-da77-73cc072d36d2\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Centers Plan for Healthy Living (CPHL)\",",
									"        \"externalId\": \"464baa99-597f-53b3-a070-401459c9802d\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Central California Alliance for Health\",",
									"        \"externalId\": \"9f75cccf-4c48-fe1f-59f7-fce3b9f73e76\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Central Health Plan of California, Inc.\",",
									"        \"externalId\": \"3bf1353e-9ace-7f4d-e25c-926feb16b680\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Chinese Community Health Plan\",",
									"        \"externalId\": \"601b9190-1e56-6593-6ed3-3ac9acf5de9d\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"CHRISTUS Health Plan\",",
									"        \"externalId\": \"979c2655-cc38-6c87-b1a0-b228a369e681\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Cigna\",",
									"        \"externalId\": \"d96346bf-3bd1-cad6-c08b-fc178ed1c493\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Clover Health\",",
									"        \"externalId\": \"b5c9948f-dcf8-93a6-40a9-dece6c7e0e4c\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Community Care Health Plan\",",
									"        \"externalId\": \"c84af9f9-760a-841c-55d4-1176cce14df0\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Community First Health Plans\",",
									"        \"externalId\": \"b1bce313-7550-a084-a8e4-fddfb79c50ee\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Community Health Choice, Inc. (CHC)\",",
									"        \"externalId\": \"3b5f1abf-ecc1-4a29-5c9a-96307b9066cd\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Community Health Group\",",
									"        \"externalId\": \"cbf9b456-2ada-a1a8-c83c-eb32d727d09b\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Community Health Plan of Washington (CHPW)\",",
									"        \"externalId\": \"4a946da6-3548-fccb-6a4c-6a4b7ade0adf\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Complete Senior Care\",",
									"        \"externalId\": \"9140daaa-17d3-388c-da0e-5eace3900dba\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"ConnectiCare, Inc.\",",
									"        \"externalId\": \"17d0a805-747f-e222-4008-6aef21dbca1c\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Consolidated Association of Railroad Employees Health Care (CARE)\",",
									"        \"externalId\": \"4d9410fa-d602-7b71-7c2f-4cb7bbe61fa0\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Contra Costa Health Plan\",",
									"        \"externalId\": \"51eec5ff-02b5-b56a-a2df-e936d8f458ef\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Cook Children's Health Plan (CCHP)\",",
									"        \"externalId\": \"95d4720f-9682-2e69-886a-6aa6ae3010f8\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Crystal Run Health Plans\",",
									"        \"externalId\": \"ac183c90-507c-c6c7-530b-85c40ac629de\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"DAKOTACARE\",",
									"        \"externalId\": \"12bb63ae-dbda-52d3-3e9c-ea8825854e2b\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Dean Health Plan\",",
									"        \"externalId\": \"ba6e4eed-7245-14cc-36bc-089b7eb022f2\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Dell Children's Health Plan\",",
									"        \"externalId\": \"94fbba21-6630-bb25-ae1b-2ffe3e259a3c\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Devoted Health\",",
									"        \"externalId\": \"322d274d-358f-2bde-3fae-66cd76bb5131\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Driscoll Health Plan\",",
									"        \"externalId\": \"069293f9-2970-1107-20a7-c267d4ee2c75\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Eddy SeniorCare\",",
									"        \"externalId\": \"3a5f7a55-3780-57d8-ed18-217faed78158\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"El Paso First Health Plans\",",
									"        \"externalId\": \"1b966e58-e358-68ad-7baf-cf3af7364298\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"ElderONE\",",
									"        \"externalId\": \"74dd14d0-7f0e-bc10-eafe-034842b40f5c\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Elderplan, Inc.\",",
									"        \"externalId\": \"d2943056-1599-a803-7fbf-efdeffa0bfc7\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"EMI Health\",",
									"        \"externalId\": \"6086b2fa-2ace-6105-da0c-3ecbc68dfb51\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Empire/NYSHIP\",",
									"        \"externalId\": \"23fc50c3-2499-ef22-5138-7d3efba331b6\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Excellus BlueCross BlueShield\",",
									"        \"externalId\": \"d8292d3e-2872-bbe0-7ec2-62e281ba8e48\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Fallon Health\",",
									"        \"externalId\": \"e399962f-6470-c2d6-a17c-9e88f46a0a92\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"FamilyHealth Center for Older Adults (PACE)\",",
									"        \"externalId\": \"8ba65606-9f14-e989-68a0-28e801dd8743\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"First Medical Health Plan, Inc.\",",
									"        \"externalId\": \"cfbb83c2-c371-c3f5-971f-955a9eff2f65\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"FirstCare Health Plans\",",
									"        \"externalId\": \"42004ef5-5469-254e-90ce-50bbbc34ad5f\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Fresno PACE for Seniors\",",
									"        \"externalId\": \"e0f42ce1-64df-e79f-ae6a-d7731d51c80e\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Gary and Mary West PACE\",",
									"        \"externalId\": \"a69b3f9d-c490-ab0a-b0eb-3f7295cdf76a\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"GEHA (Government Employee Health Association)\",",
									"        \"externalId\": \"7c883601-97f5-b9c0-6622-d180f5abb237\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Geisinger Health Plan\",",
									"        \"externalId\": \"55a26fd5-45d8-76d2-2878-6ee87835a356\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"GHI (Emblem Health)\",",
									"        \"externalId\": \"957200ee-dfb9-ec80-f158-30d25aaedf4a\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Gold Coast Health Plan\",",
									"        \"externalId\": \"2bff21f9-ed17-62ba-16f9-4ac1a3dc3756\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Golden State Medicare Health Plan\",",
									"        \"externalId\": \"9ce66f04-49c5-e3d6-995a-b07e8dd3b9bf\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Harvard Pilgrim Health Care, Inc.\",",
									"        \"externalId\": \"49401fc5-1579-38ac-be1d-6913cb27792b\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Health Alliance\",",
									"        \"externalId\": \"a7abc99e-4c97-6b41-f836-ba455f00d55b\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Health New England, Inc.\",",
									"        \"externalId\": \"eda43b92-6865-3ae6-b36a-e8d37244829d\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Health Plan of San Joaquin\",",
									"        \"externalId\": \"798b7d74-6b3c-2c2a-8014-953134d9e62a\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Health Plan of San Mateo\",",
									"        \"externalId\": \"2896cdec-ec99-7582-3121-58f76cc9474b\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"HealthCare Management Administrators\",",
									"        \"externalId\": \"8c6c8372-39e7-f059-b9a3-e3e0d5167379\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Healthfirst\",",
									"        \"externalId\": \"d727659f-0d75-72f3-574f-5ae300d40f8a\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Highmark BCBS\",",
									"        \"externalId\": \"14890191-4561-8e7f-015b-74c85f93d1bd\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Highmark Health\",",
									"        \"externalId\": \"58bbd1b6-d3ba-5ddc-f76e-62305c67144b\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"HIP/Emblem Health\",",
									"        \"externalId\": \"218332b0-51aa-8e8c-c215-b3835164c4c1\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Horizon Blue Cross Blue Shield of New Jersey\",",
									"        \"externalId\": \"25599c3e-f84f-ff24-518a-23137741f837\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Humana\",",
									"        \"externalId\": \"2a880b89-199f-edfe-7c54-ec7bb0e564b8\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"ICHS PACE\",",
									"        \"externalId\": \"c7dd2245-17b8-e318-a831-caddcd875d03\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Imperial Health Plan\",",
									"        \"externalId\": \"a33f25ed-7ae6-98ea-cbc1-d4cd1036967b\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Independence Blue Cross\",",
									"        \"externalId\": \"d03c6f2e-027b-006f-e8cb-ecd3e36b21b4\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Independent Health Association, Inc.\",",
									"        \"externalId\": \"6a3b9a74-4ff4-bc62-077e-04b8b9c3947c\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Inland Empire Health Plan\",",
									"        \"externalId\": \"76ba20e4-7b06-1b8f-f46b-bac8d8d0493f\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"InnovaCare Health Solutions\",",
									"        \"externalId\": \"5b96ab81-9e1d-b668-d1c2-50709ae930ab\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"InnovAge\",",
									"        \"externalId\": \"3454a1a3-20d6-ce99-4a8e-82f79a530e0b\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Inspira LIFE\",",
									"        \"externalId\": \"bceda1b9-c26f-d4f1-e3b1-6104c8fb7de4\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Inter Valley Health Plan\",",
									"        \"externalId\": \"8b1862fc-f9c1-4c0e-901b-91aa6d853bb3\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Kaiser Colorado\",",
									"        \"externalId\": \"22d50042-2d59-c3cc-eb83-55051515201f\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Kaiser Foundation Health Plan (Northern California)\",",
									"        \"externalId\": \"3b7d24fc-7878-ff8d-b7a4-ad1f14e92980\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Kaiser Foundation Health Plan (Southern California)\",",
									"        \"externalId\": \"ecede5fb-6ebe-ebca-d0f6-7925c6de930e\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\",",
									"        \"externalId\": \"e37fd416-6b89-c30a-cb24-1e87fa6d864a\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Kaiser Foundation Health Plan of Washington\",",
									"        \"externalId\": \"fe7bccd0-123d-9129-2bcc-91f8822eafbe\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Kaiser Foundation Health Plan, Inc.- Other\",",
									"        \"externalId\": \"7c69925d-4a4b-9f62-5b83-266718fbaf4d\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Kaiser Foundation Health Plan, Inc.- SoCal\",",
									"        \"externalId\": \"83d190e6-b27a-3f93-49e0-39818b67ce82\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Kaiser Georgia\",",
									"        \"externalId\": \"5e53ad01-c0ec-6540-0b8b-1c3ad31c7336\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Kaiser Hawaii\",",
									"        \"externalId\": \"4e655db0-230c-a3ad-662e-c141a0d48d6e\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Kalos Health\",",
									"        \"externalId\": \"090ec465-f898-af35-534c-87fea52e1c91\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"KelseyCare Advantage\",",
									"        \"externalId\": \"2a2d778d-9c20-f0bd-4552-4b683c6c33d8\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Kern Health Systems, Inc.\",",
									"        \"externalId\": \"8cb1c24c-01af-be16-db43-4826612c86f9\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"L.A. Care Health Plan\",",
									"        \"externalId\": \"fcba7519-1795-4569-e4c4-6521bd8549ef\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Lasso Healthcare\",",
									"        \"externalId\": \"e226589b-f5d9-11ef-f6c0-05a9731dd930\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"LIFE at Lourdes, Inc.\",",
									"        \"externalId\": \"1ef8f3d7-3c05-0e70-727a-92eeebd9b475\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"LIFE St. Francis\",",
									"        \"externalId\": \"95dfad88-c046-c396-aa58-5073fd2dc773\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"LifeWise Health Plan of Washington\",",
									"        \"externalId\": \"2118ba01-0081-9c19-3cef-bf700ae94e9d\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Longevity Health Plan\",",
									"        \"externalId\": \"ec1068bc-7a13-1d2c-1926-8cbfe22cd23a\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Lutheran Senior LIFE at Jersey City\",",
									"        \"externalId\": \"37988ea8-84c6-ae8d-6468-b4099b358a28\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Magellan\",",
									"        \"externalId\": \"c61e3fc8-78f8-6a39-37f1-d9bb70a51d49\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"MAPFRE Puerto Rico\",",
									"        \"externalId\": \"ee891461-e022-5ffc-5208-c4c959d50d78\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Medica\",",
									"        \"externalId\": \"db9709a4-9285-589c-e3ca-055c271f6bc7\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Medicaid\",",
									"        \"externalId\": \"0e7a0066-9b4a-86be-2832-96da2216fca8\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Medical Card System, Inc.\",",
									"        \"externalId\": \"13e8cfa5-c421-b599-02b4-768ede0f843e\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Medicare\",",
									"        \"externalId\": \"f46d0b5c-d723-975d-1e55-e3e1bdc7a602\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"MediExcel Health Plan\",",
									"        \"externalId\": \"04231804-8655-0d5f-a51b-157a13b427e8\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Memorial Hermann Health Insurance Company\",",
									"        \"externalId\": \"9c20d0c9-f96c-5711-d161-7b47cde657f5\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"MetroPlus Health Plan, Inc.\",",
									"        \"externalId\": \"73bb3383-ac56-98a4-72e3-b1922b459741\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Miami Children’s Health Plan\",",
									"        \"externalId\": \"71d15488-2355-7198-9913-94af8947e16b\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Moda Health\",",
									"        \"externalId\": \"d7b7bdb7-e89d-7783-194f-7fc424396b25\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Molina Healthcare\",",
									"        \"externalId\": \"cc990363-d368-92b4-1984-329a4dfd0ce8\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Mutual of Omaha Insurance Company\",",
									"        \"externalId\": \"67c111ab-dd0a-16f5-bdd5-c112a7d47dfb\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"MVP Health Care\",",
									"        \"externalId\": \"e99eb140-4f25-35b5-e6eb-7deeb0697dac\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Neighborhood Health Plan of Rhode Island, Inc.\",",
									"        \"externalId\": \"68bae04b-3715-026f-cc57-7948a129fd0b\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"No Insurance\",",
									"        \"externalId\": \"13514748-8b22-c0c4-abc2-744ccac0bd1a\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"NY Hotel Trades Council and Hotel Association of NYC\",",
									"        \"externalId\": \"54aef9d3-2623-b874-30ec-e375f432d1ee\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"On Lok Lifeways\",",
									"        \"externalId\": \"a5e11fb1-25e1-8daf-2f41-619b953c305b\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Optum\",",
									"        \"externalId\": \"65fcf7ca-ff57-72a7-4756-b914bda630df\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Oscar Insurance Corporation\",",
									"        \"externalId\": \"44bedf25-4661-1182-211d-1da66e5f7071\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Other\",",
									"        \"externalId\": \"22f8939f-e2c6-fe4f-fb16-3722a6e6dd0d\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Oxford\",",
									"        \"externalId\": \"3a694823-a761-a630-aa7a-581a8d09ab63\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"PACE CNY\",",
									"        \"externalId\": \"4ab94f03-4e5f-8ad2-0b8e-0e98a8e1830b\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"PacificSource Health Plans\",",
									"        \"externalId\": \"001b3d9b-090e-1ee1-53c5-3b0e6efb2159\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Parkland Community Health Plan\",",
									"        \"externalId\": \"43165551-083b-595a-67e1-d44c3d81777a\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Partners Health Plan\",",
									"        \"externalId\": \"8127ca30-a6af-bf5f-fe81-f5fcd12bf906\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Partnership HealthPlan of California\",",
									"        \"externalId\": \"c0fc2936-0f80-d577-ea9e-0d28cc7040b2\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Physicians Health Plan of Northern Indiana, Inc.\",",
									"        \"externalId\": \"fe05afbb-2db0-d186-3158-a2841cb73093\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Piedmont Community Health Plan\",",
									"        \"externalId\": \"b1e868b1-db31-d7ef-9b82-5d68fcdd8a80\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Plan de Salud Menonita\",",
									"        \"externalId\": \"355b8a70-25a5-8548-89c5-0e220dc98245\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Plan Medico Bella Vista\",",
									"        \"externalId\": \"0eaf8226-a620-bd45-1b9b-f7f489a1adfa\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Premera Blue Cross\",",
									"        \"externalId\": \"287a2bb1-f442-951a-2c38-18ef2bb60b26\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Presbyterian Health Plan\",",
									"        \"externalId\": \"19813cef-c0b4-bcd7-1d1c-d96348d3164b\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Priority Health\",",
									"        \"externalId\": \"ce921aee-b487-eaa0-f494-67791d635cdd\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Private Pay\",",
									"        \"externalId\": \"95ca6536-2c65-6243-c726-746acb05b98f\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"ProCare Advantage\",",
									"        \"externalId\": \"173318cf-1e53-4fd8-8fcf-6e20dc6c810f\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Prominence Health Plan\",",
									"        \"externalId\": \"d1ea553a-a481-f93b-57b1-9d54ea5457e0\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Providence Health Plan\",",
									"        \"externalId\": \"b97caebd-314d-1bce-e04a-21e255613efc\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Redwood Coast PACE\",",
									"        \"externalId\": \"27c0fdc8-1f18-019e-3224-09b61635d0a2\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Regence BlueCross BlueShield of Oregon\",",
									"        \"externalId\": \"d3e41fdb-9ca6-af88-2ebf-f1e684089687\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Regence BlueCross BlueShield of Utah\",",
									"        \"externalId\": \"1980c84d-20ad-9365-a8e8-89946b7b9c4a\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Regence BlueShield\",",
									"        \"externalId\": \"4d1e96a6-69d0-9bf4-0018-434d6b69ad23\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Regence BlueShield of Idaho\",",
									"        \"externalId\": \"f0afb453-a268-2648-35be-1e4e9bd852a8\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"RiverSpring Health\",",
									"        \"externalId\": \"cffd96ff-a5a7-416a-eff9-60f7a24a2bb0\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Ryder Health Plan, Inc.\",",
									"        \"externalId\": \"d3ea5e4f-1d31-b9ac-be87-b6db286a16b0\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Samaritan Health Plans\",",
									"        \"externalId\": \"b10db0e1-726c-de28-6c14-5ed630c9bac8\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"San Diego PACE\",",
									"        \"externalId\": \"67818320-f1c6-5d1a-1ee5-33831c222c8a\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"San Francisco Health Plan (SFHP)\",",
									"        \"externalId\": \"25faa955-2e6c-bee3-5d88-b24b263a2f9f\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"San Joaquin County\",",
									"        \"externalId\": \"1048f774-3126-a2e6-bf90-e4acd19d6366\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Santa Clara County dba Valley Health Plan\",",
									"        \"externalId\": \"79734e4d-c823-f891-1468-ec9b0671d821\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Santa Clara Family Health Plan\",",
									"        \"externalId\": \"0d95fb1e-fb08-ed0c-1017-ad35117a4251\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Santa Cruz County\",",
									"        \"externalId\": \"0f81615a-6522-5a05-8e90-c7e8f06fcc76\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Santa Fe Employe's Hospital Association-Coast Lines\",",
									"        \"externalId\": \"6dd993d5-06fd-9d47-3225-89d7a62a71e6\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"SCAN Health Plan\",",
									"        \"externalId\": \"c10fc3d0-cce8-8dff-88c7-cb789a7a4d27\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Scott and White Health Plan\",",
									"        \"externalId\": \"2fd6a564-adcb-c9d8-8001-04d91d136f63\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Scripps Health Plan\",",
									"        \"externalId\": \"bf1d560d-6aed-eebc-bdb6-298fc59f42f1\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Seaside Health Plan\",",
									"        \"externalId\": \"a003b2b9-c317-6d08-70c0-ac5470f90a6e\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"SelectHealth\",",
									"        \"externalId\": \"a6c8ff4b-a293-66ee-d89d-54db9da1bede\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Sendero Health Plan\",",
									"        \"externalId\": \"d99f436d-7e1f-5f98-7855-8b62f4cd19da\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Senior Whole Health\",",
									"        \"externalId\": \"06503ee0-56cd-1d3e-2a28-ff28d65565d0\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Sentara Health Plans, Inc. (fka Optima Health)\",",
									"        \"externalId\": \"c4dbe960-70ab-3273-25fb-c4b3e0672458\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Sharp Health Plan\",",
									"        \"externalId\": \"6df5a799-0639-ae2f-5e89-15c9fdd3d895\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"SIHO Holding, LLC dba SIHO Insurance Services\",",
									"        \"externalId\": \"1e9f40be-c4ec-a612-e42a-101e7eadf6d2\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Silver Star Health Network\",",
									"        \"externalId\": \"922e99af-b67d-86aa-cdb3-5ab0cb647a88\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"SIMNSA Health Plan\",",
									"        \"externalId\": \"eb9984a7-de4e-fbbf-ece1-3a35507d7f20\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"St. Paul's PACE\",",
									"        \"externalId\": \"537a3e68-32dd-0055-7d21-a1484adde6fe\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Stanford Health Care Advantage\",",
									"        \"externalId\": \"2dac7037-035c-e9a2-525e-3d57f315b8b8\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"State of California\",",
									"        \"externalId\": \"ff426d45-db6d-3f25-afed-1152f646a060\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"State of New Jersey\",",
									"        \"externalId\": \"457c8acd-1923-9878-609c-7ca9bf95f5ad\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"State of New York\",",
									"        \"externalId\": \"8c6d260e-aa82-32b5-59b2-f648ce782347\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"State of Oregon\",",
									"        \"externalId\": \"0a9b49b5-9959-cf15-3338-d730d3d9bb3e\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"State of Texas\",",
									"        \"externalId\": \"3d638c03-2b82-d1ed-420c-e5a7ca88a9eb\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"State of Washington\",",
									"        \"externalId\": \"4753b9e8-4a23-7079-9a7a-0b4fb6b7755f\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Stockton PACE\",",
									"        \"externalId\": \"5f86c4ef-3e05-dc34-a06f-ef76c7458732\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Sunrise Advantage Plan\",",
									"        \"externalId\": \"490a6e1f-7912-034d-92b1-f1f9e3fc78db\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Sutter Health Plus\",",
									"        \"externalId\": \"821cd139-a747-2831-de0a-4d7bc53d9598\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Sutter SeniorCare\",",
									"        \"externalId\": \"a6385039-8816-0fda-15b9-f7a1b3844142\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Texas Children's Health Plan\",",
									"        \"externalId\": \"8eb6945d-6e6d-4c65-f3f5-f546a6b206f1\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\",",
									"        \"externalId\": \"8f242e21-f1c5-6724-10d2-77c078c2963d\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Total Senior Care, Inc.\",",
									"        \"externalId\": \"f09f9244-1bd0-bcc3-e6a7-f925de1ca431\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Triple-S Management Corporation\",",
									"        \"externalId\": \"f463f9bb-e126-ea74-055f-5604ccc6b9a0\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"True Health New Mexico\",",
									"        \"externalId\": \"4229f5f4-5230-a3c8-2fc3-31238c68b99a\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Tufts Health Plan\",",
									"        \"externalId\": \"0091c97c-9a42-c5b5-bf09-019bff28b81a\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"UCare\",",
									"        \"externalId\": \"e195258d-8e66-5235-4c25-186d789a2447\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Umpqua Health Alliance\",",
									"        \"externalId\": \"3419aba2-b6ec-911f-3f20-94655fb379a5\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"UMR\",",
									"        \"externalId\": \"0880111b-bfb1-e886-c5c1-388689c662d4\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Union Pacific Railroad Employes Health Systems (UPREHS)\",",
									"        \"externalId\": \"35edb0a5-7fd3-02b3-5f73-0d20c63b7ca9\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"UnitedHealthcare\",",
									"        \"externalId\": \"fb519ecb-1903-37c1-e8e1-f275797f4332\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Univera Healthcare\",",
									"        \"externalId\": \"cfef1261-21b0-1cee-efa8-202191e1b24b\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"UPMC Health Plan\",",
									"        \"externalId\": \"18b0f15e-1fc3-285f-ac39-89f80e832c46\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"ValueCare\",",
									"        \"externalId\": \"a2761ba3-ebd8-c66c-a0b1-43c0e903b398\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Ventura Healthplan\",",
									"        \"externalId\": \"c3920868-de1b-ef5b-b122-38b3ac826c8e\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"VillageCareMAX\",",
									"        \"externalId\": \"e0eff1f8-fbee-b486-455f-5659daf12cea\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Vitality Health Plan of California\",",
									"        \"externalId\": \"ae562f71-d2f6-0c0d-4d94-4c1e1224a6f6\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"VNSNY CHOICE\",",
									"        \"externalId\": \"7aa6e1dc-7c3d-fbe3-7058-72610dd78339\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"WEA Trust\",",
									"        \"externalId\": \"fe2689f0-38f3-e514-784e-7658b655fb03\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"WellCare Health Plans, Inc.\",",
									"        \"externalId\": \"acb0ce16-dddb-45b9-3337-b15f70e8bd5f\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Wellmark Blue Cross and Blue Shield of Iowa\",",
									"        \"externalId\": \"f308f1d6-d436-3f40-9cef-2d483733424b\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Wellmark Blue Cross and Blue Shield of South Dakota\",",
									"        \"externalId\": \"0ce6a421-b2a1-21f7-d2e0-2ffc91e3b273\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Western Health Advantage\",",
									"        \"externalId\": \"cb29e242-6be5-6847-a618-132e894951e2\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"label\": \"Western Oregon Advanced Health, LLC\",",
									"        \"externalId\": \"17463e82-fffd-0ce5-b290-6e69517be87b\",",
									"        \"isActive\": false",
									"    },",
									"    {",
									"        \"label\": \"Yamhill Community Care Organization\",",
									"        \"externalId\": \"dc88ebe5-aeb4-faec-1dc1-ce8b129257eb\",",
									"        \"isActive\": false",
									"    }",
									"];",
									"",
									"for (i = 0; i < jsonData.length; i++) {",
									"    console.log(jsonData)",
									"",
									"}",
									"pm.test(\"Verify payor name\", function () {",
									"    // payorList.sort();",
									"    // let ld = require('lodash');",
									"    // let sortedJsonData = ld.orderBy(jsonData, ['label'], ['asc']);",
									"",
									"    for (i = 0; i < payorList.length; i++) {",
									"        tests[\"Payor name: \" + payorList[i].label + \" exists\"] = pm.expect(jsonData[i]['label']).to.be.eql(payorList[i].label);",
									"        tests[\"isActive flag: \" + payorList[i].isActive + \" exists\"] = pm.expect(jsonData[i]['isActive']).to.be.eql(payorList[i].isActive);",
									"",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "065befb3-9682-4bd5-a5f3-d9c36e3ca334",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/payors",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"payors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get payor program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "433bd41c-612f-4388-9337-a733d5d7bf8b",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"const payorExternalIds = pm.environment.get(\"payorExternalIds\");",
									"",
									"if (payorExternalIds && payorExternalIds.length > 0) {",
									"    postman.setNextRequest(request.name);",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let payorExternalId = pm.environment.get(\"payorExternalId\");",
									"let payorProgamList;",
									"",
									"if (pm.environment.name === \"qa\") {",
									"    switch (payorExternalId) {",
									"        case '24a53322-147a-20b0-9a14-1b23a8924f50':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'f308f1d6-d436-3f40-9cef-2d483733424b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6cb52ff0-9d4b-6132-2ce4-84d44d0674f2':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd8630164-6c15-2737-bc05-d605746ec9e9':",
									"            payorProgamList = [\"HCSC - SCA\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'ae562f71-d2f6-0c0d-4d94-4c1e1224a6f6':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6d78d422-adbc-e9a0-ff5b-79f2934442af':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6086b2fa-2ace-6105-da0c-3ecbc68dfb51':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd727659f-0d75-72f3-574f-5ae300d40f8a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '7c69925d-4a4b-9f62-5b83-266718fbaf4d':",
									"            payorProgamList = [\"Orange County\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4753b9e8-4a23-7079-9a7a-0b4fb6b7755f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8127ca30-a6af-bf5f-fe81-f5fcd12bf906':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '1980c84d-20ad-9365-a8e8-89946b7b9c4a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c0fc2936-0f80-d577-ea9e-0d28cc7040b2':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Partnership Health Plan\"];",
									"            break;",
									"        case '94fbba21-6630-bb25-ae1b-2ffe3e259a3c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '71c17385-9ab6-54bc-960d-89723ecc128a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '7113e37e-ff58-ba1e-1cf5-9902d698c232':",
									"            payorProgamList = [\"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Private Pay\", \"Project Heal\", \"SCA\"];",
									"            break;",
									"        case 'e195258d-8e66-5235-4c25-186d789a2447':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'ba6e4eed-7245-14cc-36bc-089b7eb022f2':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6a3b9a74-4ff4-bc62-077e-04b8b9c3947c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '95ca6536-2c65-6243-c726-746acb05b98f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '287a2bb1-f442-951a-2c38-18ef2bb60b26':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a9d28970-647a-7fe1-f334-476e8840c05b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"];",
									"            break;",
									"        case 'e8be450b-d0ce-ed34-95e7-821871ccf730':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Beacon - Standard\"];",
									"            break;",
									"        case '51eec5ff-02b5-b56a-a2df-e936d8f458ef':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3419aba2-b6ec-911f-3f20-94655fb379a5':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '25599c3e-f84f-ff24-518a-23137741f837':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Horizon BCBS\"];",
									"            break;",
									"        case 'ba149d58-9b57-d43e-68ef-7c2512b64706':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5b96ab81-9e1d-b668-d1c2-50709ae930ab':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b97caebd-314d-1bce-e04a-21e255613efc':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - Standard\"];",
									"            break;",
									"        case '001b3d9b-090e-1ee1-53c5-3b0e6efb2159':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"PacificSource - Medicaid\", \"PacificSource - Navigator\", \"PacificSource - SmartChoice\", \"PacificSource - Voyager\"];",
									"            break;",
									"        case 'f0aa80ef-2592-2d2a-6cc3-fcd3c2937885':",
									"            payorProgamList = [\"HCSC - SCA\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'f46d0b5c-d723-975d-1e55-e3e1bdc7a602':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3d638c03-2b82-d1ed-420c-e5a7ca88a9eb':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '1ef8f3d7-3c05-0e70-727a-92eeebd9b475':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '95d4720f-9682-2e69-886a-6aa6ae3010f8':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'fe7bccd0-123d-9129-2bcc-91f8822eafbe':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\"];",
									"            break;",
									"        case 'b5c9948f-dcf8-93a6-40a9-dece6c7e0e4c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'cfef1261-21b0-1cee-efa8-202191e1b24b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '74dd14d0-7f0e-bc10-eafe-034842b40f5c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '58bbd1b6-d3ba-5ddc-f76e-62305c67144b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '83d190e6-b27a-3f93-49e0-39818b67ce82':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'bceda1b9-c26f-d4f1-e3b1-6104c8fb7de4':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9aceec39-d31a-6fb9-0a63-0a3c42df7080':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a6385039-8816-0fda-15b9-f7a1b3844142':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd3e41fdb-9ca6-af88-2ebf-f1e684089687':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '1b966e58-e358-68ad-7baf-cf3af7364298':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9c20d0c9-f96c-5711-d161-7b47cde657f5':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5921b11f-f1a3-9cc9-bffc-86eea8b431c2':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '649dec3f-910a-6147-a599-bee65689fc93':",
									"            payorProgamList = [\"HCSC - SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3b5f1abf-ecc1-4a29-5c9a-96307b9066cd':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '76ba20e4-7b06-1b8f-f46b-bac8d8d0493f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0e0f3757-77cb-bff2-b144-0421fe5ddebf':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6dd993d5-06fd-9d47-3225-89d7a62a71e6':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'f463f9bb-e126-ea74-055f-5604ccc6b9a0':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '42004ef5-5469-254e-90ce-50bbbc34ad5f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5548c2e8-8920-104b-b9a6-c9ae02342b04':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0a9b49b5-9959-cf15-3338-d730d3d9bb3e':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd96346bf-3bd1-cad6-c08b-fc178ed1c493':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Cigna\"];",
									"            break;",
									"        case '06503ee0-56cd-1d3e-2a28-ff28d65565d0':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '73bb3383-ac56-98a4-72e3-b1922b459741':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'ce921aee-b487-eaa0-f494-67791d635cdd':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '1e9f40be-c4ec-a612-e42a-101e7eadf6d2':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3454a1a3-20d6-ce99-4a8e-82f79a530e0b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd8292d3e-2872-bbe0-7ec2-62e281ba8e48':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd1ea553a-a481-f93b-57b1-9d54ea5457e0':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e226589b-f5d9-11ef-f6c0-05a9731dd930':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e80cfead-15b8-f4f7-01cd-6ada6f73b727':",
									"            payorProgamList = [\"HCSC - SCA\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2a2d778d-9c20-f0bd-4552-4b683c6c33d8':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '7aa6e1dc-7c3d-fbe3-7058-72610dd78339':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '7bcbf445-b485-0b35-add4-9fb666d55e2f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '44bedf25-4661-1182-211d-1da66e5f7071':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4d9410fa-d602-7b71-7c2f-4cb7bbe61fa0':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '17463e82-fffd-0ce5-b290-6e69517be87b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '537a3e68-32dd-0055-7d21-a1484adde6fe':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'bd48eea4-2d92-3963-8dab-95b926c24fe5':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '922e99af-b67d-86aa-cdb3-5ab0cb647a88':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c4f14fb2-ef4d-f7d5-6a59-56bfcf1e019f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd2175acf-d9f5-5490-f9e7-ecfdb2b720bb':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0b0f80af-28d3-45bd-01b3-d94f2752683a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '67c111ab-dd0a-16f5-bdd5-c112a7d47dfb':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd3ea5e4f-1d31-b9ac-be87-b6db286a16b0':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd99f436d-7e1f-5f98-7855-8b62f4cd19da':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'fcba7519-1795-4569-e4c4-6521bd8549ef':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8898dbb6-1e8f-3351-f6b6-da85d0af2769':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'fe05afbb-2db0-d186-3158-a2841cb73093':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '68bae04b-3715-026f-cc57-7948a129fd0b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '71d15488-2355-7198-9913-94af8947e16b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'ff426d45-db6d-3f25-afed-1152f646a060':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4d1e96a6-69d0-9bf4-0018-434d6b69ad23':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'f0afb453-a268-2648-35be-1e4e9bd852a8':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '490a6e1f-7912-034d-92b1-f1f9e3fc78db':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b10db0e1-726c-de28-6c14-5ed630c9bac8':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6da2522f-bb9c-4230-d013-d4221a1d08e1':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2fd6a564-adcb-c9d8-8001-04d91d136f63':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b7cfd159-9a10-30f0-882b-7d1cc3ff2b32':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '19813cef-c0b4-bcd7-1d1c-d96348d3164b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5d383e10-8748-0c8b-e9e7-073c52da34e7':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c796b1e8-5a96-1243-8972-81830db39b41':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '85587f25-1f1a-e245-b9ee-e5eb63964612':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '54aef9d3-2623-b874-30ec-e375f432d1ee':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e0eff1f8-fbee-b486-455f-5659daf12cea':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5162fa95-e74e-2916-3771-ea5e2f59d65b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b1bce313-7550-a084-a8e4-fddfb79c50ee':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '738027e6-d570-4c72-f506-87a1a88b4ef7':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'ec1068bc-7a13-1d2c-1926-8cbfe22cd23a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '18b0f15e-1fc3-285f-ac39-89f80e832c46':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '13514748-8b22-c0c4-abc2-744ccac0bd1a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\"];",
									"            break;",
									"        case '0343b510-f5ef-0cc6-1bf6-dd0c3cd044e6':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'fe2689f0-38f3-e514-784e-7658b655fb03':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '957200ee-dfb9-ec80-f158-30d25aaedf4a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4e557e5c-17c2-84c0-7dda-82cd7593fa11':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0eaf8226-a620-bd45-1b9b-f7f489a1adfa':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'cfbb83c2-c371-c3f5-971f-955a9eff2f65':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '322d274d-358f-2bde-3fae-66cd76bb5131':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '04231804-8655-0d5f-a51b-157a13b427e8':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c25397d2-4080-5273-b230-122085285f03':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b28710ed-3d49-3b34-e212-38d85391c9e1':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '166ea8c8-7541-b0ac-61d5-3dd4222b28b5':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8b1862fc-f9c1-4c0e-901b-91aa6d853bb3':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'cb29e242-6be5-6847-a618-132e894951e2':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"];",
									"            break;",
									"        case '9f75cccf-4c48-fe1f-59f7-fce3b9f73e76':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'f09f9244-1bd0-bcc3-e6a7-f925de1ca431':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8cb1c24c-01af-be16-db43-4826612c86f9':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c61e3fc8-78f8-6a39-37f1-d9bb70a51d49':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Magellan - Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c84af9f9-760a-841c-55d4-1176cce14df0':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '12bb63ae-dbda-52d3-3e9c-ea8825854e2b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e37fd416-6b89-c30a-cb24-1e87fa6d864a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\"];",
									"            break;",
									"        case '7b350aa4-53bd-c9c6-6a8a-2d26d1dd0a37':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '79734e4d-c823-f891-1468-ec9b0671d821':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a7abc99e-4c97-6b41-f836-ba455f00d55b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4e3ba1c0-ea9e-b8f6-da77-73cc072d36d2':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3bf1353e-9ace-7f4d-e25c-926feb16b680':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '601b9190-1e56-6593-6ed3-3ac9acf5de9d':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9b2fcd52-eeee-9065-b299-fc4836f83bfc':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '457c8acd-1923-9878-609c-7ca9bf95f5ad':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '87b4ba4b-499d-4119-f35e-8dd9dc1c7c0a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '88a14513-8064-c579-af9b-2b643226cfbd':",
									"            payorProgamList = [\"HCSC - SCA\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '43165551-083b-595a-67e1-d44c3d81777a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6df5a799-0639-ae2f-5e89-15c9fdd3d895':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'eda43b92-6865-3ae6-b36a-e8d37244829d':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0880111b-bfb1-e886-c5c1-388689c662d4':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0ceff77d-a8ba-24aa-9c8a-980fbce8c181':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2dac7037-035c-e9a2-525e-3d57f315b8b8':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2896cdec-ec99-7582-3121-58f76cc9474b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'acb0ce16-dddb-45b9-3337-b15f70e8bd5f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '13e8cfa5-c421-b599-02b4-768ede0f843e':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'cbf9b456-2ada-a1a8-c83c-eb32d727d09b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a6c8ff4b-a293-66ee-d89d-54db9da1bede':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c7dd2245-17b8-e318-a831-caddcd875d03':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '25faa955-2e6c-bee3-5d88-b24b263a2f9f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'cc990363-d368-92b4-1984-329a4dfd0ce8':",
									"            payorProgamList = [\"Project Heal\", \"SCA\", \"Private Pay\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b1e868b1-db31-d7ef-9b82-5d68fcdd8a80':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2118ba01-0081-9c19-3cef-bf700ae94e9d':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9b6a8c63-adc5-d34a-f4ca-219325fcd0dc':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '04e0fd1e-3cba-f09d-7c4a-0966b52c9556':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9295512b-0828-519a-7f6c-76177b977a39':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '173318cf-1e53-4fd8-8fcf-6e20dc6c810f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd03c6f2e-027b-006f-e8cb-ecd3e36b21b4':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '95dfad88-c046-c396-aa58-5073fd2dc773':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b5bb240b-e71b-1704-a343-b976c05a3ef1':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4d576ad1-7ea4-31f3-9d18-c8427e96613c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'ad3a64bf-91c0-57ff-3d5c-86f68e70ef3a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3a5f7a55-3780-57d8-ed18-217faed78158':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '1824eb10-c504-d4dc-65cc-697d23d46454':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'cffd96ff-a5a7-416a-eff9-60f7a24a2bb0':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8e5b223b-0358-f6aa-a736-1667389f033f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'dc88ebe5-aeb4-faec-1dc1-ce8b129257eb':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '35edb0a5-7fd3-02b3-5f73-0d20c63b7ca9':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0e7a0066-9b4a-86be-2832-96da2216fca8':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '090ec465-f898-af35-534c-87fea52e1c91':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4a946da6-3548-fccb-6a4c-6a4b7ade0adf':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0091c97c-9a42-c5b5-bf09-019bff28b81a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'bf1d560d-6aed-eebc-bdb6-298fc59f42f1':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'ac183c90-507c-c6c7-530b-85c40ac629de':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0d95fb1e-fb08-ed0c-1017-ad35117a4251':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '14890191-4561-8e7f-015b-74c85f93d1bd':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6b758c44-bbb3-5932-5290-a1653d5a4edc':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '17d0a805-747f-e222-4008-6aef21dbca1c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '37988ea8-84c6-ae8d-6468-b4099b358a28':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd7b7bdb7-e89d-7783-194f-7fc424396b25':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"MODA\"];",
									"            break;",
									"        case '158d3862-29da-626b-5fc0-b9d26e99fe16':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '979c2655-cc38-6c87-b1a0-b228a369e681':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'eb9984a7-de4e-fbbf-ece1-3a35507d7f20':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '21ee4ad0-5a10-0ef4-67b9-c0e20c44e7c3':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c10fc3d0-cce8-8dff-88c7-cb789a7a4d27':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a003b2b9-c317-6d08-70c0-ac5470f90a6e':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e9ffde28-cbaa-1ae0-a7b4-d14f119dc9b2':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '1771abe3-0ea6-0da0-b1f2-16543d0c9235':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2bff21f9-ed17-62ba-16f9-4ac1a3dc3756':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c4dbe960-70ab-3273-25fb-c4b3e0672458':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '464baa99-597f-53b3-a070-401459c9802d':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3e395a8c-521e-399e-c413-ada8965515da':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Aetna\"];",
									"            break;",
									"        case '2a880b89-199f-edfe-7c54-ec7bb0e564b8':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'ee891461-e022-5ffc-5208-c4c959d50d78':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e399962f-6470-c2d6-a17c-9e88f46a0a92':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd2943056-1599-a803-7fbf-efdeffa0bfc7':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '355b8a70-25a5-8548-89c5-0e220dc98245':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a69b3f9d-c490-ab0a-b0eb-3f7295cdf76a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '285b11eb-9ab5-2c2f-f75d-2b801f33cf46':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e201f6f9-346b-d5d9-01dc-7efc817f26f5':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2808e5d0-3238-8e09-2b0e-aa1df1fc4d5e':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a5e11fb1-25e1-8daf-2f41-619b953c305b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'ac958859-d141-aaa7-47ce-35edb54c2713':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '218332b0-51aa-8e8c-c215-b3835164c4c1':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8c6d260e-aa82-32b5-59b2-f648ce782347':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0ce6a421-b2a1-21f7-d2e0-2ffc91e3b273':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3ec238c1-2327-43a5-48ea-18ae20295ed7':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8eb6945d-6e6d-4c65-f3f5-f546a6b206f1':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4229f5f4-5230-a3c8-2fc3-31238c68b99a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '55a26fd5-45d8-76d2-2878-6ee87835a356':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e0f42ce1-64df-e79f-ae6a-d7731d51c80e':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0017a4fd-0d32-0156-de21-7d109719af5f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '821cd139-a747-2831-de0a-4d7bc53d9598':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"];",
									"            break;",
									"        case '3a694823-a761-a630-aa7a-581a8d09ab63':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a33f25ed-7ae6-98ea-cbc1-d4cd1036967b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9140daaa-17d3-388c-da0e-5eace3900dba':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8f242e21-f1c5-6724-10d2-77c078c2963d':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '27c0fdc8-1f18-019e-3224-09b61635d0a2':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '29f91d83-4744-0022-a013-742d993c3c2a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5f86c4ef-3e05-dc34-a06f-ef76c7458732':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '67818320-f1c6-5d1a-1ee5-33831c222c8a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3b7d24fc-7878-ff8d-b7a4-ad1f14e92980':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Kaiser Northern CA - Central Valley\", \"Kaiser Northern CA - Diablo\", \"Kaiser Northern CA - Fresno\", \"Kaiser Northern CA - San Francisco\", \"Kaiser Northern CA - South San Francisco\", \"Kaiser Northern CA - Greater Southern Alameda\", \"Kaiser Northern CA - East Bay\", \"Kaiser Northern CA - Marin/Sonoma\", \"Kaiser Northern CA - Redwood City\", \"Kaiser Northern CA - Roseville\", \"Kaiser Northern CA - Sacramento\", \"Kaiser Northern CA - South Sacramento\", \"Kaiser Northern CA - San Jose\", \"Kaiser Northern CA - Santa Clara\"];",
									"            break;",
									"        case 'e99eb140-4f25-35b5-e6eb-7deeb0697dac':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9ce66f04-49c5-e3d6-995a-b07e8dd3b9bf':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4ab94f03-4e5f-8ad2-0b8e-0e98a8e1830b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6f160c82-f8b6-dad5-35b3-c659cac7bf90':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'fb519ecb-1903-37c1-e8e1-f275797f4332':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"];",
									"            break;",
									"        case '069293f9-2970-1107-20a7-c267d4ee2c75':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '22f8939f-e2c6-fe4f-fb16-3722a6e6dd0d':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8132da12-e499-767d-4375-0e5069c5d19b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '798b7d74-6b3c-2c2a-8014-953134d9e62a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '49401fc5-1579-38ac-be1d-6913cb27792b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8ba65606-9f14-e989-68a0-28e801dd8743':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '65fcf7ca-ff57-72a7-4756-b914bda630df':",
									"            payorProgamList = [\"Optum\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"    }",
									"} else if (pm.environment.name === \"dev\") {",
									"    switch (payorExternalId) {",
									"        case '497718e5-dee7-ce39-a960-db30a57ff064':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8f870f49-e8dd-0337-2aa5-7ac0196be607':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6c8d21c9-112c-29bb-cb39-3031c17edac1':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e1dd302a-b8ba-98ba-e192-aee1c321e629':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '20775037-494d-cb9d-3d4c-ff9ecb2eadef':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'ad26d957-d231-0457-54d6-e0f071eab3b1':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'fabfad30-7656-76bf-8031-882fa18609d5':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0d021e18-9f9a-7c07-e035-ed1c65820201':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4cd5a1ff-7407-4982-e81a-9e5b89d07b04':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'afd0498d-fa43-1db5-7c70-03d0075133aa':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5054af4a-4cdd-65b5-879f-9a14a500a551':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a389019a-67e2-9ed6-42cf-fc778edae229':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'ae120eb4-783d-d12b-1cc0-a27faaa558dd':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'da83815c-e2d3-40d7-e2c8-01e0cd7f74a4':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '15c305e1-82db-3cb0-bc8e-01eb0c9faa29':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'f0058ecb-daf6-401d-119c-e2dc33965c63':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '63c2b49d-40e6-3eaa-6f3b-1037b3039d43':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5fb58801-58b4-9f72-ecaf-60f1999236de':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b4a2448f-5ea3-8246-9e7a-11e95f4338a1':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"];",
									"            break;",
									"        case '8413a34f-262c-5468-be04-4db1e7c66f2d':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\"];",
									"            break;",
									"        case '17059ee6-904b-a5db-9626-9e32c6e7932c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '953178e8-f534-a228-f968-60d3a974a9a1':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '96c499f5-cf38-1c30-38b6-5cd10089e8b7':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c868f532-e2bb-4551-4367-5101d642cc1a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e99586b8-bb31-8343-424e-b2be61e36479':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b3e5f2b5-39ba-dc32-d4b3-d10c42066ae9':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'f909283f-34ef-9970-d1e9-6d302a6e6496':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6d29ab83-0a71-a508-8968-bdbf5cf14fb5':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '1f470ccc-68b6-79d9-f7e2-e61ef653c18c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'f938a618-8dbf-d563-7858-333a7fe5433f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b5a7419c-7224-a65b-b940-75759394b4d0':",
									"            payorProgamList = [\"HCSC - SCA\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd619cf91-882c-712c-42a9-a9cf909bbcdb':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '1ad2cea9-789f-df99-c939-3aea441a687a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '97c356c6-90fc-8b8b-3d7a-46ed87e439c5':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '37567775-9154-07eb-dc80-163144f8902d':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b7f1823a-0953-9225-6bdc-3f9414f356ff':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5be925ae-4d8e-3499-cffb-c805090c5b0e':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3896b81d-ccec-4a05-e3dd-cae42f16453f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e5261244-6ab6-8617-11cf-8cdb64d47e52':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '342587d3-684b-d0e7-5608-9bc7fa3dc024':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3d3dcc62-b833-bd5c-5143-d67a920e34da':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '24a76d7c-4222-d5e4-5187-97641617d1d5':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'df73f571-61a2-c420-94c1-6c1e0ef88418':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8f0419a0-8303-752a-6094-e304360b34a6':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"PacificSource - Medicaid\", \"PacificSource - Navigator\", \"PacificSource - SmartChoice\", \"PacificSource - Voyager\"];",
									"            break;",
									"        case '5bcaf9b1-ce54-6c78-2305-87107fc6be56':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '420d036f-d8ff-31f1-13c6-f0ea7ae2004f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'eccf06c9-8619-50e6-e1e4-b2b121d1b794':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2d51586e-2e4c-a822-f5ac-79687d949531':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3588543a-c32e-4630-5aa3-07565bf5aff3':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4581c883-c030-a270-76c0-48c8d6e6c8d9':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9e05de64-88b4-ef92-f461-2810d2bdcae9':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '418f9afc-9665-a69d-2e2d-90e76b062c1a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '1e6edb88-1e75-96c9-6976-dbd8702ab4c6':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"MODA\"];",
									"            break;",
									"        case 'b67245ac-f0d0-1854-72e5-44ccff0afa35':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a93c50d6-aea1-5d39-164e-3adf8ec87431':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '09a34d91-79ea-d8ca-90e6-ebc01e355eac':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3e5478f3-41f5-702a-3e57-2ddfd5d7bae8':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd8fc2e5c-d3ed-3fc1-2750-c0982d4c82fd':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a0ade096-52ab-fc3e-8347-5dabf4ced886':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a7de2fe9-13ef-52f0-b662-53b7910be768':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"];",
									"            break;",
									"        case '53994cf3-4bc6-7e33-a079-b2da9cfc1233':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3ad62974-129f-5449-95dc-031e978a531b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0e5ce00a-4326-32d0-f433-02a6d62ef957':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '40f1bac9-dc29-61d6-5325-455f14e5d543':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '67e6b5f6-8244-f19e-a759-6fc61cf99c0c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '634a79c4-b0cd-3f42-6a03-092b716005e3':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2e32b236-3de4-8724-b93e-b121ffcdd663':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c8b272f0-9e35-1274-0be1-92048540c4f6':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4cd89fd8-cdca-700f-36b6-25fc67b10c27':",
									"            payorProgamList = [\"Project Heal\", \"SCA\", \"Private Pay\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c82cf87e-e9eb-a65f-1e8d-979b3397a214':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a2745127-1e5e-ddc9-5928-fc684a7f79b2':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0a36d50d-02b3-e36d-51e9-d745e26f94eb':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a65b22c3-36ea-27ff-d573-67f10d3dafff':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e96cf20f-5a39-54c9-17d3-236bed16e51c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9f58e2a8-ddfe-cda2-a844-9b1ed5879037':",
									"            payorProgamList = [\"HCSC - SCA\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6d8afdad-6876-45d8-5dc1-82718bb38910':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9ec17e6b-c45d-1fc3-fad3-6ea63ecdcd5d':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'be5d7b0e-e919-b049-250d-63c0f40b527a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'adf8c833-d476-8edf-6e11-8652365061d9':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '274008f5-1d1d-c2c3-8e6f-ebbf79a21d05':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6aa68889-4ab9-569d-87db-ac1f5c8eea04':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '56391f4e-db3b-1edd-f8d4-5af607d80e36':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '84235458-5076-361d-67d5-c69dbbbbf507':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd4865c06-68cc-46f6-258c-ea75185855fe':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\"];",
									"            break;",
									"        case '038ba477-943d-a75a-0570-29be87cdc493':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6710efef-31ff-4bf0-be7b-efa4e4c8d3e9':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5a95289b-48aa-890e-c16d-90708d0f4ef8':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'ddf96a9b-f1b2-6298-ff96-2300f6a25b5c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5c1f5574-6582-0d89-692b-cf099206d2bf':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'db809b7c-452d-7c69-eda8-7b4aa1ee3625':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a810300d-94a2-5968-3f45-d50e786de84d':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5d5e3fdc-b363-b45c-551c-5e0a2654a218':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '45926898-0110-d28d-172c-e7717da65e88':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '301422fa-a3b7-b13b-012f-ac4d26242ef5':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '30b83a67-482d-4f30-7c04-16f66dc56157':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9f5324a2-7d74-f4fe-b5ee-ecfc2e8959df':",
									"            payorProgamList = [\"HCSC - SCA\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'ad5ceabf-4247-7c20-5a99-44905a0faca5':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6c852a69-85ab-ae65-4abd-b1a278ecc6bb':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9898f740-86c0-0869-beaa-1501a02fb404':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c01f2394-aa8c-1356-7ead-0425e3f05aca':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Horizon BCBS\"];",
									"            break;",
									"        case '1c1ce3de-c780-d727-2128-b96a62d17361':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '13727cf0-b2df-85c3-cfb7-86e7ae85616b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2bd0444b-72c0-6207-8c86-c452fd01b494':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e40713d3-3c8b-072a-ec42-8d3eeced212a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a4e4827b-2a65-eff2-7770-0942c13a5bbb':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '57ebea90-f0bf-5c73-0f3d-67eda0c04b59':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '43a43e5e-33f7-d659-ef54-b25bbdb0bf30':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '88c7c852-b957-f6c7-d261-55a81bae2eb7':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Cigna\"];",
									"            break;",
									"        case '21ea1122-f691-85a1-47ac-e265b58e3d68':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '22f7196c-8e7d-29f3-2d57-a9af25724f3f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'fbb105e4-82d0-3b8f-9a5f-35689bab4f63':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8a0f5f79-476a-6f08-3a16-cd8d26ed6923':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'ec506779-54ae-507c-d190-6cda272f9646':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5340cb8e-9d53-9be5-0af3-02afc24cd06e':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b1f10152-309b-cdb6-a309-d041fc7e39e1':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd9d7e79c-b2e4-e733-a4b6-1153fe6852e9':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '51b8f7cf-4843-8905-c6bc-191da1460a35':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'cb92c686-0ce2-e624-638e-07f221a634ad':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b3e5ed5c-2789-8e18-b949-f5e0a8e49c29':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e92f03f1-6b6d-fff1-acd6-1cdeec6c7729':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4b84b309-081e-4f41-ac45-a2433a8ca0c5':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '88f1903b-33c4-fb54-fbd9-bcc1d6e790df':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4d459557-317b-c0a8-adf9-f90ce4f111e9':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd5a74ed6-70b8-0705-50b3-18e40463e267':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3fe3c7bc-757b-312f-af20-18a426d91a4f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5a68c519-9b49-7e95-833b-84268506b0d1':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8d03afa7-ceea-00be-9e2a-11eb047a0a99':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '42e4d78b-2ada-cf64-0205-215d170aba19':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '77b71493-e1b2-3d35-f26a-c1e0bb895827':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '287d0c0f-11d2-c0c0-09de-b394ac650478':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e3e9ca54-3fe0-3068-2c9e-95022ccfd3a6':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'f9ac8820-9eb6-20d5-92d6-b1d5b7afcec4':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3eab1bc1-edc5-9ea3-22d3-7e94b68f7d81':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd96148ca-2a64-2e76-3abc-6383c98b6698':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b597c39d-7dc2-ec60-84f0-bc6cf3b3f04a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'bb0a2bdc-4a92-6c5e-0ee1-c59896729588':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd142a418-153c-5ce5-8c0b-69613165c5b1':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '58bb7c85-a9dc-f9e5-e160-6819857214ba':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '7a846eb7-7bba-f92b-286d-10f5998eea81':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9db66f8e-345e-3d5d-492e-2e77077b968f':",
									"            payorProgamList = [\"Magellan - Standard\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5137d30b-6ff2-240d-1fc7-8d18d3f5d4fd':",
									"            payorProgamList = [\"Orange County\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2335c152-d13c-6fcb-3162-ab66d6b703d6':",
									"            payorProgamList = [\"Optum\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '72a8dd10-cdd0-8fbf-5859-660a25623f4c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2bc74ad3-29e1-218d-a332-1686e3fe3809':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '21f8f9d6-785a-590a-e1a3-f136a4c1309a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2a1c7092-efdf-0b2e-4260-aa11b0000f49':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '828c09c5-aa47-6a23-bfda-c7c1fecfe063':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"];",
									"            break;",
									"        case 'eb9b7f63-9775-8586-4360-52ce304306ce':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - Standard\"];",
									"            break;",
									"        case '49fbb711-e493-673b-6a81-b258422cfd55':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8e21d58b-b05d-8771-70ee-371ec5555c3f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c1759b51-2dad-68ed-0a74-ff775c1ee678':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4cd50ee2-30f3-3fa5-5ac9-d836d9e6a77e':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'aba32389-2f9a-cbdb-3990-fc51aaa076c2':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6360eeaf-edbe-cd2d-1704-85bb4d9f0db8':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '18938217-5a13-21e4-27f6-f03e0ac5cd57':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9546dc67-aef1-72ab-e340-983bddbcdb77':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Beacon - Standard\"];",
									"            break;",
									"        case '6f918c15-9016-84e3-8c6d-e673e1f44e6f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c99ff236-7f9b-71eb-b610-b79d3365e15a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'ecd84403-8dce-b8ee-787d-3f59282d375e':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'dc0feb71-161f-a80a-9074-2644f9a83e44':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'fc6a1381-b24a-b9cf-18f9-4ba74492015c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '7fdf104b-0872-5f5e-e15e-2230612c93f7':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0f10b4b0-6af6-5c40-8ed2-2105e7a7b3bc':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4b4aef22-7ce9-d5ef-7324-11949696dbf8':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'adee981c-4efd-3ed1-1b1d-324c3df4a6d2':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5634100f-c1f9-d774-7b3b-e890f7156282':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '780f2bcf-3065-13a3-adcf-490e84a49c8a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '266a7f8d-0e10-c7bb-077c-6ac63a5a88af':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '90c28c29-fced-0403-0322-bbe10ae1bcca':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '56e1db12-7e55-01fd-7e3e-ac646787d538':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Aetna\"];",
									"            break;",
									"        case '4c77525d-1212-654b-cf43-3e1fa704c75a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4d85e003-8414-3a00-2975-29feb860ce61':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'df284e79-e50a-e2b6-5c4d-164e1e5d8059':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b57019ec-eda6-1716-3bb7-abb27f54c4fc':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\"];",
									"            break;",
									"        case '02f1ab4c-b81f-7d96-34cd-9545b89ec11b':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'f21d3a9f-d737-3964-56b1-cdeb83ec6baf':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Partnership Health Plan\"];",
									"            break;",
									"        case 'a82aa276-302e-bbe3-ed94-49bd1b0a187a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd0cc155f-a8be-77a1-cb08-175d7ff48a70':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd4a192d6-f056-a0cb-35e1-dece578fcb5f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9298d74f-08cc-a58f-76db-2858befab318':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2558adad-06f4-c397-b87a-0ca9db1d463a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'cee8a51f-79e4-bfad-9e5b-5d770fbfa31e':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '348bfae4-76c0-2f1e-29ac-b83f8649ac08':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'e1dfdcb0-7fb2-1972-cbbf-b92510b739df':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '722f1795-d525-1b80-67b2-e7f756bcad44':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '6cc6c489-0d69-0bd5-4d18-ec799247383d':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'd322bacf-a088-2e8b-f761-bc86d1f3f4ab':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'dcc34dee-b129-27f3-ecb7-653d3d3d37c7':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '788ca11a-6870-d7c2-b45b-07117a4f7da8':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '219df6ae-a750-8e31-9eb1-aef6b3d38ab2':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '135554b1-d5da-ffd2-baf1-1d8e30615f24':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '8eceb97a-f94f-106e-0156-9372e40c952d':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '97b90f2f-255e-9262-d0da-7ea24dfaa320':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '42d50613-677d-34dd-7e74-d6859654418c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '53795161-3e7b-cfda-b414-4380dbe73aab':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5af67ab6-6d44-2f1b-94d0-23628999330f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '556302f6-8391-0008-7fdd-e5e703e1e5e1':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'f284d98f-1d80-0b5f-7052-83ac5faedf7d':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '7c2d8198-2d2d-caab-556e-421d3fdf4231':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '7df9b205-64c7-8a82-e7e4-f426c36da508':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '89f59190-ddd9-1037-9cf0-bf0526c522b3':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '7f2a1331-2a9c-2c0d-55ec-8272114722c7':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2d70a060-62d3-8ecf-9753-3ace4682be87':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '53cfd269-173a-070f-ef9a-6be3f62a077e':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'a5c01c64-1f18-c180-da95-916c6626e920':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '1f78e27c-1656-163f-9272-b8022de03425':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '59935283-a209-4ecc-9790-bfe035560b5a':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '278520a4-15ac-2d17-fb51-9a099e75c5e0':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'eac266f2-5520-142f-15e0-958b88453bf2':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '696d1b2e-4f85-d14c-a208-c4d7d9eb7153':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '79e4fa96-2bde-c033-247c-6f7815df29b0':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2f0a9b51-f311-2416-3b02-46f0876a1f1b':",
									"            payorProgamList = [\"HCSC - SCA\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'b8532e62-5139-2f83-6a15-10da6cb56bf3':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '2caf83f0-8a2c-c622-db70-9faf471094df':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '9c787381-66d3-140c-1c3e-9022add21dc6':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '824338c4-643b-65dc-d500-64b6fe04a7da':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '10dcebdf-0df7-4b26-4c07-a71bdbbe6c55':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"];",
									"            break;",
									"        case 'e714f5a3-1ea5-a87c-a4c0-38e06f8d2dc3':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '3015be5d-ab80-1e91-8897-78f940f91f81':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'eb784ccf-23a5-d0ea-dd6f-61346aa4983f':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'f78c4a3e-b62d-0a84-4f54-823636c226db':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '77b05ed9-9078-9268-2025-eb569370dc27':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '59815314-0a43-0412-9872-0349fcec9a87':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'bccbf46e-674a-9285-2a84-05a38c639418':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '0a41322f-b1a3-0d75-4a6a-0cfe0cbb7584':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case 'c1acf4d0-e787-ab92-fa25-d1dddac56f03':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '5666829b-6619-bc42-4e89-3ab98323f8fc':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '4cc2fdcc-39c5-204e-af17-d371797c8da5':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '653bd3ac-2975-c806-7fa6-ece182481f96':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '764954ff-70e4-805b-7986-6418183d65d0':",
									"            payorProgamList = [\"HCSC - SCA\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '1c50c7cb-df74-8d69-f354-520b27415c3c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '67414e30-57f7-1bd6-b708-f8657fdb85da':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '7c341c51-68aa-c919-821b-672aa406070c':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"];",
									"            break;",
									"        case '7991f244-092e-9c37-6195-67992743e429':",
									"            payorProgamList = [\"Private Pay\", \"Project Heal\", \"SCA\", \"Kaiser Northern CA - Central Valley\", \"Kaiser Northern CA - Diablo\", \"Kaiser Northern CA - Fresno\", \"Kaiser Northern CA - San Francisco\", \"Kaiser Northern CA - South San Francisco\", \"Kaiser Northern CA - Greater Southern Alameda\", \"Kaiser Northern CA - East Bay\", \"Kaiser Northern CA - Marin/Sonoma\", \"Kaiser Northern CA - Redwood City\", \"Kaiser Northern CA - Roseville\", \"Kaiser Northern CA - Sacramento\", \"Kaiser Northern CA - South Sacramento\", \"Kaiser Northern CA - San Jose\", \"Kaiser Northern CA - Santa Clara\"];",
									"            break;",
									"    }",
									"}",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i][\"label\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"externalId\"]).to.be.a('string');",
									"    }",
									"});",
									"",
									"if (jsonData.length > 0) {",
									"    pm.test(\"Verify payor program values\", function () {",
									"        for (i = 0; i < payorProgamList.length; i++) {",
									"            console.log(payorProgamList[i]);",
									"            tests[\"Payor program name: \" + payorProgamList[i] + \" exists\"] = pm.expect(jsonData[i][\"label\"]).to.be.eql(payorProgamList[i]);",
									"        }",
									"    });",
									"} else {",
									"    pm.test(\"Verify payor program values\", () => {",
									"        throw new Error(\"Response is empty\");",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8476d5f2-a18f-42b7-b97a-8900a6aa7744",
								"exec": [
									"let payorExternalIds = pm.environment.get(\"payorExternalIds\");",
									"",
									"if (!payorExternalIds || payorExternalIds.length == \"\") {",
									"    if (pm.environment.name === \"qa\") {",
									"        payorExternalIds = [\"3e395a8c-521e-399e-c413-ada8965515da\", \"e80cfead-15b8-f4f7-01cd-6ada6f73b727\", \"25599c3e-f84f-ff24-518a-23137741f837\", \"d7b7bdb7-e89d-7783-194f-7fc424396b25\", \"cc990363-d368-92b4-1984-329a4dfd0ce8\", \"001b3d9b-090e-1ee1-53c5-3b0e6efb2159\", \"c0fc2936-0f80-d577-ea9e-0d28cc7040b2\", \"b97caebd-314d-1bce-e04a-21e255613efc\", \"4d1e96a6-69d0-9bf4-0018-434d6b69ad23\", \"6df5a799-0639-ae2f-5e89-15c9fdd3d895\", \"22f8939f-e2c6-fe4f-fb16-3722a6e6dd0d\", \"13514748-8b22-c0c4-abc2-744ccac0bd1a\", \"166ea8c8-7541-b0ac-61d5-3dd4222b28b5\", \"5921b11f-f1a3-9cc9-bffc-86eea8b431c2\", \"7113e37e-ff58-ba1e-1cf5-9902d698c232\", \"649dec3f-910a-6147-a599-bee65689fc93\", \"f0aa80ef-2592-2d2a-6cc3-fcd3c2937885\", \"d8630164-6c15-2737-bc05-d605746ec9e9\", \"c796b1e8-5a96-1243-8972-81830db39b41\", \"a9d28970-647a-7fe1-f334-476e8840c05b\", \"0ceff77d-a8ba-24aa-9c8a-980fbce8c181\", \"6f160c82-f8b6-dad5-35b3-c659cac7bf90\", \"5548c2e8-8920-104b-b9a6-c9ae02342b04\", \"6cb52ff0-9d4b-6132-2ce4-84d44d0674f2\", \"0017a4fd-0d32-0156-de21-7d109719af5f\", \"6da2522f-bb9c-4230-d013-d4221a1d08e1\", \"1771abe3-0ea6-0da0-b1f2-16543d0c9235\", \"21ee4ad0-5a10-0ef4-67b9-c0e20c44e7c3\", \"b28710ed-3d49-3b34-e212-38d85391c9e1\", \"d96346bf-3bd1-cad6-c08b-fc178ed1c493\", \"3b7d24fc-7878-ff8d-b7a4-ad1f14e92980\", \"c84af9f9-760a-841c-55d4-1176cce14df0\", \"b1bce313-7550-a084-a8e4-fddfb79c50ee\", \"3b5f1abf-ecc1-4a29-5c9a-96307b9066cd\", \"cbf9b456-2ada-a1a8-c83c-eb32d727d09b\", \"4a946da6-3548-fccb-6a4c-6a4b7ade0adf\", \"17d0a805-747f-e222-4008-6aef21dbca1c\", \"51eec5ff-02b5-b56a-a2df-e936d8f458ef\", \"95d4720f-9682-2e69-886a-6aa6ae3010f8\", \"069293f9-2970-1107-20a7-c267d4ee2c75\", \"1b966e58-e358-68ad-7baf-cf3af7364298\", \"d8292d3e-2872-bbe0-7ec2-62e281ba8e48\", \"e399962f-6470-c2d6-a17c-9e88f46a0a92\", \"55a26fd5-45d8-76d2-2878-6ee87835a356\", \"2bff21f9-ed17-62ba-16f9-4ac1a3dc3756\", \"eda43b92-6865-3ae6-b36a-e8d37244829d\", \"798b7d74-6b3c-2c2a-8014-953134d9e62a\", \"2896cdec-ec99-7582-3121-58f76cc9474b\", \"d727659f-0d75-72f3-574f-5ae300d40f8a\", \"58bbd1b6-d3ba-5ddc-f76e-62305c67144b\", \"6a3b9a74-4ff4-bc62-077e-04b8b9c3947c\", \"76ba20e4-7b06-1b8f-f46b-bac8d8d0493f\", \"5b96ab81-9e1d-b668-d1c2-50709ae930ab\", \"fe7bccd0-123d-9129-2bcc-91f8822eafbe\", \"fcba7519-1795-4569-e4c4-6521bd8549ef\", \"9c20d0c9-f96c-5711-d161-7b47cde657f5\", \"44bedf25-4661-1182-211d-1da66e5f7071\", \"287a2bb1-f442-951a-2c38-18ef2bb60b26\", \"ce921aee-b487-eaa0-f494-67791d635cdd\", \"957200ee-dfb9-ec80-f158-30d25aaedf4a\", \"e37fd416-6b89-c30a-cb24-1e87fa6d864a\", \"d3e41fdb-9ca6-af88-2ebf-f1e684089687\", \"f0afb453-a268-2648-35be-1e4e9bd852a8\", \"c4dbe960-70ab-3273-25fb-c4b3e0672458\", \"821cd139-a747-2831-de0a-4d7bc53d9598\", \"8eb6945d-6e6d-4c65-f3f5-f546a6b206f1\", \"fb519ecb-1903-37c1-e8e1-f275797f4332\", \"acb0ce16-dddb-45b9-3337-b15f70e8bd5f\", \"cb29e242-6be5-6847-a618-132e894951e2\", \"3ec238c1-2327-43a5-48ea-18ae20295ed7\", \"14890191-4561-8e7f-015b-74c85f93d1bd\", \"a7abc99e-4c97-6b41-f836-ba455f00d55b\", \"218332b0-51aa-8e8c-c215-b3835164c4c1\", \"2a880b89-199f-edfe-7c54-ec7bb0e564b8\", \"d03c6f2e-027b-006f-e8cb-ecd3e36b21b4\", \"94fbba21-6630-bb25-ae1b-2ffe3e259a3c\", \"87b4ba4b-499d-4119-f35e-8dd9dc1c7c0a\", \"8e5b223b-0358-f6aa-a736-1667389f033f\", \"d2175acf-d9f5-5490-f9e7-ecfdb2b720bb\", \"e201f6f9-346b-d5d9-01dc-7efc817f26f5\", \"9295512b-0828-519a-7f6c-76177b977a39\", \"ad3a64bf-91c0-57ff-3d5c-86f68e70ef3a\", \"6b758c44-bbb3-5932-5290-a1653d5a4edc\", \"88a14513-8064-c579-af9b-2b643226cfbd\", \"8898dbb6-1e8f-3351-f6b6-da85d0af2769\", \"c4f14fb2-ef4d-f7d5-6a59-56bfcf1e019f\", \"4d576ad1-7ea4-31f3-9d18-c8427e96613c\", \"158d3862-29da-626b-5fc0-b9d26e99fe16\", \"ba149d58-9b57-d43e-68ef-7c2512b64706\", \"2808e5d0-3238-8e09-2b0e-aa1df1fc4d5e\", \"71c17385-9ab6-54bc-960d-89723ecc128a\", \"0b0f80af-28d3-45bd-01b3-d94f2752683a\", \"ba6e4eed-7245-14cc-36bc-089b7eb022f2\", \"71d15488-2355-7198-9913-94af8947e16b\", \"68bae04b-3715-026f-cc57-7948a129fd0b\", \"19813cef-c0b4-bcd7-1d1c-d96348d3164b\", \"1980c84d-20ad-9365-a8e8-89946b7b9c4a\", \"a6c8ff4b-a293-66ee-d89d-54db9da1bede\", \"0091c97c-9a42-c5b5-bf09-019bff28b81a\", \"e195258d-8e66-5235-4c25-186d789a2447\", \"18b0f15e-1fc3-285f-ac39-89f80e832c46\", \"fe2689f0-38f3-e514-784e-7658b655fb03\", \"f308f1d6-d436-3f40-9cef-2d483733424b\", \"0ce6a421-b2a1-21f7-d2e0-2ffc91e3b273\", \"0880111b-bfb1-e886-c5c1-388689c662d4\", \"3a694823-a761-a630-aa7a-581a8d09ab63\", \"49401fc5-1579-38ac-be1d-6913cb27792b\"];",
									"    } else if (pm.environment.name === \"dev\") {",
									"        payorExternalIds = [\"56e1db12-7e55-01fd-7e3e-ac646787d538\", \"7991f244-092e-9c37-6195-67992743e429\", \"9f5324a2-7d74-f4fe-b5ee-ecfc2e8959df\", \"c01f2394-aa8c-1356-7ead-0425e3f05aca\", \"1e6edb88-1e75-96c9-6976-dbd8702ab4c6\", \"4cd89fd8-cdca-700f-36b6-25fc67b10c27\", \"8f0419a0-8303-752a-6094-e304360b34a6\", \"f21d3a9f-d737-3964-56b1-cdeb83ec6baf\", \"eb9b7f63-9775-8586-4360-52ce304306ce\", \"b1f10152-309b-cdb6-a309-d041fc7e39e1\", \"17059ee6-904b-a5db-9626-9e32c6e7932c\", \"e5261244-6ab6-8617-11cf-8cdb64d47e52\", \"b57019ec-eda6-1716-3bb7-abb27f54c4fc\", \"e3e9ca54-3fe0-3068-2c9e-95022ccfd3a6\", \"dc0feb71-161f-a80a-9074-2644f9a83e44\", \"5340cb8e-9d53-9be5-0af3-02afc24cd06e\", \"9f58e2a8-ddfe-cda2-a844-9b1ed5879037\", \"2f0a9b51-f311-2416-3b02-46f0876a1f1b\", \"b5a7419c-7224-a65b-b940-75759394b4d0\", \"3ad62974-129f-5449-95dc-031e978a531b\", \"828c09c5-aa47-6a23-bfda-c7c1fecfe063\", \"5fb58801-58b4-9f72-ecaf-60f1999236de\", \"2d51586e-2e4c-a822-f5ac-79687d949531\", \"59815314-0a43-0412-9872-0349fcec9a87\", \"2caf83f0-8a2c-c622-db70-9faf471094df\", \"8e21d58b-b05d-8771-70ee-371ec5555c3f\", \"9898f740-86c0-0869-beaa-1501a02fb404\", \"e714f5a3-1ea5-a87c-a4c0-38e06f8d2dc3\", \"9298d74f-08cc-a58f-76db-2858befab318\", \"420d036f-d8ff-31f1-13c6-f0ea7ae2004f\", \"135554b1-d5da-ffd2-baf1-1d8e30615f24\", \"e1dfdcb0-7fb2-1972-cbbf-b92510b739df\", \"4d85e003-8414-3a00-2975-29feb860ce61\", \"53994cf3-4bc6-7e33-a079-b2da9cfc1233\", \"7df9b205-64c7-8a82-e7e4-f426c36da508\", \"8d03afa7-ceea-00be-9e2a-11eb047a0a99\", \"cee8a51f-79e4-bfad-9e5b-5d770fbfa31e\", \"63c2b49d-40e6-3eaa-6f3b-1037b3039d43\", \"497718e5-dee7-ce39-a960-db30a57ff064\", \"9e05de64-88b4-ef92-f461-2810d2bdcae9\", \"30b83a67-482d-4f30-7c04-16f66dc56157\", \"a82aa276-302e-bbe3-ed94-49bd1b0a187a\", \"b8532e62-5139-2f83-6a15-10da6cb56bf3\", \"8413a34f-262c-5468-be04-4db1e7c66f2d\", \"ae120eb4-783d-d12b-1cc0-a27faaa558dd\", \"d142a418-153c-5ce5-8c0b-69613165c5b1\", \"2d70a060-62d3-8ecf-9753-3ace4682be87\", \"6c8d21c9-112c-29bb-cb39-3031c17edac1\", \"c8b272f0-9e35-1274-0be1-92048540c4f6\", \"653bd3ac-2975-c806-7fa6-ece182481f96\", \"f0058ecb-daf6-401d-119c-e2dc33965c63\", \"6d29ab83-0a71-a508-8968-bdbf5cf14fb5\", \"e92f03f1-6b6d-fff1-acd6-1cdeec6c7729\", \"3015be5d-ab80-1e91-8897-78f940f91f81\", \"b3e5f2b5-39ba-dc32-d4b3-d10c42066ae9\", \"2558adad-06f4-c397-b87a-0ca9db1d463a\", \"a93c50d6-aea1-5d39-164e-3adf8ec87431\", \"72a8dd10-cdd0-8fbf-5859-660a25623f4c\", \"d4865c06-68cc-46f6-258c-ea75185855fe\", \"5a95289b-48aa-890e-c16d-90708d0f4ef8\", \"6710efef-31ff-4bf0-be7b-efa4e4c8d3e9\", \"266a7f8d-0e10-c7bb-077c-6ac63a5a88af\", \"c1acf4d0-e787-ab92-fa25-d1dddac56f03\", \"84235458-5076-361d-67d5-c69dbbbbf507\", \"038ba477-943d-a75a-0570-29be87cdc493\", \"cb92c686-0ce2-e624-638e-07f221a634ad\", \"418f9afc-9665-a69d-2e2d-90e76b062c1a\", \"53795161-3e7b-cfda-b414-4380dbe73aab\", \"97b90f2f-255e-9262-d0da-7ea24dfaa320\", \"5af67ab6-6d44-2f1b-94d0-23628999330f\", \"02f1ab4c-b81f-7d96-34cd-9545b89ec11b\", \"9c787381-66d3-140c-1c3e-9022add21dc6\", \"96c499f5-cf38-1c30-38b6-5cd10089e8b7\", \"f78c4a3e-b62d-0a84-4f54-823636c226db\", \"ad26d957-d231-0457-54d6-e0f071eab3b1\", \"b4a2448f-5ea3-8246-9e7a-11e95f4338a1\", \"219df6ae-a750-8e31-9eb1-aef6b3d38ab2\", \"a7de2fe9-13ef-52f0-b662-53b7910be768\", \"8a0f5f79-476a-6f08-3a16-cd8d26ed6923\", \"10dcebdf-0df7-4b26-4c07-a71bdbbe6c55\", \"d619cf91-882c-712c-42a9-a9cf909bbcdb\", \"e1dd302a-b8ba-98ba-e192-aee1c321e629\", \"fbb105e4-82d0-3b8f-9a5f-35689bab4f63\", \"88c7c852-b957-f6c7-d261-55a81bae2eb7\", \"6360eeaf-edbe-cd2d-1704-85bb4d9f0db8\", \"5bcaf9b1-ce54-6c78-2305-87107fc6be56\", \"1ad2cea9-789f-df99-c939-3aea441a687a\", \"57ebea90-f0bf-5c73-0f3d-67eda0c04b59\", \"2bd0444b-72c0-6207-8c86-c452fd01b494\", \"a389019a-67e2-9ed6-42cf-fc778edae229\", \"ad5ceabf-4247-7c20-5a99-44905a0faca5\", \"3e5478f3-41f5-702a-3e57-2ddfd5d7bae8\", \"db809b7c-452d-7c69-eda8-7b4aa1ee3625\", \"afd0498d-fa43-1db5-7c70-03d0075133aa\", \"df284e79-e50a-e2b6-5c4d-164e1e5d8059\", \"764954ff-70e4-805b-7986-6418183d65d0\", \"6cc6c489-0d69-0bd5-4d18-ec799247383d\", \"c1759b51-2dad-68ed-0a74-ff775c1ee678\", \"51b8f7cf-4843-8905-c6bc-191da1460a35\", \"8f870f49-e8dd-0337-2aa5-7ac0196be607\", \"77b05ed9-9078-9268-2025-eb569370dc27\", \"fabfad30-7656-76bf-8031-882fa18609d5\", \"287d0c0f-11d2-c0c0-09de-b394ac650478\", \"6f918c15-9016-84e3-8c6d-e673e1f44e6f\", \"90c28c29-fced-0403-0322-bbe10ae1bcca\", \"4cd5a1ff-7407-4982-e81a-9e5b89d07b04\", \"40f1bac9-dc29-61d6-5325-455f14e5d543\"];",
									"    }",
									"}",
									"",
									"let currentPayorExternalId = payorExternalIds.shift();",
									"console.log(currentPayorExternalId)",
									"pm.environment.set(\"payorExternalId\", currentPayorExternalId);",
									"pm.environment.set(\"payorExternalIds\", payorExternalIds);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "88c1d733-4f50-4822-9650-5469deed3367",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/payors/{{payorExternalId}}/payor-programs",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"payors",
								"{{payorExternalId}}",
								"payor-programs"
							]
						}
					},
					"response": []
				}
			],
			"id": "90fd85c3-910d-4964-a190-1a3fd88c1018"
		},
		{
			"name": "Admin episodes",
			"item": [
				{
					"name": "Episode with status-New",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44785b1e-ae14-4d3e-b5cf-e4dad4418526",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "76d8b446-dd58-492d-be18-8342b3ecea03",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "72af42b4-d92d-40c3-ba86-3919911670ff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4621c569-9b48-4128-890e-77c8ab02f320",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let episodeStatusList = [\"New\"];",
											"let treatmentProgramList = [\"Equip treatment\", \"Freeform\"];",
											"let episodeStatusReasonList = [\"Declined - Admin/Equip delay\", \"Declined - Chose HLOC (IOP/PHP/RTC)\", \"Declined - Chose new outpt team\", \"Declined - Continue w current team\", \"Declined - Unknown tx choice\", \"Discharged - AEA - Declined relapse prevention\", \"Discharged - AEA - Inpatient\", \"Discharged - AEA - No care\", \"Discharged - AEA - Outpatient\", \"Discharged - AEA - PHP\", \"Discharged - AEA - RTC\", \"Discharged - Admin - Change in payor\", \"Discharged - Admin - Disengaged\", \"Discharged - Admin - Financial\", \"Discharged - Admin - Ins denial\", \"Discharged - HLOC - IOP\", \"Discharged - HLOC - Inpt med\", \"Discharged - HLOC - Inpt psych\", \"Discharged - HLOC - PHP\", \"Discharged - HLOC - RTC\", \"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\", \"MIA - Lost contact\", \"MIA - No contact\", \"Not eligible - Wrong age\", \"Not eligible - Wrong state\", \"Not qualified - Equip referred to clinical HLOC\", \"Not qualified - Equip referred to medical HLOC\", \"Not qualified - Family unwilling to participate in tx\", \"Not qualified - Financial - Insurance not in-network\", \"Not qualified - Financial - can't afford OOP $\", \"Not qualified - No eating disorder\", \"Not qualified - Not living with family\"];",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let psychClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\",\"Not needed\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let date = collectionMethods.randomDate(new Date(2020, 00, 01), new Date());",
											"let episodeStartDate = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", episodeStartDate);",
											"",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", episodeStartDate);",
											"",
											"pm.environment.set(\"psychClearanceStatus\", ld.sample(psychClearanceStatuses));",
											"pm.environment.set(\"psychClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"psychClearanceCompletedDate\", episodeStartDate);",
											"",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", episodeStartDate);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "01e3e915-425c-482e-ad3f-c5f60b65f5ca",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2db6ff2f-a14b-42a3-bd78-d0472bd54b32",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get episode after add",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9a0577db-6c10-4fda-a7f1-a8df130417c7",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify data type\", function () {",
											"    for (i = 0; i < jsonData.length; i++) {",
											"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.a('number');",
											"        pm.expect(jsonData[i][\"level\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"firstInquiryReferralDate\"]).to.be.a('string');",
											"    }",
											"});",
											"",
											"let expectedResponse = [",
											"    {",
											"        \"patientExternalId\": pm.environment.get(\"patientId\"),",
											"        \"episodeExternalId\": pm.environment.get(\"episodeExternalId\"),",
											"        \"treatmentProgramName\": pm.environment.get(\"cdsTreatmentProgramName\"),",
											"        \"episodeStatus\": pm.environment.get(\"cdsEpisodeStatus\"),",
											"        \"statusReason\": null,",
											"        \"payorName\": null,",
											"        \"payorProgramName\": null,",
											"        \"episodeStartDate\": pm.environment.get(\"cdsEpisodeStartDate\"),",
											"        \"episodeClosedDate\": null,",
											"        \"firstInquiryReferralDate\": pm.environment.get(\"firstInquiryReferralDate\"),",
											"        \"lengthInWeeks\": pm.environment.get(\"cdsLengthInWeeks\"),",
											"        \"level\": pm.environment.get(\"cdsLevel\"),",
											"        \"authorizationDetails\": null,",
											"        \"pausedDetails\": null,",
											"        \"medicalClearance\": {",
											"            \"medicalClearanceStatus\": \"Not ready\",",
											"            \"requestedDate\": null,",
											"            \"completedDate\": null",
											"        },",
											"        \"insuranceVerification\": {",
											"            \"insuranceVerificationStatus\": \"Not ready\",",
											"            \"requestedDate\": null,",
											"            \"completedDate\": null",
											"        },",
											"        \"isPaused\": false,",
											"        \"psychClearance\": {",
											"            \"psychClearanceStatus\": \"Not ready\",",
											"            \"requestedDate\": null,",
											"            \"completedDate\": null",
											"        }",
											"    }",
											"];",
											"",
											"pm.test(\"Verify episode status response\", function () {",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "52362d25-408a-4e27-a31b-72d2e5a59923",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit episode",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e2f333e4-0e78-436d-baac-3d06487256fe",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let episodeStatusList = [\"Assessing\"];",
											"let treatmentProgramList = [\"Equip treatment\", \"Freeform\"];",
											"let episodeStatusReasonList = [\"Declined - Admin/Equip delay\", \"Declined - Chose HLOC (IOP/PHP/RTC)\", \"Declined - Chose new outpt team\", \"Declined - Continue w current team\", \"Declined - Unknown tx choice\", \"Discharged - AEA - Declined relapse prevention\", \"Discharged - AEA - Inpatient\", \"Discharged - AEA - No care\", \"Discharged - AEA - Outpatient\", \"Discharged - AEA - PHP\", \"Discharged - AEA - RTC\", \"Discharged - Admin - Change in payor\", \"Discharged - Admin - Disengaged\", \"Discharged - Admin - Financial\", \"Discharged - Admin - Ins denial\", \"Discharged - HLOC - IOP\", \"Discharged - HLOC - Inpt med\", \"Discharged - HLOC - Inpt psych\", \"Discharged - HLOC - PHP\", \"Discharged - HLOC - RTC\", \"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\", \"MIA - Lost contact\", \"MIA - No contact\", \"Not eligible - Wrong age\", \"Not eligible - Wrong state\", \"Not qualified - Equip referred to clinical HLOC\", \"Not qualified - Equip referred to medical HLOC\", \"Not qualified - Family unwilling to participate in tx\", \"Not qualified - Financial - Insurance not in-network\", \"Not qualified - Financial - can't afford OOP $\", \"Not qualified - No eating disorder\", \"Not qualified - Not living with family\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let date = collectionMethods.randomDate(new Date(2020, 00, 01), new Date());",
											"let episodeStartDate = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", episodeStartDate);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "02edcf12-f9f8-41e8-beb7-cb0d4ac1bf1d",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f8c1fcda-1331-421f-8010-8bff0a17c8b6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes",
										"{{episodeExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get episode after edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bbf45fb5-af09-495e-af42-428259af26fa",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify data type\", function () {",
											"    for (i = 0; i < jsonData.length; i++) {",
											"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.a('number');",
											"        pm.expect(jsonData[i][\"level\"]).to.be.a('string');",
											"    }",
											"});",
											"",
											"let expectedResponse = [",
											"    {",
											"        \"patientExternalId\": pm.environment.get(\"patientId\"),",
											"        \"episodeExternalId\": pm.environment.get(\"episodeExternalId\"),",
											"        \"treatmentProgramName\": pm.environment.get(\"cdsTreatmentProgramName\"),",
											"        \"episodeStatus\": pm.environment.get(\"cdsEpisodeStatus\"),",
											"        \"statusReason\": null,",
											"        \"payorName\": null,",
											"        \"payorProgramName\": null,",
											"        \"episodeStartDate\": pm.environment.get(\"cdsEpisodeStartDate\"),",
											"        \"episodeClosedDate\": null,",
											"        \"firstInquiryReferralDate\": pm.environment.get(\"firstInquiryReferralDate\"),",
											"        \"lengthInWeeks\": pm.environment.get(\"cdsLengthInWeeks\"),",
											"        \"level\": pm.environment.get(\"cdsLevel\"),",
											"        \"authorizationDetails\": null,",
											"        \"pausedDetails\": null,",
											"        \"medicalClearance\": null,",
											"        \"insuranceVerification\": null,",
											"        \"isPaused\": false,",
											"        \"psychClearance\": null",
											"    }",
											"];",
											"",
											"pm.test(\"Verify episode status response\", function () {",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ce3ef643-e21a-4e1d-beff-abbb697df0db",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						}
					],
					"id": "c3642a63-d01d-493e-a8dc-8fdc8db0c7f7"
				},
				{
					"name": "Episode with status-Enrolled",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6688b9a4-e62b-4dd2-9614-98e5cbb020b2",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cc85bbc4-82f6-42ed-b1e3-043849b54bf3",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a9bfcec5-1575-478d-8c70-7f18acf912f7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "025e12dd-4e7b-456b-bcb9-cc1f50ea8e94",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let episodeStatusList = [\"Enrolled\"];",
											"let treatmentProgramList = [\"Equip treatment\", \"Freeform\"];",
											"let episodeStatusReasonList = [\"Declined - Admin/Equip delay\", \"Declined - Chose HLOC (IOP/PHP/RTC)\", \"Declined - Chose new outpt team\", \"Declined - Continue w current team\", \"Declined - Unknown tx choice\", \"Discharged - AEA - Declined relapse prevention\", \"Discharged - AEA - Inpatient\", \"Discharged - AEA - No care\", \"Discharged - AEA - Outpatient\", \"Discharged - AEA - PHP\", \"Discharged - AEA - RTC\", \"Discharged - Admin - Change in payor\", \"Discharged - Admin - Disengaged\", \"Discharged - Admin - Financial\", \"Discharged - Admin - Ins denial\", \"Discharged - HLOC - IOP\", \"Discharged - HLOC - Inpt med\", \"Discharged - HLOC - Inpt psych\", \"Discharged - HLOC - PHP\", \"Discharged - HLOC - RTC\", \"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\", \"MIA - Lost contact\", \"MIA - No contact\", \"Not eligible - Wrong age\", \"Not eligible - Wrong state\", \"Not qualified - Equip referred to clinical HLOC\", \"Not qualified - Equip referred to medical HLOC\", \"Not qualified - Family unwilling to participate in tx\", \"Not qualified - Financial - Insurance not in-network\", \"Not qualified - Financial - can't afford OOP $\", \"Not qualified - No eating disorder\", \"Not qualified - Not living with family\"];",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let date = collectionMethods.randomDate(new Date(2020, 00, 01), new Date());",
											"let episodeStartDate = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", episodeStartDate);",
											"",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", episodeStartDate);",
											"",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", episodeStartDate);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f2e51fde-6962-4307-acbc-702b88c69ec3",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "64cc98de-4cb3-4825-8050-4c4652477e08",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get episode after add",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c23691ce-5fa6-4f12-99de-f48459145c0c",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify data type\", function () {",
											"    for (i = 0; i < jsonData.length; i++) {",
											"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.a('number');",
											"        pm.expect(jsonData[i][\"level\"]).to.be.a('string');",
											"    }",
											"});",
											"",
											"let expectedResponse = [",
											"    {",
											"        \"patientExternalId\": pm.environment.get(\"patientId\"),",
											"        \"episodeExternalId\": pm.environment.get(\"episodeExternalId\"),",
											"        \"treatmentProgramName\": pm.environment.get(\"cdsTreatmentProgramName\"),",
											"        \"episodeStatus\": pm.environment.get(\"cdsEpisodeStatus\"),",
											"        \"statusReason\": null,",
											"        \"payorName\": null,",
											"        \"payorProgramName\": null,",
											"        \"episodeStartDate\": pm.environment.get(\"cdsEpisodeStartDate\"),",
											"        \"episodeClosedDate\": null,",
											"        \"firstInquiryReferralDate\": pm.environment.get(\"firstInquiryReferralDate\"),",
											"        \"lengthInWeeks\": pm.environment.get(\"cdsLengthInWeeks\"),",
											"        \"level\": pm.environment.get(\"cdsLevel\"),",
											"        \"authorizationDetails\": null,",
											"        \"pausedDetails\": null,",
											"        \"medicalClearance\": {",
											"            \"medicalClearanceStatus\": \"Not ready\",",
											"            \"requestedDate\": null,",
											"            \"completedDate\": null",
											"        },",
											"        \"insuranceVerification\": {",
											"            \"insuranceVerificationStatus\": \"Not ready\",",
											"            \"requestedDate\": null,",
											"            \"completedDate\": null",
											"        },",
											"        \"isPaused\": false,",
											"        \"psychClearance\": {",
											"            \"psychClearanceStatus\": \"Not ready\",",
											"            \"requestedDate\": null,",
											"            \"completedDate\": null",
											"        }",
											"    }",
											"];",
											"",
											"pm.test(\"Verify episode status response\", function () {",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5e7e0f23-a151-48af-b729-715889691ce3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit episode",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "df724c0e-2351-48fa-83d4-46e182517cc7",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let episodeStatusList = [\"New\"];",
											"let treatmentProgramList = [\"Equip treatment\", \"Freeform\"];",
											"let episodeStatusReasonList = [\"Declined - Admin/Equip delay\", \"Declined - Chose HLOC (IOP/PHP/RTC)\", \"Declined - Chose new outpt team\", \"Declined - Continue w current team\", \"Declined - Unknown tx choice\", \"Discharged - AEA - Declined relapse prevention\", \"Discharged - AEA - Inpatient\", \"Discharged - AEA - No care\", \"Discharged - AEA - Outpatient\", \"Discharged - AEA - PHP\", \"Discharged - AEA - RTC\", \"Discharged - Admin - Change in payor\", \"Discharged - Admin - Disengaged\", \"Discharged - Admin - Financial\", \"Discharged - Admin - Ins denial\", \"Discharged - HLOC - IOP\", \"Discharged - HLOC - Inpt med\", \"Discharged - HLOC - Inpt psych\", \"Discharged - HLOC - PHP\", \"Discharged - HLOC - RTC\", \"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\", \"MIA - Lost contact\", \"MIA - No contact\", \"Not eligible - Wrong age\", \"Not eligible - Wrong state\", \"Not qualified - Equip referred to clinical HLOC\", \"Not qualified - Equip referred to medical HLOC\", \"Not qualified - Family unwilling to participate in tx\", \"Not qualified - Financial - Insurance not in-network\", \"Not qualified - Financial - can't afford OOP $\", \"Not qualified - No eating disorder\", \"Not qualified - Not living with family\"];",
											"let randomLengthInWeeks = Math.floor(1 + Math.random() * 10);",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let date = collectionMethods.randomDate(new Date(2020, 00, 01), new Date());",
											"let episodeStartDate = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", episodeStartDate);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bb852980-5fe8-4341-a826-7fd43927cd7b",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"// pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9ec97721-8aaf-42bd-bccc-5df8fa18a079",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes",
										"{{episodeExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get episode after edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c409c2b9-56bd-46fc-b5bd-e7b40df450da",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify data type\", function () {",
											"    for (i = 0; i < jsonData.length; i++) {",
											"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.a('number');",
											"        pm.expect(jsonData[i][\"level\"]).to.be.a('string');",
											"    }",
											"});",
											"",
											"pm.test(\"Verify episode status values\", function () {",
											"    for (i = 0; i < jsonData.length; i++) {",
											"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.eql(pm.environment.get(\"patientId\"));",
											"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.eql(pm.environment.get(\"episodeExternalId\"));",
											"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.eql(pm.environment.get(\"cdsTreatmentProgramName\"));",
											"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStatus\"));",
											"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStartDate\"));",
											"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.eql(pm.environment.get(\"cdsLengthInWeeks\"));",
											"        pm.expect(jsonData[i][\"level\"]).to.be.eql(pm.environment.get(\"cdsLevel\"));",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "eb6feef5-b99f-4db5-be01-0d76383aff63",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						}
					],
					"id": "04f0236b-e1ea-4c66-a663-07af8946e866"
				},
				{
					"name": "Episode with AuthDetails",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d227007-4c83-472f-b43a-b96755ffa7d2",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bb3d2da5-60a7-4e9c-a0af-609054a203cc",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6e3177e1-f534-4c7e-b82d-725299303531",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add coverage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "95215a34-9e0b-4d41-bdc1-1e25879721d6",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"var payorExternalids;",
											"",
											"if (pm.environment.name === \"qa\") {",
											"    payorExternalids = [",
											"      ",
											"  \"3e395a8c-521e-399e-c413-ada8965515da\",",
											"  \"1771abe3-0ea6-0da0-b1f2-16543d0c9235\",",
											"  \"166ea8c8-7541-b0ac-61d5-3dd4222b28b5\",",
											"  \"21ee4ad0-5a10-0ef4-67b9-c0e20c44e7c3\",",
											"  \"5921b11f-f1a3-9cc9-bffc-86eea8b431c2\",",
											"  \"7113e37e-ff58-ba1e-1cf5-9902d698c232\",",
											"  \"649dec3f-910a-6147-a599-bee65689fc93\",",
											"  \"87b4ba4b-499d-4119-f35e-8dd9dc1c7c0a\",",
											"  \"8e5b223b-0358-f6aa-a736-1667389f033f\",",
											"  \"d2175acf-d9f5-5490-f9e7-ecfdb2b720bb\",",
											"  \"e201f6f9-346b-d5d9-01dc-7efc817f26f5\",",
											"  \"9295512b-0828-519a-7f6c-76177b977a39\",",
											"  \"f0aa80ef-2592-2d2a-6cc3-fcd3c2937885\",",
											"  \"ad3a64bf-91c0-57ff-3d5c-86f68e70ef3a\",",
											"  \"d8630164-6c15-2737-bc05-d605746ec9e9\",",
											"  \"6b758c44-bbb3-5932-5290-a1653d5a4edc\",",
											"  \"88a14513-8064-c579-af9b-2b643226cfbd\",",
											"  \"8898dbb6-1e8f-3351-f6b6-da85d0af2769\",",
											"  \"e80cfead-15b8-f4f7-01cd-6ada6f73b727\",",
											"  \"c4f14fb2-ef4d-f7d5-6a59-56bfcf1e019f\",",
											"  \"4d576ad1-7ea4-31f3-9d18-c8427e96613c\",",
											"  \"158d3862-29da-626b-5fc0-b9d26e99fe16\",",
											"  \"ba149d58-9b57-d43e-68ef-7c2512b64706\",",
											"  \"c796b1e8-5a96-1243-8972-81830db39b41\",",
											"  \"2808e5d0-3238-8e09-2b0e-aa1df1fc4d5e\",",
											"  \"71c17385-9ab6-54bc-960d-89723ecc128a\",",
											"  \"a9d28970-647a-7fe1-f334-476e8840c05b\",",
											"  \"0b0f80af-28d3-45bd-01b3-d94f2752683a\",",
											"  \"0ceff77d-a8ba-24aa-9c8a-980fbce8c181\",",
											"  \"6f160c82-f8b6-dad5-35b3-c659cac7bf90\",",
											"  \"5548c2e8-8920-104b-b9a6-c9ae02342b04\",",
											"  \"6cb52ff0-9d4b-6132-2ce4-84d44d0674f2\",",
											"  \"0017a4fd-0d32-0156-de21-7d109719af5f\",",
											"  \"3ec238c1-2327-43a5-48ea-18ae20295ed7\",",
											"  \"6da2522f-bb9c-4230-d013-d4221a1d08e1\",",
											"  \"b28710ed-3d49-3b34-e212-38d85391c9e1\",",
											"  \"d96346bf-3bd1-cad6-c08b-fc178ed1c493\",",
											"  \"c84af9f9-760a-841c-55d4-1176cce14df0\",",
											"  \"b1bce313-7550-a084-a8e4-fddfb79c50ee\",",
											"  \"3b5f1abf-ecc1-4a29-5c9a-96307b9066cd\",",
											"  \"cbf9b456-2ada-a1a8-c83c-eb32d727d09b\",",
											"  \"4a946da6-3548-fccb-6a4c-6a4b7ade0adf\",",
											"  \"17d0a805-747f-e222-4008-6aef21dbca1c\",",
											"  \"51eec5ff-02b5-b56a-a2df-e936d8f458ef\",",
											"  \"95d4720f-9682-2e69-886a-6aa6ae3010f8\",",
											"  \"ba6e4eed-7245-14cc-36bc-089b7eb022f2\",",
											"  \"94fbba21-6630-bb25-ae1b-2ffe3e259a3c\",",
											"  \"069293f9-2970-1107-20a7-c267d4ee2c75\",",
											"  \"1b966e58-e358-68ad-7baf-cf3af7364298\",",
											"  \"d8292d3e-2872-bbe0-7ec2-62e281ba8e48\",",
											"  \"e399962f-6470-c2d6-a17c-9e88f46a0a92\",",
											"  \"55a26fd5-45d8-76d2-2878-6ee87835a356\",",
											"  \"957200ee-dfb9-ec80-f158-30d25aaedf4a\",",
											"  \"2bff21f9-ed17-62ba-16f9-4ac1a3dc3756\",",
											"  \"49401fc5-1579-38ac-be1d-6913cb27792b\",",
											"  \"a7abc99e-4c97-6b41-f836-ba455f00d55b\",",
											"  \"eda43b92-6865-3ae6-b36a-e8d37244829d\",",
											"  \"798b7d74-6b3c-2c2a-8014-953134d9e62a\",",
											"  \"2896cdec-ec99-7582-3121-58f76cc9474b\",",
											"  \"d727659f-0d75-72f3-574f-5ae300d40f8a\",",
											"  \"14890191-4561-8e7f-015b-74c85f93d1bd\",",
											"  \"58bbd1b6-d3ba-5ddc-f76e-62305c67144b\",",
											"  \"218332b0-51aa-8e8c-c215-b3835164c4c1\",",
											"  \"25599c3e-f84f-ff24-518a-23137741f837\",",
											"  \"2a880b89-199f-edfe-7c54-ec7bb0e564b8\",",
											"  \"d03c6f2e-027b-006f-e8cb-ecd3e36b21b4\",",
											"  \"6a3b9a74-4ff4-bc62-077e-04b8b9c3947c\",",
											"  \"76ba20e4-7b06-1b8f-f46b-bac8d8d0493f\",",
											"  \"5b96ab81-9e1d-b668-d1c2-50709ae930ab\",",
											"  \"3b7d24fc-7878-ff8d-b7a4-ad1f14e92980\",",
											"  \"e37fd416-6b89-c30a-cb24-1e87fa6d864a\",",
											"  \"fe7bccd0-123d-9129-2bcc-91f8822eafbe\",",
											"  \"fcba7519-1795-4569-e4c4-6521bd8549ef\",",
											"  \"9c20d0c9-f96c-5711-d161-7b47cde657f5\",",
											"  \"71d15488-2355-7198-9913-94af8947e16b\",",
											"  \"d7b7bdb7-e89d-7783-194f-7fc424396b25\",",
											"  \"cc990363-d368-92b4-1984-329a4dfd0ce8\",",
											"  \"68bae04b-3715-026f-cc57-7948a129fd0b\",",
											"  \"13514748-8b22-c0c4-abc2-744ccac0bd1a\",",
											"  \"44bedf25-4661-1182-211d-1da66e5f7071\",",
											"  \"22f8939f-e2c6-fe4f-fb16-3722a6e6dd0d\",",
											"  \"3a694823-a761-a630-aa7a-581a8d09ab63\",",
											"  \"001b3d9b-090e-1ee1-53c5-3b0e6efb2159\",",
											"  \"c0fc2936-0f80-d577-ea9e-0d28cc7040b2\",",
											"  \"287a2bb1-f442-951a-2c38-18ef2bb60b26\",",
											"  \"19813cef-c0b4-bcd7-1d1c-d96348d3164b\",",
											"  \"ce921aee-b487-eaa0-f494-67791d635cdd\",",
											"  \"b97caebd-314d-1bce-e04a-21e255613efc\",",
											"  \"d3e41fdb-9ca6-af88-2ebf-f1e684089687\",",
											"  \"1980c84d-20ad-9365-a8e8-89946b7b9c4a\",",
											"  \"4d1e96a6-69d0-9bf4-0018-434d6b69ad23\",",
											"  \"f0afb453-a268-2648-35be-1e4e9bd852a8\",",
											"  \"a6c8ff4b-a293-66ee-d89d-54db9da1bede\",",
											"  \"c4dbe960-70ab-3273-25fb-c4b3e0672458\",",
											"  \"6df5a799-0639-ae2f-5e89-15c9fdd3d895\",",
											"  \"821cd139-a747-2831-de0a-4d7bc53d9598\",",
											"  \"8eb6945d-6e6d-4c65-f3f5-f546a6b206f1\",",
											"  \"0091c97c-9a42-c5b5-bf09-019bff28b81a\",",
											"  \"e195258d-8e66-5235-4c25-186d789a2447\",",
											"  \"0880111b-bfb1-e886-c5c1-388689c662d4\",",
											"  \"fb519ecb-1903-37c1-e8e1-f275797f4332\",",
											"  \"18b0f15e-1fc3-285f-ac39-89f80e832c46\",",
											"  \"fe2689f0-38f3-e514-784e-7658b655fb03\",",
											"  \"acb0ce16-dddb-45b9-3337-b15f70e8bd5f\",",
											"  \"f308f1d6-d436-3f40-9cef-2d483733424b\",",
											"  \"0ce6a421-b2a1-21f7-d2e0-2ffc91e3b273\",",
											"  \"cb29e242-6be5-6847-a618-132e894951e2\"",
											"]",
											"    ",
											"} else if (pm.environment.name === \"dev\") {",
											"    payorExternalids = [",
											"        \"56e1db12-7e55-01fd-7e3e-ac646787d538\", \"7991f244-092e-9c37-6195-67992743e429\", \"9f5324a2-7d74-f4fe-b5ee-ecfc2e8959df\", \"c01f2394-aa8c-1356-7ead-0425e3f05aca\", \"1e6edb88-1e75-96c9-6976-dbd8702ab4c6\", \"4cd89fd8-cdca-700f-36b6-25fc67b10c27\", \"8f0419a0-8303-752a-6094-e304360b34a6\", \"f21d3a9f-d737-3964-56b1-cdeb83ec6baf\", \"eb9b7f63-9775-8586-4360-52ce304306ce\", \"b1f10152-309b-cdb6-a309-d041fc7e39e1\", \"17059ee6-904b-a5db-9626-9e32c6e7932c\", \"e5261244-6ab6-8617-11cf-8cdb64d47e52\", \"b57019ec-eda6-1716-3bb7-abb27f54c4fc\", \"e3e9ca54-3fe0-3068-2c9e-95022ccfd3a6\", \"dc0feb71-161f-a80a-9074-2644f9a83e44\", \"5340cb8e-9d53-9be5-0af3-02afc24cd06e\", \"9f58e2a8-ddfe-cda2-a844-9b1ed5879037\", \"2f0a9b51-f311-2416-3b02-46f0876a1f1b\", \"b5a7419c-7224-a65b-b940-75759394b4d0\", \"3ad62974-129f-5449-95dc-031e978a531b\", \"828c09c5-aa47-6a23-bfda-c7c1fecfe063\", \"5fb58801-58b4-9f72-ecaf-60f1999236de\", \"2d51586e-2e4c-a822-f5ac-79687d949531\", \"59815314-0a43-0412-9872-0349fcec9a87\", \"2caf83f0-8a2c-c622-db70-9faf471094df\", \"8e21d58b-b05d-8771-70ee-371ec5555c3f\", \"9898f740-86c0-0869-beaa-1501a02fb404\", \"e714f5a3-1ea5-a87c-a4c0-38e06f8d2dc3\", \"9298d74f-08cc-a58f-76db-2858befab318\", \"420d036f-d8ff-31f1-13c6-f0ea7ae2004f\", \"135554b1-d5da-ffd2-baf1-1d8e30615f24\", \"e1dfdcb0-7fb2-1972-cbbf-b92510b739df\", \"4d85e003-8414-3a00-2975-29feb860ce61\", \"53994cf3-4bc6-7e33-a079-b2da9cfc1233\", \"7df9b205-64c7-8a82-e7e4-f426c36da508\", \"8d03afa7-ceea-00be-9e2a-11eb047a0a99\", \"cee8a51f-79e4-bfad-9e5b-5d770fbfa31e\", \"63c2b49d-40e6-3eaa-6f3b-1037b3039d43\", \"497718e5-dee7-ce39-a960-db30a57ff064\", \"9e05de64-88b4-ef92-f461-2810d2bdcae9\", \"30b83a67-482d-4f30-7c04-16f66dc56157\", \"a82aa276-302e-bbe3-ed94-49bd1b0a187a\", \"b8532e62-5139-2f83-6a15-10da6cb56bf3\", \"8413a34f-262c-5468-be04-4db1e7c66f2d\", \"ae120eb4-783d-d12b-1cc0-a27faaa558dd\", \"d142a418-153c-5ce5-8c0b-69613165c5b1\", \"2d70a060-62d3-8ecf-9753-3ace4682be87\", \"6c8d21c9-112c-29bb-cb39-3031c17edac1\", \"c8b272f0-9e35-1274-0be1-92048540c4f6\", \"653bd3ac-2975-c806-7fa6-ece182481f96\", \"f0058ecb-daf6-401d-119c-e2dc33965c63\", \"6d29ab83-0a71-a508-8968-bdbf5cf14fb5\", \"e92f03f1-6b6d-fff1-acd6-1cdeec6c7729\", \"3015be5d-ab80-1e91-8897-78f940f91f81\", \"b3e5f2b5-39ba-dc32-d4b3-d10c42066ae9\", \"2558adad-06f4-c397-b87a-0ca9db1d463a\", \"a93c50d6-aea1-5d39-164e-3adf8ec87431\", \"72a8dd10-cdd0-8fbf-5859-660a25623f4c\", \"d4865c06-68cc-46f6-258c-ea75185855fe\", \"5a95289b-48aa-890e-c16d-90708d0f4ef8\", \"6710efef-31ff-4bf0-be7b-efa4e4c8d3e9\", \"266a7f8d-0e10-c7bb-077c-6ac63a5a88af\", \"c1acf4d0-e787-ab92-fa25-d1dddac56f03\", \"84235458-5076-361d-67d5-c69dbbbbf507\", \"038ba477-943d-a75a-0570-29be87cdc493\", \"cb92c686-0ce2-e624-638e-07f221a634ad\", \"418f9afc-9665-a69d-2e2d-90e76b062c1a\", \"53795161-3e7b-cfda-b414-4380dbe73aab\", \"97b90f2f-255e-9262-d0da-7ea24dfaa320\", \"5af67ab6-6d44-2f1b-94d0-23628999330f\", \"02f1ab4c-b81f-7d96-34cd-9545b89ec11b\", \"9c787381-66d3-140c-1c3e-9022add21dc6\", \"96c499f5-cf38-1c30-38b6-5cd10089e8b7\", \"f78c4a3e-b62d-0a84-4f54-823636c226db\", \"ad26d957-d231-0457-54d6-e0f071eab3b1\", \"b4a2448f-5ea3-8246-9e7a-11e95f4338a1\", \"219df6ae-a750-8e31-9eb1-aef6b3d38ab2\", \"a7de2fe9-13ef-52f0-b662-53b7910be768\", \"8a0f5f79-476a-6f08-3a16-cd8d26ed6923\", \"10dcebdf-0df7-4b26-4c07-a71bdbbe6c55\", \"d619cf91-882c-712c-42a9-a9cf909bbcdb\", \"e1dd302a-b8ba-98ba-e192-aee1c321e629\", \"fbb105e4-82d0-3b8f-9a5f-35689bab4f63\", \"88c7c852-b957-f6c7-d261-55a81bae2eb7\", \"6360eeaf-edbe-cd2d-1704-85bb4d9f0db8\", \"5bcaf9b1-ce54-6c78-2305-87107fc6be56\", \"1ad2cea9-789f-df99-c939-3aea441a687a\", \"57ebea90-f0bf-5c73-0f3d-67eda0c04b59\", \"2bd0444b-72c0-6207-8c86-c452fd01b494\", \"a389019a-67e2-9ed6-42cf-fc778edae229\", \"ad5ceabf-4247-7c20-5a99-44905a0faca5\", \"3e5478f3-41f5-702a-3e57-2ddfd5d7bae8\", \"db809b7c-452d-7c69-eda8-7b4aa1ee3625\", \"afd0498d-fa43-1db5-7c70-03d0075133aa\", \"df284e79-e50a-e2b6-5c4d-164e1e5d8059\", \"764954ff-70e4-805b-7986-6418183d65d0\", \"6cc6c489-0d69-0bd5-4d18-ec799247383d\", \"c1759b51-2dad-68ed-0a74-ff775c1ee678\", \"51b8f7cf-4843-8905-c6bc-191da1460a35\", \"8f870f49-e8dd-0337-2aa5-7ac0196be607\", \"77b05ed9-9078-9268-2025-eb569370dc27\", \"fabfad30-7656-76bf-8031-882fa18609d5\", \"287d0c0f-11d2-c0c0-09de-b394ac650478\", \"6f918c15-9016-84e3-8c6d-e673e1f44e6f\", \"90c28c29-fced-0403-0322-bbe10ae1bcca\", \"4cd5a1ff-7407-4982-e81a-9e5b89d07b04\", \"40f1bac9-dc29-61d6-5325-455f14e5d543\"",
											"    ];",
											"}",
											"",
											"const payor_names = [",
											"    \"Aetna\",",
											"    \"AmeriHealth\",",
											"    \"Amida Care\",",
											"    \"Anthem\",",
											"    \"Arkansas Blue Cross and Blue Shield\",",
											"    \"Blue Cross and Blue Shield of Alabama\",",
											"    \"Blue Cross and Blue Shield of Illinois\",",
											"    \"Blue Cross and Blue Shield of Kansas\",",
											"    \"Blue Cross and Blue Shield of Kansas City\",",
											"    \"Blue Cross and Blue Shield of Louisiana\",",
											"    \"Blue Cross and Blue Shield of Minnesota\",",
											"    \"Blue Cross and Blue Shield of Mississippi\",",
											"    \"Blue Cross and Blue Shield of Montana\",",
											"    \"Blue Cross and Blue Shield of Nebraska\",",
											"    \"Blue Cross and Blue Shield of New Mexico\",",
											"    \"Blue Cross and Blue Shield of North Carolina\",",
											"    \"Blue Cross and Blue Shield of Oklahoma\",",
											"    \"Blue Cross and Blue Shield of Rhode Island\",",
											"    \"Blue Cross and Blue Shield of Texas\",",
											"    \"Blue Cross and Blue Shield of Vermont\",",
											"    \"Blue Cross and Blue Shield of Wyoming\",",
											"    \"Blue Cross Blue Shield of Arizona\",",
											"    \"Blue Cross Blue Shield of Massachusetts\",",
											"    \"Blue Cross Blue Shield of Michigan\",",
											"    \"Blue Cross Blue Shield of North Dakota\",",
											"    \"Blue Cross of Idaho Health Service, Inc.\",",
											"    \"Blue Shield of California\",",
											"    \"BlueCross BlueShield of South Carolina\",",
											"    \"BlueCross BlueShield of Tennessee\",",
											"    \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\",",
											"    \"Bright Health\",",
											"    \"Capital District Physicians' Health Plan, Inc. (CDPHP)\",",
											"    \"Care N' Care Health Plan\",",
											"    \"CareFirst BCBS\",",
											"    \"CareOregon\",",
											"    \"Centene\",",
											"    \"Cigna\",",
											"    \"Community Care Health Plan\",",
											"    \"Community First Health Plans\",",
											"    \"Community Health Choice, Inc. (CHC)\",",
											"    \"Community Health Group\",",
											"    \"Community Health Plan of Washington (CHPW)\",",
											"    \"ConnectiCare, Inc.\",",
											"    \"Contra Costa Health Plan\",",
											"    \"Cook Children's Health Plan (CCHP)\",",
											"    \"Dean Health Plan\",",
											"    \"Dell Children's Health Plan\",",
											"    \"Driscoll Health Plan\",",
											"    \"El Paso First Health Plans\",",
											"    \"Excellus BlueCross BlueShield\",",
											"    \"Fallon Health\",",
											"    \"Geisinger Health Plan\",",
											"    \"GHI (Emblem Health)\",",
											"    \"Gold Coast Health Plan\",",
											"    \"Harvard Pilgrim Health Care, Inc.\",",
											"    \"Health Alliance\",",
											"    \"Health New England, Inc.\",",
											"    \"Health Plan of San Joaquin\",",
											"    \"Health Plan of San Mateo\",",
											"    \"Healthfirst\",",
											"    \"Highmark BCBS\",",
											"    \"Highmark Health\",",
											"    \"HIP/Emblem Health\",",
											"    \"Horizon Blue Cross Blue Shield of New Jersey\",",
											"    \"Humana\",",
											"    \"Independence Blue Cross\",",
											"    \"Independent Health Association, Inc.\",",
											"    \"Inland Empire Health Plan\",",
											"    \"InnovaCare Health Solutions\",",
											"    \"Kaiser Foundation Health Plan (California)\",",
											"    \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\",",
											"    \"Kaiser Foundation Health Plan of Washington\",",
											"    \"L.A. Care Health Plan\",",
											"    \"Memorial Hermann Health Insurance Company\",",
											"    \"Miami Children’s Health Plan\",",
											"    \"Moda Health\",",
											"    \"Molina Healthcare\",",
											"    \"Neighborhood Health Plan of Rhode Island, Inc.\",",
											"    \"No Insurance\",",
											"    \"Oscar Insurance Corporation\",",
											"    \"Other\",",
											"    \"Oxford\",",
											"    \"PacificSource Health Plans\",",
											"    \"Partnership HealthPlan of California\",",
											"    \"Premera Blue Cross\",",
											"    \"Presbyterian Health Plan\",",
											"    \"Priority Health\",",
											"    \"Providence Health Plan\",",
											"    \"Regence BlueCross BlueShield of Oregon\",",
											"    \"Regence BlueCross BlueShield of Utah\",",
											"    \"Regence BlueShield\",",
											"    \"Regence BlueShield of Idaho\",",
											"    \"SelectHealth\",",
											"    \"Sentara Health Plans, Inc. (fka Optima Health)\",",
											"    \"Sharp Health Plan\",",
											"    \"Sutter Health Plus\",",
											"    \"Texas Children's Health Plan\",",
											"    \"Tufts Health Plan\",",
											"    \"UCare\",",
											"    \"UMR\",",
											"    \"UnitedHealthcare\",",
											"    \"UPMC Health Plan\",",
											"    \"WEA Trust\",",
											"    \"WellCare Health Plans, Inc.\",",
											"    \"Wellmark Blue Cross and Blue Shield of Iowa\",",
											"    \"Wellmark Blue Cross and Blue Shield of South Dakota\",",
											"    \"Western Health Advantage\"",
											"];",
											"",
											"let patientRelation = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
											"",
											"let statesList = [\"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"];",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"",
											"//Coverage Start Date",
											"let coverageStartDate = collectionMethods.randomDate(new Date(), new Date());",
											"let coverageStartDateFormatted = coverageStartDate.getFullYear() + '-' + (\"0\" + (coverageStartDate.getMonth() + 1)).slice(-2) + '-' + (\"0\" + coverageStartDate.getDate()).slice(-2);",
											"",
											"//Coverage End Date",
											"//Add number of days to coverageStartDate to make the coverageEndDate in future",
											"let AddNumberOfDays = 90",
											"let coverageEndDate = coverageStartDate.setDate(coverageStartDate.getDate() + AddNumberOfDays);",
											"let coverageEndDateFormatted = new Date(coverageEndDate).getFullYear() + '-' + (\"0\" + (new Date(coverageEndDate).getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date(coverageEndDate).getDate()).slice(-2);",
											"",
											"let random = Math.floor(Math.random() * payor_names.length);",
											"",
											"pm.environment.set(\"group_id1\", Math.floor(Math.random() * (70 - 10) + 10));",
											"pm.environment.set(\"subscriber_id1\", Math.floor(Math.random() * (70 - 10) + 10));",
											"pm.environment.set(\"alternative_id1\", Math.floor(Math.random() * (70 - 10) + 10));",
											"",
											"pm.environment.set(\"payor_name1\", payor_names[random]);",
											"// pm.environment.set(\"payor_program_name1\", payor_program);",
											"pm.environment.set(\"Coverage1StartDate\", moment().format('YYYY-MM-DD'));",
											"pm.environment.set(\"Coverage1EndDate\", moment().add(6, 'months').format('YYYY-MM-DD'));",
											"pm.environment.set(\"payor_externalid1\", payorExternalids[random]);",
											"pm.environment.set(\"patientState1\", ld.sample(statesList));",
											"pm.environment.set(\"providerServicesPhoneNumber1\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patient_relation1\", ld.sample(patientRelation));",
											"pm.environment.set(\"RelationFirstName1\", firstName);",
											"pm.environment.set(\"RelationLastName1\", lastName);",
											"pm.environment.set(\"RelationDateOfBirth1\", dateOfBirth);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1cd14bc1-4877-440e-9ffb-23bab842d3cb",
										"exec": [
											"var response_text = pm.response.text();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify CoverageExternalId is generated\", function () {",
											"    pm.expect(response_text).to.not.be.empty;",
											"});",
											"",
											"pm.environment.set(\"coverageExternalId\", response_text);",
											"console.log(\"response_text\" + response_text)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4d31f9ee-5e1b-4f49-af81-94fc1043c26c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payor\": \"{{payor_name1}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{group_id1}}\",\n    \"subscriberId\": \"{{subscriber_id1}}\",\n    \"alternativeId\": \"{{alternative_id1}}\",\n    \"customPayorName\": \"\",\n    \"stateCode\": \"{{patientState1}}\",\n    \"startDate\": \"{{Coverage1StartDate}}\",\n    \"endDate\": \"{{Coverage1EndDate}}\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber1}}\",\n    \"patientRelationToSubscriber\": \"{{patient_relation1}}\",\n    \"subscriberFirstName\": \"{{RelationFirstName1}}\",\n    \"subscriberLastName\": \"{{RelationLastName1}}\",\n    \"subscriberDateOfBirth\": \"{{RelationDateOfBirth1}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"coverages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e030fdb4-8f6d-4cbf-ae60-632abef8af85",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let episodeStatusList = [\"Enrolled\"];",
											"let treatmentProgramList = [\"Equip treatment\", \"Freeform\"];",
											"let episodeStatusReasonList = [\"Declined - Admin/Equip delay\", \"Declined - Chose HLOC (IOP/PHP/RTC)\", \"Declined - Chose new outpt team\", \"Declined - Continue w current team\", \"Declined - Unknown tx choice\", \"Discharged - AEA - Declined relapse prevention\", \"Discharged - AEA - Inpatient\", \"Discharged - AEA - No care\", \"Discharged - AEA - Outpatient\", \"Discharged - AEA - PHP\", \"Discharged - AEA - RTC\", \"Discharged - Admin - Change in payor\", \"Discharged - Admin - Disengaged\", \"Discharged - Admin - Financial\", \"Discharged - Admin - Ins denial\", \"Discharged - HLOC - IOP\", \"Discharged - HLOC - Inpt med\", \"Discharged - HLOC - Inpt psych\", \"Discharged - HLOC - PHP\", \"Discharged - HLOC - RTC\", \"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\", \"MIA - Lost contact\", \"MIA - No contact\", \"Not eligible - Wrong age\", \"Not eligible - Wrong state\", \"Not qualified - Equip referred to clinical HLOC\", \"Not qualified - Equip referred to medical HLOC\", \"Not qualified - Family unwilling to participate in tx\", \"Not qualified - Financial - Insurance not in-network\", \"Not qualified - Financial - can't afford OOP $\", \"Not qualified - No eating disorder\", \"Not qualified - Not living with family\"];",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let date = collectionMethods.randomDate(new Date(2020, 00, 01), new Date());",
											"let episodeStartDate = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", episodeStartDate);",
											"",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", episodeStartDate);",
											"",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", episodeStartDate);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "62f4373e-8c86-4a4c-a808-3d79fbba32b6",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b5d43867-4715-4bcd-aeb1-504f741efa7c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get episode after add",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2c368cbb-100f-4ead-8559-f982faf7e60a",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify data type\", function () {",
											"    for (i = 0; i < jsonData.length; i++) {",
											"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.a('number');",
											"        pm.expect(jsonData[i][\"level\"]).to.be.a('string');",
											"    }",
											"});",
											"",
											"let expectedResponse = [",
											"    {",
											"        \"patientExternalId\": pm.environment.get(\"patientId\"),",
											"        \"episodeExternalId\": pm.environment.get(\"episodeExternalId\"),",
											"        \"treatmentProgramName\": pm.environment.get(\"cdsTreatmentProgramName\"),",
											"        \"episodeStatus\": pm.environment.get(\"cdsEpisodeStatus\"),",
											"        \"statusReason\": null,",
											"        \"payorName\": null,",
											"        \"payorProgramName\": null,",
											"        \"episodeStartDate\": pm.environment.get(\"cdsEpisodeStartDate\"),",
											"        \"episodeClosedDate\": null,",
											"        \"firstInquiryReferralDate\": pm.environment.get(\"firstInquiryReferralDate\"),",
											"        \"lengthInWeeks\": pm.environment.get(\"cdsLengthInWeeks\"),",
											"        \"level\": pm.environment.get(\"cdsLevel\"),",
											"        \"authorizationDetails\": null,",
											"        \"pausedDetails\": null,",
											"        \"medicalClearance\": {",
											"            \"medicalClearanceStatus\": \"Not ready\",",
											"            \"requestedDate\": null,",
											"            \"completedDate\": null",
											"        },",
											"        \"insuranceVerification\": {",
											"            \"insuranceVerificationStatus\": \"Not ready\",",
											"            \"requestedDate\": null,",
											"            \"completedDate\": null",
											"        },",
											"        \"isPaused\": false,",
											"        \"psychClearance\": {",
											"            \"insuranceVerificationStatus\": \"Not ready\",",
											"            \"requestedDate\": null,",
											"            \"completedDate\": null",
											"        },",
											"    }",
											"];",
											"",
											"pm.test(\"Verify episode status response\", function () {",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", jsonData[0].episodeExternalId);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a4c9c798-8303-4071-9930-956ead019260",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update episode with Auth Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "9614017d-013c-47ba-8b8e-a2d328effca9",
										"exec": [
											"let ld = require('lodash');\r",
											"\r",
											"let episodeStatusList = [\"Enrolled\"];\r",
											"let Sessionunits = [\"Days\", \"Weeks\", \"Months\"];\r",
											"const randomnumbers = [\r",
											"    \"123456789\"\r",
											"];\r",
											"\r",
											"// //Save the variables to be used in next request for validation\r",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));\r",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));\r",
											"pm.environment.set(\"AuthApprovedSessions\", ld.random(1, 8));\r",
											"pm.environment.set(\"AuthapprovedSessionUnits\", ld.sample(Sessionunits));\r",
											"let random = Math.floor(Math.random() * randomnumbers.length);\r",
											"pm.environment.set(\"authorizationNumber\", Math.floor(Math.random() * (70 - 10) + 10));\r",
											"\r",
											"\r",
											"const payor_names = [\r",
											"    \"Aetna\",\r",
											"    \"AmeriHealth\",\r",
											"    \"Amida Care\",\r",
											"    \"Anthem\",\r",
											"    \"Arkansas Blue Cross and Blue Shield\",\r",
											"    \"Blue Cross and Blue Shield of Alabama\",\r",
											"    \"Blue Cross and Blue Shield of Illinois\",\r",
											"    \"Blue Cross and Blue Shield of Kansas\",\r",
											"    \"Blue Cross and Blue Shield of Kansas City\",\r",
											"    \"Blue Cross and Blue Shield of Louisiana\",\r",
											"    \"Blue Cross and Blue Shield of Minnesota\",\r",
											"    \"Blue Cross and Blue Shield of Mississippi\",\r",
											"    \"Blue Cross and Blue Shield of Montana\",\r",
											"    \"Blue Cross and Blue Shield of Nebraska\",\r",
											"    \"Blue Cross and Blue Shield of New Mexico\",\r",
											"    \"Blue Cross and Blue Shield of North Carolina\",\r",
											"    \"Blue Cross and Blue Shield of Oklahoma\",\r",
											"    \"Blue Cross and Blue Shield of Rhode Island\",\r",
											"    \"Blue Cross and Blue Shield of Texas\",\r",
											"    \"Blue Cross and Blue Shield of Vermont\",\r",
											"    \"Blue Cross and Blue Shield of Wyoming\",\r",
											"    \"Blue Cross Blue Shield of Arizona\",\r",
											"    \"Blue Cross Blue Shield of Massachusetts\",\r",
											"    \"Blue Cross Blue Shield of Michigan\",\r",
											"    \"Blue Cross Blue Shield of North Dakota\",\r",
											"    \"Blue Cross of Idaho Health Service, Inc.\",\r",
											"    \"Blue Shield of California\",\r",
											"    \"BlueCross BlueShield of South Carolina\",\r",
											"    \"BlueCross BlueShield of Tennessee\",\r",
											"    \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\",\r",
											"    \"Bright Health\",\r",
											"    \"Capital District Physicians' Health Plan, Inc. (CDPHP)\",\r",
											"    \"Care N' Care Health Plan\",\r",
											"    \"CareFirst BCBS\",\r",
											"    \"CareOregon\",\r",
											"    \"Centene\",\r",
											"    \"Cigna\",\r",
											"    \"Community Care Health Plan\",\r",
											"    \"Community First Health Plans\",\r",
											"    \"Community Health Choice, Inc. (CHC)\",\r",
											"    \"Community Health Group\",\r",
											"    \"Community Health Plan of Washington (CHPW)\",\r",
											"    \"ConnectiCare, Inc.\",\r",
											"    \"Contra Costa Health Plan\",\r",
											"    \"Cook Children's Health Plan (CCHP)\",\r",
											"    \"Dean Health Plan\",\r",
											"    \"Dell Children's Health Plan\",\r",
											"    \"Driscoll Health Plan\",\r",
											"    \"El Paso First Health Plans\",\r",
											"    \"Excellus BlueCross BlueShield\",\r",
											"    \"Fallon Health\",\r",
											"    \"Geisinger Health Plan\",\r",
											"    \"GHI (Emblem Health)\",\r",
											"    \"Gold Coast Health Plan\",\r",
											"    \"Harvard Pilgrim Health Care, Inc.\",\r",
											"    \"Health Alliance\",\r",
											"    \"Health New England, Inc.\",\r",
											"    \"Health Plan of San Joaquin\",\r",
											"    \"Health Plan of San Mateo\",\r",
											"    \"Healthfirst\",\r",
											"    \"Highmark BCBS\",\r",
											"    \"Highmark Health\",\r",
											"    \"HIP/Emblem Health\",\r",
											"    \"Horizon Blue Cross Blue Shield of New Jersey\",\r",
											"    \"Humana\",\r",
											"    \"Independence Blue Cross\",\r",
											"    \"Independent Health Association, Inc.\",\r",
											"    \"Inland Empire Health Plan\",\r",
											"    \"InnovaCare Health Solutions\",\r",
											"    \"Kaiser Foundation Health Plan (California)\",\r",
											"    \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\",\r",
											"    \"Kaiser Foundation Health Plan of Washington\",\r",
											"    \"L.A. Care Health Plan\",\r",
											"    \"Memorial Hermann Health Insurance Company\",\r",
											"    \"Miami Children’s Health Plan\",\r",
											"    \"Moda Health\",\r",
											"    \"Molina Healthcare\",\r",
											"    \"Neighborhood Health Plan of Rhode Island, Inc.\",\r",
											"    \"No Insurance\",\r",
											"    \"Oscar Insurance Corporation\",\r",
											"    \"Other\",\r",
											"    \"Oxford\",\r",
											"    \"PacificSource Health Plans\",\r",
											"    \"Partnership HealthPlan of California\",\r",
											"    \"Premera Blue Cross\",\r",
											"    \"Presbyterian Health Plan\",\r",
											"    \"Priority Health\",\r",
											"    \"Providence Health Plan\",\r",
											"    \"Regence BlueCross BlueShield of Oregon\",\r",
											"    \"Regence BlueCross BlueShield of Utah\",\r",
											"    \"Regence BlueShield\",\r",
											"    \"Regence BlueShield of Idaho\",\r",
											"    \"SelectHealth\",\r",
											"    \"Sentara Health Plans, Inc. (fka Optima Health)\",\r",
											"    \"Sharp Health Plan\",\r",
											"    \"Sutter Health Plus\",\r",
											"    \"Texas Children's Health Plan\",\r",
											"    \"Tufts Health Plan\",\r",
											"    \"UCare\",\r",
											"    \"UMR\",\r",
											"    \"UnitedHealthcare\",\r",
											"    \"UPMC Health Plan\",\r",
											"    \"WEA Trust\",\r",
											"    \"WellCare Health Plans, Inc.\",\r",
											"    \"Wellmark Blue Cross and Blue Shield of Iowa\",\r",
											"    \"Wellmark Blue Cross and Blue Shield of South Dakota\",\r",
											"    \"Western Health Advantage\"\r",
											"];\r",
											"\r",
											"pm.environment.set(\"Auth_payor_name\", payor_names[random]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b28dc66b-e00d-4db4-add9-103c0fcbdab9",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"adminepisodeExternalId\", pm.response.text());",
											"",
											"//set Date in the next request",
											"pm.environment.set(\"updatedDate\", pm.response.headers.get(\"Date\"));",
											"console.log(\"updatedDate: \" + pm.response.headers.get(\"Date\"))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e220e5e7-4354-4c92-802c-1518e94709bc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authorizationDetails\": [\n    {\n      \"approvedSessions\": \"{{AuthApprovedSessions}}\",\n      \"approvedSessionUnits\": \"{{AuthapprovedSessionUnits}}\",\n      \"authorizationNumber\": \"{{authorizationNumber}}\",\n      \"coverageExternalId\": \"{{coverageExternalId}}\",\n      \"endDate\": \"\",\n      \"externalId\": null,\n      \"isAuthEndDateValid\": true,\n      \"isAuthRequired\": true,\n      \"isAuthStartDateValid\": true,\n      \"payorProgram\": \"{{Auth_payor_name}}\",\n      \"startDate\": \"{{cdsEpisodeStartDate}}\"\n    }\n  ],\n  \"episodeClosedDate\": \"\",\n  \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n  \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n  \"firstInquiryReferralDate\": \"{{cdsEpisodeStartDate}}\",\n  \"insuranceVerification\": {\n    \"completedDate\": \"\",\n    \"insuranceVerificationStatus\": \"Not ready\",\n    \"isCompletedDateValid\": true,\n    \"isRequestedDateValid\": true,\n    \"requestedDate\": \"\"\n  },\n  \"lengthInWeeks\": {{cdsLengthInWeeks}},\n  \"level\": \"{{cdsLevel}}\",\n  \"medicalClearance\": {\n    \"completedDate\": \"\",\n    \"isCompletedDateValid\": true,\n    \"isRequestedDateValid\": true,\n    \"medicalClearanceStatus\": \"Not ready\",\n    \"requestedDate\": \"\"\n  },\n  \"patientExternalId\": \"{{patientId}}\",\n  \"pausedDetails\": [],\n  \"psychClearance\": {\n    \"completedDate\": \"\",\n    \"isCompletedDateValid\": true,\n    \"isRequestedDateValid\": true,\n    \"psychClearanceStatus\": \"Not ready\",\n    \"requestedDate\": \"\"\n  },\n  \"statusReason\": \"\",\n  \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes",
										"{{episodeExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get episode with Auth Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86e0ef2e-f2a5-4843-9c07-e89e959bc3c7",
										"exec": [
											"let moment = require('moment');",
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify Created At\", function () {",
											"    var d = new Date();",
											"    d.setDate(d.getDate());",
											"    d = d.toISOString().slice(0, 10);",
											"    d = d.split(\"T\")[0];",
											"    pm.expect(jsonData[1].createdAt).to.contains(d);",
											"});",
											"",
											"pm.test(\"Verify Created At after changes\", function () {",
											"    var d = new Date();",
											"    d.setDate(d.getDate());",
											"    d = d.toISOString().slice(0, 10);",
											"    d = d.split(\"T\")[0];",
											"    pm.expect(jsonData[1].after.created_at).to.contains(d);",
											"});",
											"",
											"pm.test(\"Verify Authorization information in Activity Log\", function () {",
											"    for (i = 0; i < jsonData.length; i++) {",
											"        pm.expect(jsonData[i][\"filterType\"]).to.be.eql(\"ADMIN_EPISODE\");",
											"        pm.expect(jsonData[i][\"operator\"]).to.be.oneOf([\"UPDATED\",\"CREATED\",\"NEW_FEATURE\"]);",
											"        pm.expect(jsonData[i][\"is_auth_required\"]).to.be.eql(pm.environment.get(true));",
											"        pm.expect(jsonData[0].after.payor_program_name).to.be.eql(pm.environment.get(\"Auth_payor_name\"));",
											"        pm.expect(jsonData[i][\"approved_session_units\"]).to.be.eql(pm.environment.get(\"AuthapprovedSessionUnits\"));",
											"        pm.expect(jsonData[i][\"authorization_start_date\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStartDate\"));",
											"        pm.expect(jsonData[i][\"approved_sessions\"]).to.be.eql(pm.environment.get(\"AuthApprovedSessions\"));",
											"        pm.expect(jsonData[i][\"admin_episode_external_id\"]).to.be.eql(pm.environment.get(\"admin_episode_external_id\"));",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3e07c71d-ed0e-4989-aedc-a7588977d15b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/activities",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"activities"
									]
								}
							},
							"response": []
						}
					],
					"id": "7692dee3-779b-4ec3-96d0-83ca8b0d152b"
				},
				{
					"name": "Soft delete episode",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "10d2d077-db4d-4ca5-8074-8050d5b3766e",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f3897b15-bdb7-4a8f-89c2-2a836d1dffc9",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "38939953-9a53-4aa1-9463-7cf7d423c4dc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add coverage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98a3e0ae-4754-434b-9acd-c4f15fb5c78a",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"",
											"",
											"let payor_payor_program_map = [{ \"payor_name\": \"AIDS Healthcare Foundation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ATRIO Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aetna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Aetna\"] },",
											"{ \"payor_name\": \"Affinity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeRight Advantage Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeWell New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alameda Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alignment Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AltaMed PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AmeriHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Amida Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Anthem\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Arkansas Blue Cross and Blue Shield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aspire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Asuris Northwest Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Atlanticare LIFE Connection\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Auxilio Salud Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Avera Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bienvivir Senior Health Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Arizona\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Massachusetts\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Michigan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of North Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Alabama\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Illinois\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Louisiana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Minnesota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Mississippi\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Montana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Nebraska\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of North Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Oklahoma\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Rhode Island\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Vermont\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Wyoming\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross of Idaho Health Service, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Shield of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of South Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Tennessee\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brand New Day\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brandman Centers for Senior Care (BCSC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BridgeSpan Health Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bright Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CHRISTUS Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalOptima\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalViva Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Care N' Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareFirst BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareOregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cascade Health Alliance, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Catholic Health LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenCal Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centene\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Center for Elders Independence\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenterLight Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers Plan for Healthy Living (CPHL)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers for Medicare and Medicaid Services (CMS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central California Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central Health Plan of California, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Chinese Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cigna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Cigna\"] },",
											"{ \"payor_name\": \"Clover Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Choice, Inc. (CHC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Group\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Plan of Washington (CHPW)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Complete Senior Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ConnectiCare, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Contra Costa Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cook Children's Health Plan (CCHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Crystal Run Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"DAKOTACARE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Dean Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Dell Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Devoted Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Driscoll Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"EMI Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Eddy SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"El Paso First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ElderONE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Elderplan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Excellus BlueCross BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fallon Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FamilyHealth Center for Older Adults (PACE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"First Medical Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FirstCare Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fresno PACE for Seniors\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"GHI (Emblem Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gary and Mary West PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Geisinger Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gold Coast Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Golden State Medicare Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"HIP/Emblem Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Harvard Pilgrim Health Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health New England, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Joaquin\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Mateo\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Healthfirst\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Horizon Blue Cross Blue Shield of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Horizon BCBS\"] },",
											"{ \"payor_name\": \"Humana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ICHS PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Imperial Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independence Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independent Health Association, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inland Empire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovAge\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovaCare Health Solutions\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inspira LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inter Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan (California)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Kaiser Northern CA - Central Valley\", \"Kaiser Northern CA - Diablo\", \"Kaiser Northern CA - Fresno\", \"Kaiser Northern CA - San Francisco\", \"Kaiser Northern CA - South San Francisco\", \"Kaiser Northern CA - Greater Southern Alameda\", \"Kaiser Northern CA - East Bay\", \"Kaiser Northern CA - Marin/Sonoma\", \"Kaiser Northern CA - Redwood City\", \"Kaiser Northern CA - Roseville\", \"Kaiser Northern CA - Sacramento\", \"Kaiser Northern CA - South Sacramento\", \"Kaiser Northern CA - San Jose\", \"Kaiser Northern CA - Santa Clara\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- Other\", \"payor_program_name\": [\"Orange County\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kalos Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"KelseyCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kern Health Systems, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"L.A. Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE St. Francis\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE at Lourdes, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lasso Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LifeWise Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Longevity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lutheran Senior LIFE at Jersey City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MAPFRE Puerto Rico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MVP Health Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Magellan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"MediExcel Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicaid\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medical Card System, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Memorial Hermann Health Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MetroPlus Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Miami Children’s Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Moda Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"MODA\", \"Optum Cares\"] },",
											"{ \"payor_name\": \"Molina Healthcare\", \"payor_program_name\": [\"Optum Standard\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Mutual of Omaha Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"NY Hotel Trades Council and Hotel Association of NYC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Neighborhood Health Plan of Rhode Island, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"No Insurance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"On Lok Lifeways\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Optum\", \"payor_program_name\": [\"Optum\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Oscar Insurance Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Other\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Oxford\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"PACE CNY\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"PacificSource Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"PacificSource - Medicaid\", \"PacificSource - Navigator\", \"PacificSource - SmartChoice\", \"PacificSource - Voyager\"] },",
											"{ \"payor_name\": \"Parkland Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partners Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partnership HealthPlan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Partnership Health Plan\"] },",
											"{ \"payor_name\": \"Physicians Health Plan of Northern Indiana, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Piedmont Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan Medico Bella Vista\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan de Salud Menonita\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Premera Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Presbyterian Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Priority Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Private Pay\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"ProCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Prominence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Providence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - Standard\"] },",
											"{ \"payor_name\": \"Redwood Coast PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Utah\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield of Idaho\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"RiverSpring Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Ryder Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SCAN Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIHO Holding, LLC dba SIHO Insurance Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIMNSA Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Samaritan Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Diego PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Francisco Health Plan (SFHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara County dba Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara Family Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Fe Employe's Hospital Association-Coast Lines\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scott and White Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scripps Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Seaside Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SelectHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Sendero Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Senior Whole Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sentara Health Plans, Inc. (fka Optima Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sharp Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Silver Star Health Network\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"St. Paul's PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stanford Health Care Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stockton PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sunrise Advantage Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sutter Health Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Sutter SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Texas Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Total Senior Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Triple-S Management Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"True Health New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Tufts Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UMR\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UPMC Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Umpqua Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"UnitedHealthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Univera Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VNSNY CHOICE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VillageCareMAX\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Vitality Health Plan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"WEA Trust\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"WellCare Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of Iowa\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of South Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Western Health Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"Western Oregon Advanced Health, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Yamhill Community Care Organization\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] }];",
											"",
											"randomPayor = ld.sample(payor_payor_program_map);",
											"randomPayorName = randomPayor.payor_name;",
											"randomPayorProgramName = ld.sample(randomPayor.payor_program_name);",
											"",
											"console.log(randomPayorName);",
											"console.log(randomPayorProgramName);",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let patientRelationList = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"",
											"pm.environment.set(\"groupId\", \"GRP12345689\");",
											"pm.environment.set(\"subscriberId\", \"SUB12345689\");",
											"pm.environment.set(\"payor\", randomPayorName);",
											"pm.environment.set(\"payorProgram\", randomPayorProgramName);",
											"pm.environment.set(\"stateCode\", ld.sample(statesList));",
											"pm.environment.set(\"coverageStartDate\", moment().format('YYYY-MM-DD'));",
											"pm.environment.set(\"coverageEndDate\", moment().add(6, 'months').format('YYYY-MM-DD'));",
											"pm.environment.set(\"alternativeId\", \"ALT12345689\");",
											"pm.environment.set(\"providerServicesPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientRelationToSubscriber\", ld.sample(patientRelationList));",
											"pm.environment.set(\"subscriberFirstName\", firstName);",
											"pm.environment.set(\"subscriberLastName\", lastName);",
											"pm.environment.set(\"subscriberDateOfBirth\", moment().subtract(10, 'years').format('YYYY-MM-DD'));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6099e4ea-b58a-4a40-8424-1a6bb485a326",
										"exec": [
											"var response_text = pm.response.text();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"// pm.test(\"Verify CoverageExternalId is generated\", function () {",
											"//     pm.expect(jsonData.id).length.greaterThan(0);",
											"// });",
											"",
											"pm.environment.set(\"coverageExternalId\", response_text);",
											"console.log(\"response_text\" + response_text)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9a461e35-b51c-4c2e-a167-e0a924ce14f6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payor\": \"{{payor}}\",\n    \"payorProgram\": \"{{payorProgram}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{groupId}}\",\n    \"subscriberId\": \"{{subscriberId}}\",\n    \"stateCode\": \"{{stateCode}}\",\n    \"startDate\": \"{{coverageStartDate}}\",\n    \"endDate\": \"{{coverageEndDate}}\",\n    \"alternativeId\": \"{{alternativeId}}\",\n    \"customPayorName\": \"\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber}}\",\n    \"patientRelationToSubscriber\": \"{{patientRelationToSubscriber}}\",\n    \"subscriberFirstName\": \"{{subscriberFirstName}}\",\n    \"subscriberLastName\": \"{{subscriberLastName}}\",\n    \"subscriberDateOfBirth\": \"{{subscriberDateOfBirth}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"coverages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4ad7ced3-e96e-4fb0-a626-c049ac93a542",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let episodeStatusList = [\"New\", \"Assessing\", \"Enrolled\", \"In-treatment\",];",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let episodeStatusReasonList = [\"Declined - Admin/Equip delay\", \"Declined - Chose HLOC (IOP/PHP/RTC)\", \"Declined - Chose new outpt team\", \"Declined - Continue w current team\", \"Declined - Unknown tx choice\", \"Discharged - AEA - Declined relapse prevention\", \"Discharged - AEA - Inpatient\", \"Discharged - AEA - No care\", \"Discharged - AEA - Outpatient\", \"Discharged - AEA - PHP\", \"Discharged - AEA - RTC\", \"Discharged - Admin - Change in payor\", \"Discharged - Admin - Disengaged\", \"Discharged - Admin - Financial\", \"Discharged - Admin - Ins denial\", \"Discharged - HLOC - IOP\", \"Discharged - HLOC - Inpt med\", \"Discharged - HLOC - Inpt psych\", \"Discharged - HLOC - PHP\", \"Discharged - HLOC - RTC\", \"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\", \"MIA - Lost contact\", \"MIA - No contact\", \"Not eligible - Wrong age\", \"Not eligible - Wrong state\", \"Not qualified - Equip referred to clinical HLOC\", \"Not qualified - Equip referred to medical HLOC\", \"Not qualified - Family unwilling to participate in tx\", \"Not qualified - Financial - Insurance not in-network\", \"Not qualified - Financial - can't afford OOP $\", \"Not qualified - No eating disorder\", \"Not qualified - Not living with family\"];",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let date = collectionMethods.randomDate(new Date(2020, 00, 01), new Date());",
											"let episodeStartDate = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", episodeStartDate);",
											"",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", episodeStartDate);",
											"",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", episodeStartDate);",
											"pm.environment.set(\"firstInquiryReferralDate\", episodeStartDate);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "917456de-064b-4989-96da-c1beb7a96c4b",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8893872c-0e90-4959-bf56-ec6157174877",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get episode after add",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify data type\", function () {",
											"    for (i = 0; i < jsonData.length; i++) {",
											"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.a('number');",
											"        pm.expect(jsonData[i][\"level\"]).to.be.a('string');",
											"    }",
											"});",
											"",
											"pm.test(\"Verify episode status values\", function () {",
											"    for (i = 0; i < jsonData.length; i++) {",
											"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.eql(pm.environment.get(\"patientId\"));",
											"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.eql(pm.environment.get(\"episodeExternalId\"));",
											"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.eql(pm.environment.get(\"cdsTreatmentProgramName\"));",
											"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStatus\"));",
											"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStartDate\"));",
											"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.eql(pm.environment.get(\"cdsLengthInWeeks\"));",
											"        pm.expect(jsonData[i][\"level\"]).to.be.eql(pm.environment.get(\"cdsLevel\"));",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"id": "cc50542f-c3ed-4ddb-a3d4-1505db8e34bd"
									}
								}
							],
							"id": "ba1cd803-ce0b-4edb-b43f-0c605fd97b6d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get patient status before deleting episode",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9fa51af0-a9aa-4cfc-b8d0-de4d41e27e16",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify the patient status is Active\", function () {",
											"    pm.expect(jsonData['patientStatus']).to.be.eql(pm.environment.get(\"cdsEpisodeStatus\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "71fc3fc1-8d24-4c35-8305-d421c7ecf3a8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"externalId\": \"string\",\n    \"primaryDiagnosis\": \"string\",\n    \"primaryDiagnosisAbbreviation\": \"string\",\n    \"patientStatus\": \"string\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/clinical-profile",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"clinical-profile"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete episode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});"
										],
										"type": "text/javascript",
										"id": "54cf86b9-7ab6-426e-8e8f-9087e98c49bc"
									}
								}
							],
							"id": "b6db8916-55bc-49b6-9410-fd058c882fe2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes",
										"{{episodeExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get episode after delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify episode is deleted\", function () {",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});"
										],
										"type": "text/javascript",
										"id": "ca4d3686-32bf-479b-9ea0-f47fdc1853bf"
									}
								}
							],
							"id": "d195d1ad-0993-40c8-8370-83f07f831a00",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						}
					],
					"id": "2d252167-d889-4729-bebb-bf8342ad1557"
				},
				{
					"name": "Get treatment programs list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f6d34df9-8f76-4e9f-a841-59cd3d41aba9",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"",
									"let treatmentProgramList = [\"Equip treatment\", \"Freeform\", \"Relapse prevention\", \"Equip Adult\"];",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i][\"label\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"externalId\"]).to.be.a('string');",
									"    }",
									"});",
									"",
									"pm.test(\"Verify Treatment Program values\", function () {",
									"    // treatmentProgramList.sort();",
									"    // let ld = require('lodash');",
									"    // let sortedJsonData = ld.orderBy(jsonData, ['label'], ['asc']);",
									"    for (i = 0; i < treatmentProgramList.length; i++) {",
									"        tests[\"Treatment Program: \" + treatmentProgramList[i] + \" exists\"] = pm.expect(jsonData[i][\"label\"]).to.be.eql(treatmentProgramList[i]);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "53ac98c5-b49f-46b7-a801-a0237813386e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/treatment-programs",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"treatment-programs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get episode levels",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "305ee618-616e-4d11-9106-deed71c243a1",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i][\"label\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"externalId\"]).to.be.a('string');",
									"    }",
									"});",
									"",
									"pm.test(\"Verify Episode Level values\", function () {",
									"    // levelList.sort();",
									"    let ld = require('lodash');",
									"    // let sortedJsonData = ld.orderBy(jsonData, [jsonData => jsonData.label], ['asc']);",
									"    for (i = 0; i < levelList.length; i++) {",
									"        tests[\"Episode Level: \" + levelList[i] + \" exists\"] = pm.expect(jsonData[i][\"label\"]).to.be.eql(levelList[i]);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4d91fa96-2d2b-49c0-90ba-975c3e12bb09",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/clinical-data/episode-levels",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"episode-levels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get episode status reasons",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "147bd2ce-3b45-4102-8b9b-905bee2b0eea",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let episodeStatusReasonList = [",
									"    {",
									"        \"label\": \"Contemplative\",",
									"        \"externalId\": \"defc5a29-b707-aeea-aeae-9bc760594b28\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Declined - Chose HLOC (IOP/PHP/RTC)\",",
									"        \"externalId\": \"8753f4cc-5c30-5ee1-4d1b-ac76c7893ed3\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Declined - Chose new outpt team\",",
									"        \"externalId\": \"e190bde8-d9e1-a29e-7571-092767a37c4b\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Declined - Continue w current team\",",
									"        \"externalId\": \"deb59e40-1cd5-db38-ec70-f5f42d186190\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Declined - Equip admin delay - Insurance\",",
									"        \"externalId\": \"303f2b60-ba12-7773-aa75-dd128851498f\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Declined - Equip admin delay - Med clearance\",",
									"        \"externalId\": \"db67ad1d-60ef-96db-181a-1e70375f86ba\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Declined - Equip admin delay - Other\",",
									"        \"externalId\": \"c35406ae-c67e-3343-5ff4-43b2c428c03a\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Declined - Unknown tx choice\",",
									"        \"externalId\": \"8cca07d5-9a13-f823-1505-9913b198a96f\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - Admin - Change in payor\",",
									"        \"externalId\": \"4750638e-44ab-91b3-4861-2b7b6d1626d4\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - Admin - Disengaged\",",
									"        \"externalId\": \"b2ea21e0-931e-c01a-56d6-94fa7f7e13a9\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - Admin - Financial\",",
									"        \"externalId\": \"3acb3ca0-668b-58be-4797-f615988eaac7\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - AEA - Inpatient Med\",",
									"        \"externalId\": \"22445994-34a3-7279-2901-611260b93de8\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - AEA - Inpatient Psych\",",
									"        \"externalId\": \"2bba8036-ffe2-7533-f5cf-67b54dd1acbe\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - AEA - No care\",",
									"        \"externalId\": \"377d1428-35b3-e97a-0a39-e7114807f39b\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - AEA - Outpatient\",",
									"        \"externalId\": \"56170d11-872d-d157-79bd-fa4d21ccdcac\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - AEA - PHP/IOP\",",
									"        \"externalId\": \"f3cd705f-3855-360d-3722-bde2ac8392f5\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - AEA - RTC\",",
									"        \"externalId\": \"344f0fbf-4c54-693e-28d5-e09e5f28be5a\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - Clinical need - Inpatient Med\",",
									"        \"externalId\": \"8d4e2702-c422-cb3a-227f-2bb497f7dce9\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - Clinical need - Inpatient Psych\",",
									"        \"externalId\": \"47cc6820-9301-5fe0-4c05-5ce39fb67fca\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - Clinical need - Non-ED HLOC\",",
									"        \"externalId\": \"6a9d8f65-8bd0-141f-42a5-7e737881b7ea\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - Clinical need - Non-ED Outpatient\",",
									"        \"externalId\": \"4f64a7bd-8fb0-fafe-ed88-45f372909bbd\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - Clinical need - Outpatient\",",
									"        \"externalId\": \"34624b08-19fc-83df-a543-3bb411fdb286\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - Clinical need - PHP/IOP\",",
									"        \"externalId\": \"51478074-9fae-17e2-5521-6bd759e102b1\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - Clinical need - RTC\",",
									"        \"externalId\": \"2c831242-9704-aa97-c78a-5b091c7edb77\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - In remission - No care\",",
									"        \"externalId\": \"ec4f63e9-a7fc-b6cc-da1a-97ec760c192b\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - In remission - Non-ED HLOC\",",
									"        \"externalId\": \"7971a920-8b92-286f-650f-4d32fb90e0cb\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - In remission - Non-ED Outpatient\",",
									"        \"externalId\": \"5912daf3-691e-5918-b2b5-9ef9c5a49517\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - In remission - Outpatient\",",
									"        \"externalId\": \"e1ffe3d9-61f0-16e5-8bc2-ebf8ff860d5e\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Discharged - In remission - Relapse prevention\",",
									"        \"externalId\": \"2915ef59-5078-3057-d66a-b4947f192883\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"HLOC - Inpatient Med\",",
									"        \"externalId\": \"987792f9-bbe1-576d-dc96-53dc683e0d06\",",
									"        \"status\": \"Paused\"",
									"    },",
									"    {",
									"        \"label\": \"HLOC - Inpatient Psych\",",
									"        \"externalId\": \"15ea5808-7ba7-8c1c-4197-6e15f6337ab8\",",
									"        \"status\": \"Paused\"",
									"    },",
									"    {",
									"        \"label\": \"MIA - Lost contact\",",
									"        \"externalId\": \"01bfcfe7-11bc-cec5-fb40-ca1d3d0321de\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"MIA - No contact\",",
									"        \"externalId\": \"3c022d87-87c8-7bc2-6813-c5f10ad85c9f\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Never Started\",",
									"        \"externalId\": \"c6640a45-ed4c-9eb9-87a3-0618715705bc\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Not eligible - Wrong age\",",
									"        \"externalId\": \"8705533b-606c-116a-60f7-4ed65449529c\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Not eligible - Wrong state\",",
									"        \"externalId\": \"b303c768-43b9-9924-4b6a-976ad74af2c5\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Not qualified - Equip referred to clinical HLOC\",",
									"        \"externalId\": \"23ac277c-561b-6ebf-e3f3-2c18493b0090\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Not qualified - Equip referred to medical HLOC\",",
									"        \"externalId\": \"5939d934-a312-a310-31bc-5828276fcdf5\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Not qualified - Family unwilling to participate in tx\",",
									"        \"externalId\": \"4cd1f50f-d2c4-1d4f-d5c2-cbc54393d42a\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Not qualified - Financial - Can't afford OOP $\",",
									"        \"externalId\": \"8e3678d1-187e-7f18-190b-b02e0f798364\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Not qualified - Financial - Insurance not in-network\",",
									"        \"externalId\": \"66dc8fec-9b68-22cf-2650-a1b438bbf969\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Not qualified - No eating disorder\",",
									"        \"externalId\": \"1081e4f6-429f-27da-f65f-f8930697373b\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Not qualified - Not living with family\",",
									"        \"externalId\": \"3908356c-9644-ce9c-3a70-8444feaec04e\",",
									"        \"status\": \"Closed\"",
									"    },",
									"    {",
									"        \"label\": \"Other\",",
									"        \"externalId\": \"72dec973-16ed-3fa5-910d-31af5936e653\",",
									"        \"status\": \"Paused\"",
									"    }",
									"];",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i][\"label\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"externalId\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"status\"]).to.be.a('string');",
									"    }",
									"});",
									"",
									"pm.test(\"Verify Episode Status reason values\", function () {",
									"    let ld = require('lodash');",
									"    let expectedSortedOrder = ld.orderBy(episodeStatusReasonList, ['label'], ['asc']);",
									"    let sortedJsonData = ld.orderBy(jsonData, ['label'], ['asc']);",
									"",
									"    for (i = 0; i < episodeStatusReasonList.length; i++) {",
									"        tests[\"Episode status reason: \" + expectedSortedOrder[i][\"label\"] + \" exists\"] = pm.expect(sortedJsonData[i][\"label\"]).to.be.eql(expectedSortedOrder[i][\"label\"]);",
									"        tests[\"Episode status: \" + expectedSortedOrder[i][\"status\"] + \" exists\"] = pm.expect(sortedJsonData[i][\"status\"]).to.be.eql(expectedSortedOrder[i][\"status\"]);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "af6ccc99-ded2-45e1-b437-9a63c5e8e7a4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "79edc923-8fff-450b-9b0c-cadfef16c1e5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/episode-status-reasons",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"episode-status-reasons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get episode status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c758997-09f3-4178-9890-9e98a31ca883",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let episodeStatusList = [\"New\", \"Assessing\", \"Enrolled\", \"In-treatment\", \"Closed\"];",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i][\"label\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"externalId\"]).to.be.a('string');",
									"    }",
									"});",
									"let ld = require('lodash');",
									"",
									"pm.test(\"Verify Episode Status values\", function () {",
									"    episodeStatusList.sort();",
									"    let sortedJsonData = ld.orderBy(jsonData, ['label'], ['asc']);",
									"    for (i = 0; i < episodeStatusList.length; i++) {",
									"        tests[\"Episode status: \" + episodeStatusList[i] + \" exists\"] = pm.expect(sortedJsonData[i][\"label\"]).to.be.eql(episodeStatusList[i]);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b5ab5029-9546-44a2-827b-07461479c5cb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/episode-status",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"episode-status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get medical clearance statuses",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0da1f117-bd6f-48f0-83fa-0b7718ab87ec",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let medicalClearanceStatuses = [\"Not ready\", \"Ready for review\", \"In progress\", \"Cleared\", \"Not cleared\"];",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i][\"label\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"externalId\"]).to.be.a('string');",
									"    }",
									"});",
									"let ld = require('lodash');",
									"",
									"pm.test(\"Verify medical clearance status values\", function () {",
									"    // medicalClearanceStatuses.sort();",
									"    // let sortedJsonData = ld.orderBy(jsonData, ['label'], ['asc']);",
									"    for (i = 0; i < medicalClearanceStatuses.length; i++) {",
									"        tests[\"Medical clearance status: \" + medicalClearanceStatuses[i] + \" exists\"] = pm.expect(jsonData[i][\"label\"]).to.be.eql(medicalClearanceStatuses[i]);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4cebc7a6-3f53-4e01-8613-755fa6288245",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/medical-clearance-statuses",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"medical-clearance-statuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get insurance verification statuses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let insuranceVerificationStatuses = [\"Not ready\", \"Ready for review\", \"Verification in progress\", \"Pre-authorization in progress\", \"Approved\", \"Denied\"];",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i][\"label\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"externalId\"]).to.be.a('string');",
									"    }",
									"});",
									"let ld = require('lodash');",
									"",
									"pm.test(\"Verify insurance verification status values\", function () {",
									"    // insuranceVerificationStatuses.sort();",
									"    // let sortedJsonData = ld.orderBy(jsonData, ['label'], ['asc']);",
									"    for (i = 0; i < insuranceVerificationStatuses.length; i++) {",
									"        tests[\"Insurance verification status: \" + insuranceVerificationStatuses[i] + \" exists\"] = pm.expect(jsonData[i][\"label\"]).to.be.eql(insuranceVerificationStatuses[i]);",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"id": "190e9bcf-f43a-40df-b54e-a0dc226f9a2b"
							}
						}
					],
					"id": "98971bc2-c4b9-4ed4-b12c-7943d6eef3ef",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/insurance-verification-statuses",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"insurance-verification-statuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get psych clearance statuses",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8989b519-752d-413d-8fd6-41495657c94d",
								"exec": [
									"//Author: Mayank Verma",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let psychClearanceStatuses = [\"Not ready\", \"Ready for review\", \"In progress\", \"Cleared\", \"Not cleared\"];",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i][\"label\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"externalId\"]).to.be.a('string');",
									"    }",
									"});",
									"let ld = require('lodash');",
									"",
									"pm.test(\"Verify psych clearance status values\", function () {",
									"    // psychClearanceStatuses.sort();",
									"    // let sortedJsonData = ld.orderBy(jsonData, ['label'], ['asc']);",
									"    for (i = 0; i < psychClearanceStatuses.length; i++) {",
									"        tests[\"Psych clearance status: \" + psychClearanceStatuses[i] + \" exists\"] = pm.expect(jsonData[i][\"label\"]).to.be.eql(psychClearanceStatuses[i]);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b877c24c-8d4e-4dc0-bc0d-6b52ed646ca1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/psych-clearance-statuses",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"psych-clearance-statuses"
							]
						}
					},
					"response": []
				}
			],
			"id": "4405a6e6-8686-4499-b900-33fad1422e15",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "9dcb56f0-e26d-47ed-8a4d-1ec7ec8d393a"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "1713f6e2-4fc0-403f-a5ac-7229bb547cb6"
					}
				}
			]
		},
		{
			"name": "Clinical Profile",
			"item": [
				{
					"name": "EQ-5628 Verify clinical profile includes admit date",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5e8fc2f2-07b1-4e96-a02a-e7ce2808f887",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6a1fde2a-062c-45b2-bccd-0c1e19bb6cb4",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4ab1ab20-a4bb-4214-ac88-f37c1733ccf8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode - New",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "73994453-287c-4747-9fe0-95c45371fba7",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"New\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "61970e96-03a9-45ca-9b88-920e63b3b240",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2d592996-febc-457b-b619-3e4523613614",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get clinical profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "002e9c31-16ee-419d-90f0-2c50b640bf0b",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify admit date is returned as null\", function () {",
											"    pm.expect(jsonData.admitDate).to.eql(null);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b16b493b-e59a-4e17-b5fa-6255c317e9c6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/clinical-profile",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"clinical-profile"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete episode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});"
										],
										"type": "text/javascript",
										"id": "c18aca8a-5480-4ea9-9806-ffeafd7bc2fb"
									}
								}
							],
							"id": "748e3dc1-45b4-48aa-9964-af86b931154d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes",
										"{{episodeExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode - Assessing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "14846109-03bd-40e6-8ed8-2e2a5564837f",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"Assessing\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c000098e-c4bd-49fd-8491-15ecb3d33a2d",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d7082f26-ce29-4036-9103-c1d07f017903",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get clinical profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ebeca187-e37c-40ea-9267-3c96c3a02ffc",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify admit date is returned\", function () {",
											"    pm.expect(jsonData.admitDate).to.eql(pm.environment.get(\"cdsEpisodeStartDate\"));",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d99e0a38-2006-4b36-b096-16e152c5d2d0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/clinical-profile",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"clinical-profile"
									]
								}
							},
							"response": []
						}
					],
					"id": "85e61749-fe46-40f6-b26c-b354dfabaf87"
				},
				{
					"name": "Add Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72b58ece-eee1-4ac6-bc28-ba76ebd2a2f5",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"patientId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "90762c5c-4faf-4ee3-a901-5f6949eabf3a",
								"exec": [
									"let ld = require('lodash');",
									"",
									"let gendersList = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"let pronounsList = [",
									"    \"He/Him/His\",",
									"    \"She/Her/Hers\",",
									"    \"They/Them/Theirs\",",
									"    \"Other\"",
									"];",
									"",
									"let ethnicitiesList = [",
									"    \"Asian\",",
									"    \"Black/African American\",",
									"    \"White/Caucasian\",",
									"    \"Hispanic/Latinx\",",
									"    \"Native American, Indian American, or Alaska Native\",",
									"    \"Native Hawaiian or other Pacific Islander\",",
									"    \"Middle Eastern or North African\",",
									"    \"Prefer not to answer\",",
									"    \"Other\"",
									"];",
									"",
									"let languagesList = [",
									"    \"English\",",
									"    \"Spanish\",",
									"    \"Chinese\",",
									"    \"French\",",
									"    \"Tagalog\",",
									"    \"Vietnamese\",",
									"    \"Korean\",",
									"    \"German\",",
									"    \"Russian\",",
									"    \"Italian\",",
									"    \"Portuguese\",",
									"    \"Polish\",",
									"    \"Japanese\",",
									"    \"Persian\",",
									"    \"Greek\",",
									"    \"Serbo-Croatian\",",
									"    \"Armenian\",",
									"    \"Yiddish\",",
									"    \"American Sign Language (ASL)\"",
									"];",
									"",
									"let sexList = [",
									"    \"Male\",",
									"    \"Female\"",
									"];",
									"",
									"let timezonesList = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\"",
									"];",
									"",
									"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"patientFirstName\", firstName);",
									"pm.environment.set(\"patientLastName\", lastName);",
									"pm.environment.set(\"patientEmail\", email);",
									"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientChosenName\", chosenName);",
									"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
									"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
									"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientCountry\", \"US\");",
									"pm.environment.set(\"patientZip\", zip.toString());",
									"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
									"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
									"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientSex\", ld.sample(sexList));",
									"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
									"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "398d197c-d2a8-4803-9e18-feaae46f8b6b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add episode - New",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f15e0d40-a53b-46c5-92c3-5783f3686f10",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"let episodeStatusList = [\"New\"];",
									"",
									"let treatmentProgramList = [\"Equip treatment\"];",
									"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
									"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
									"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
									"",
									"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
									"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
									"",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
									"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
									"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
									"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
									"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
									"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
									"",
									"//Authorization details",
									"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
									"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
									"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Medical clearance details",
									"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
									"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Insurance verification details",
									"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
									"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fcf26f0b-7fe4-450c-889c-1463096fffae",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"//set episodeExternalId to be used in next request",
									"pm.environment.set(\"episodeExternalId\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1e069faa-dc04-4195-9a88-6aace33bec62",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get diagnosis status reasons",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ca40b76-128f-4293-978e-933f03d87542",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let diagnosisStatusReasonList = [",
									"    {",
									"        \"label\": \"Added in error\",",
									"        \"externalId\": \"f59fdc3d-471e-2988-5858-14032e644eac\",",
									"        \"status\": \"void\"",
									"    },",
									"    {",
									"        \"label\": \"More appropriate/specific diagnosis available\",",
									"        \"externalId\": \"bff6c7fc-596a-802a-45c7-382564ec6093\",",
									"        \"status\": \"void\"",
									"    },",
									"    {",
									"        \"label\": \"Wrong diagnosis/code\",",
									"        \"externalId\": \"76d7b9dc-6890-e7f2-c7ef-e1504916ec5f\",",
									"        \"status\": \"void\"",
									"    }",
									"];",
									"",
									"pm.test(\"Verify observation diagnosisStatusReasons values\", function () {",
									"    // diagnosisStatusReasonList.sort();",
									"    // let ld = require('lodash');",
									"    // let sortedJsonData = ld.orderBy(jsonData, ['label'], ['asc']);",
									"",
									"    for (i = 0; i < diagnosisStatusReasonList.length; i++) {",
									"        tests[\"Diagnosis status label: \" + diagnosisStatusReasonList[i].label + \" exists\"] = pm.expect(jsonData[i][\"label\"]).to.be.eql(diagnosisStatusReasonList[i].label);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "99224324-d391-4806-aa6a-7bae6b745da7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3ac72bab-f75e-4abb-a801-60dc602b7024",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/diagnosis-status-reasons",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"diagnosis-status-reasons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get diagnosis statuses",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a447cb6f-a0a1-4624-9ca0-6793316bdaa8",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let diagnosisStatusList = [",
									"    {",
									"        \"label\": \"active\",",
									"        \"externalId\": \"20d9d66a-2ed4-9fd8-a3ab-b6fe12e4aaf6\"",
									"    },",
									"    {",
									"        \"label\": \"resolved\",",
									"        \"externalId\": \"9a7411c8-994c-f820-1adc-84c47f9a7764\"",
									"    },",
									"    {",
									"        \"label\": \"void\",",
									"        \"externalId\": \"8fe91c83-c0aa-e913-2008-ff1e31e4ecf2\"",
									"    },",
									"    {",
									"        \"label\": \"preliminary\",",
									"        \"externalId\": \"b672cfa6-792e-0c79-e530-f04681e81f3f\"",
									"    }",
									"];",
									"",
									"pm.test(\"Verify observation diagnosisStatuses values\", function () {",
									"    // diagnosisStatusReasonList.sort();",
									"    // let ld = require('lodash');",
									"    // let sortedJsonData = ld.orderBy(jsonData, ['label'], ['asc']);",
									"",
									"    for (i = 0; i < diagnosisStatusList.length; i++) {",
									"        tests[\"Diagnosis status label: \" + diagnosisStatusList[i].label + \" exists\"] = pm.expect(jsonData[i][\"label\"]).to.be.eql(diagnosisStatusList[i].label);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c167cfa4-9b1d-43b0-809d-cbe706c09107",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "dbba4bd7-c22e-44b6-a259-798fd448e928",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/diagnosis-statuses",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"diagnosis-statuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "ED Diagnosis codes are displayed first",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "464f9cb7-73f7-415d-9b67-ba4c7cb3df44",
								"exec": [
									"var jsonData = pm.response.json();",
									"var ld = require('lodash');",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Verify ED diagnosis codes are displayed first in the list\", () => {",
									"    var actualEatingDisorderArray = [];",
									"    for (let i = 0; i < jsonData.length; i++) {",
									"        actualEatingDisorderArray.push(jsonData[i].eatingDisorder);",
									"    }",
									"    var expectedArray = ld.orderBy(actualEatingDisorderArray, [], ['desc']);",
									"    pm.expect(expectedArray).to.be.eql(actualEatingDisorderArray);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8df9a508-20da-4e99-ab83-b36c2b47d5b7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "836d1986-5e5f-4e9e-9ad6-ec66fc4962ae",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/clinical-data/diagnosis-codes?page-number=1&page-size=10",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"diagnosis-codes"
							],
							"query": [
								{
									"key": "page-number",
									"value": "1"
								},
								{
									"key": "page-size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Diagnosis Code by multiple Search Strings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "539bcea6-e13c-480a-9794-1e1180eefdf7",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 4000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a JSON body\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Verify data type\", function () {\r",
									"    for (i = 0; i < jsonData.length; i++) {\r",
									"        pm.expect(jsonData[i][\"shortDescription\"]).to.be.a('string');\r",
									"        pm.expect(jsonData[i][\"longDescription\"]).to.be.a('string');\r",
									"    }\r",
									"});\r",
									"\r",
									"let diagnosis_code = [\"F42\",\"F90\"];\r",
									"let shortDescription = [\"Obsessive-compulsive disorder\",\"Attention-deficit hyperactivity disorders\"];\r",
									"\r",
									"\r",
									"if (jsonData.length > 0){\r",
									"    pm.test(\"Verify exact match for diagnosis code\", () => {\r",
									"         for (let i = 0; i < jsonData.length; i++) {\r",
									"             tests[\"Patient# \" + (i + 1) + \" has Diagnosis code as \" + jsonData[i].code] = pm.expect(diagnosis_code[i].toLowerCase()).to.eql(diagnosis_code[i].toLowerCase());\r",
									"             tests[\"Patient# \" + (i + 1) + \" has Description as \" + jsonData[i].shortDescription] = pm.expect(shortDescription[i].toLowerCase()).to.eql(shortDescription[i].toLowerCase());\r",
									"    }\r",
									"    });\r",
									"} else {\r",
									"    pm.test(\"No data with filter \" + jsonData[0].code +\"/\"+ jsonData[0].shortDescription+\" is found\", () => {\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f4fa30d5-2031-45f6-b95f-1b30e69156fe",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/clinical-data/diagnosis-codes?exact-match=true&search-string=F90%25F42",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"diagnosis-codes"
							],
							"query": [
								{
									"key": "exact-match",
									"value": "true"
								},
								{
									"key": "search-string",
									"value": "F90%25F42"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "a5a8ee09-783d-4e0f-9cea-48623828f8d8"
		},
		{
			"name": "Verify patient status based on following episode status",
			"item": [
				{
					"name": "New",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88e93812-5128-434e-bf09-da4d4a7c25b6",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "58313640-6f1c-45e3-911d-358c54de0b2f",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d7d72537-291e-474d-adfc-20e1c0a42c83",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add coverage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "12f7c627-d666-4c45-8dd5-e5df5bddc291",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"",
											"",
											"let payor_payor_program_map = [{ \"payor_name\": \"AIDS Healthcare Foundation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ATRIO Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aetna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Aetna\"] },",
											"{ \"payor_name\": \"Affinity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeRight Advantage Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeWell New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alameda Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alignment Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AltaMed PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AmeriHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Amida Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Anthem\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Arkansas Blue Cross and Blue Shield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aspire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Asuris Northwest Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Atlanticare LIFE Connection\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Auxilio Salud Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Avera Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bienvivir Senior Health Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Arizona\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Massachusetts\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Michigan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of North Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Alabama\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Illinois\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Louisiana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Minnesota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Mississippi\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Montana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Nebraska\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of North Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Oklahoma\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Rhode Island\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Vermont\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Wyoming\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross of Idaho Health Service, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Shield of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of South Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Tennessee\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brand New Day\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brandman Centers for Senior Care (BCSC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BridgeSpan Health Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bright Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CHRISTUS Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalOptima\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalViva Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Care N' Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareFirst BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareOregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cascade Health Alliance, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Catholic Health LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenCal Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centene\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Center for Elders Independence\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenterLight Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers Plan for Healthy Living (CPHL)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers for Medicare and Medicaid Services (CMS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central California Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central Health Plan of California, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Chinese Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cigna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Cigna\"] },",
											"{ \"payor_name\": \"Clover Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Choice, Inc. (CHC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Group\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Plan of Washington (CHPW)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Complete Senior Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ConnectiCare, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Contra Costa Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cook Children's Health Plan (CCHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Crystal Run Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"DAKOTACARE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Dean Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Dell Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Devoted Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Driscoll Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"EMI Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Eddy SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"El Paso First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ElderONE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Elderplan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Excellus BlueCross BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fallon Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FamilyHealth Center for Older Adults (PACE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"First Medical Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FirstCare Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fresno PACE for Seniors\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"GHI (Emblem Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gary and Mary West PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Geisinger Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gold Coast Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Golden State Medicare Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"HIP/Emblem Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Harvard Pilgrim Health Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health New England, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Joaquin\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Mateo\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Healthfirst\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Horizon Blue Cross Blue Shield of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Horizon BCBS\"] },",
											"{ \"payor_name\": \"Humana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ICHS PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Imperial Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independence Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independent Health Association, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inland Empire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovAge\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovaCare Health Solutions\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inspira LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inter Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan (California)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Kaiser Northern CA - Central Valley\", \"Kaiser Northern CA - Diablo\", \"Kaiser Northern CA - Fresno\", \"Kaiser Northern CA - San Francisco\", \"Kaiser Northern CA - South San Francisco\", \"Kaiser Northern CA - Greater Southern Alameda\", \"Kaiser Northern CA - East Bay\", \"Kaiser Northern CA - Marin/Sonoma\", \"Kaiser Northern CA - Redwood City\", \"Kaiser Northern CA - Roseville\", \"Kaiser Northern CA - Sacramento\", \"Kaiser Northern CA - South Sacramento\", \"Kaiser Northern CA - San Jose\", \"Kaiser Northern CA - Santa Clara\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- Other\", \"payor_program_name\": [\"Orange County\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kalos Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"KelseyCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kern Health Systems, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"L.A. Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE St. Francis\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE at Lourdes, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lasso Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LifeWise Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Longevity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lutheran Senior LIFE at Jersey City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MAPFRE Puerto Rico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MVP Health Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Magellan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"MediExcel Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicaid\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medical Card System, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Memorial Hermann Health Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MetroPlus Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Miami Children’s Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Moda Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"MODA\", \"Optum Cares\"] },",
											"{ \"payor_name\": \"Molina Healthcare\", \"payor_program_name\": [\"Optum Standard\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Mutual of Omaha Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"NY Hotel Trades Council and Hotel Association of NYC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Neighborhood Health Plan of Rhode Island, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"No Insurance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"On Lok Lifeways\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Optum\", \"payor_program_name\": [\"Optum\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Oscar Insurance Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Other\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Oxford\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"PACE CNY\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"PacificSource Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"PacificSource - Medicaid\", \"PacificSource - Navigator\", \"PacificSource - SmartChoice\", \"PacificSource - Voyager\"] },",
											"{ \"payor_name\": \"Parkland Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partners Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partnership HealthPlan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Partnership Health Plan\"] },",
											"{ \"payor_name\": \"Physicians Health Plan of Northern Indiana, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Piedmont Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan Medico Bella Vista\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan de Salud Menonita\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Premera Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Presbyterian Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Priority Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Private Pay\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"ProCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Prominence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Providence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - Standard\"] },",
											"{ \"payor_name\": \"Redwood Coast PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Utah\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield of Idaho\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"RiverSpring Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Ryder Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SCAN Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIHO Holding, LLC dba SIHO Insurance Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIMNSA Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Samaritan Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Diego PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Francisco Health Plan (SFHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara County dba Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara Family Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Fe Employe's Hospital Association-Coast Lines\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scott and White Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scripps Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Seaside Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SelectHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Sendero Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Senior Whole Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sentara Health Plans, Inc. (fka Optima Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sharp Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Silver Star Health Network\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"St. Paul's PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stanford Health Care Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stockton PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sunrise Advantage Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sutter Health Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Sutter SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Texas Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Total Senior Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Triple-S Management Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"True Health New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Tufts Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UMR\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UPMC Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Umpqua Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"UnitedHealthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Univera Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VNSNY CHOICE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VillageCareMAX\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Vitality Health Plan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"WEA Trust\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"WellCare Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of Iowa\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of South Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Western Health Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"Western Oregon Advanced Health, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Yamhill Community Care Organization\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] }];",
											"",
											"randomPayor = ld.sample(payor_payor_program_map);",
											"randomPayorName = randomPayor.payor_name;",
											"randomPayorProgramName = ld.sample(randomPayor.payor_program_name);",
											"",
											"console.log(randomPayorName);",
											"console.log(randomPayorProgramName);",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let patientRelationList = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"",
											"pm.environment.set(\"groupId\", \"GRP12345689\");",
											"pm.environment.set(\"subscriberId\", \"SUB12345689\");",
											"pm.environment.set(\"payor\", randomPayorName);",
											"pm.environment.set(\"payorProgram\", randomPayorProgramName);",
											"pm.environment.set(\"stateCode\", ld.sample(statesList));",
											"pm.environment.set(\"coverageStartDate\", moment().format('YYYY-MM-DD'));",
											"pm.environment.set(\"coverageEndDate\", moment().add(6, 'months').format('YYYY-MM-DD'));",
											"pm.environment.set(\"alternativeId\", \"ALT12345689\");",
											"pm.environment.set(\"providerServicesPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientRelationToSubscriber\", ld.sample(patientRelationList));",
											"pm.environment.set(\"subscriberFirstName\", firstName);",
											"pm.environment.set(\"subscriberLastName\", lastName);",
											"pm.environment.set(\"subscriberDateOfBirth\", moment().subtract(10, 'years').format('YYYY-MM-DD'));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4812e54d-2101-41f7-a43e-c177cd1f974a",
										"exec": [
											"var response_text = pm.response.text();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"// pm.test(\"Verify CoverageExternalId is generated\", function () {",
											"//     pm.expect(jsonData.id).length.greaterThan(0);",
											"// });",
											"",
											"pm.environment.set(\"coverageExternalId\", response_text);",
											"console.log(\"response_text\" + response_text)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9b6e7d0d-d620-4441-88aa-4b264705516a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payor\": \"{{payor}}\",\n    \"payorProgram\": \"{{payorProgram}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{groupId}}\",\n    \"subscriberId\": \"{{subscriberId}}\",\n    \"stateCode\": \"{{stateCode}}\",\n    \"startDate\": \"{{coverageStartDate}}\",\n    \"endDate\": \"{{coverageEndDate}}\",\n    \"alternativeId\": \"{{alternativeId}}\",\n    \"customPayorName\": \"\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber}}\",\n    \"patientRelationToSubscriber\": \"{{patientRelationToSubscriber}}\",\n    \"subscriberFirstName\": \"{{subscriberFirstName}}\",\n    \"subscriberLastName\": \"{{subscriberLastName}}\",\n    \"subscriberDateOfBirth\": \"{{subscriberDateOfBirth}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"coverages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode - New",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0eceeae0-8658-40af-892a-0a7de00b0f04",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"New\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\", \"Freeform\", \"Relapse prevention\"];",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6734cd24-abd7-4037-89b5-914e80a7c705",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b8dbcceb-77cc-4f03-9c07-615fe8f0b744",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get clinical profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3958136-9756-4b8c-830a-4f8d42702e94",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"// let expectedResponse = {",
											"//     \"externalId\": pm.environment.get(\"primaryDiagnosisId\"),",
											"//     \"primaryDiagnosis\": null,",
											"//     \"primaryDiagnosisAbbreviation\": null,",
											"//     \"patientStatus\": \"New\"",
											"// };",
											"",
											"pm.test(\"Verify patient status\", function () {",
											"    tests[\"Patient status is: \" + jsonData.patientStatus] = pm.expect(jsonData.patientStatus).to.eql(\"New\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7885e6ca-0d70-4330-9fa6-32a2f727fc44",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"externalId\": \"string\",\n    \"primaryDiagnosis\": \"string\",\n    \"primaryDiagnosisAbbreviation\": \"string\",\n    \"patientStatus\": \"string\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/clinical-profile",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"clinical-profile"
									]
								}
							},
							"response": []
						}
					],
					"id": "40030526-089c-473e-9c51-749dbd96bdd7"
				},
				{
					"name": "Enrolled",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2283da34-693b-429d-b08c-fab778b8e397",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3aa2df22-e337-4abf-8094-37d605bf0136",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "68c4d8d7-24c7-4f5c-86f2-542d217cc363",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add coverage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cfc96572-9c83-4a70-b085-8557376effd8",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"",
											"",
											"let payor_payor_program_map = [{ \"payor_name\": \"AIDS Healthcare Foundation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ATRIO Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aetna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Aetna\"] },",
											"{ \"payor_name\": \"Affinity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeRight Advantage Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeWell New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alameda Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alignment Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AltaMed PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AmeriHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Amida Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Anthem\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Arkansas Blue Cross and Blue Shield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aspire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Asuris Northwest Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Atlanticare LIFE Connection\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Auxilio Salud Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Avera Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bienvivir Senior Health Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Arizona\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Massachusetts\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Michigan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of North Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Alabama\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Illinois\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Louisiana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Minnesota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Mississippi\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Montana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Nebraska\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of North Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Oklahoma\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Rhode Island\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Vermont\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Wyoming\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross of Idaho Health Service, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Shield of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of South Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Tennessee\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brand New Day\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brandman Centers for Senior Care (BCSC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BridgeSpan Health Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bright Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CHRISTUS Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalOptima\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalViva Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Care N' Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareFirst BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareOregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cascade Health Alliance, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Catholic Health LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenCal Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centene\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Center for Elders Independence\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenterLight Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers Plan for Healthy Living (CPHL)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers for Medicare and Medicaid Services (CMS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central California Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central Health Plan of California, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Chinese Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cigna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Cigna\"] },",
											"{ \"payor_name\": \"Clover Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Choice, Inc. (CHC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Group\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Plan of Washington (CHPW)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Complete Senior Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ConnectiCare, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Contra Costa Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cook Children's Health Plan (CCHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Crystal Run Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"DAKOTACARE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Dean Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Dell Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Devoted Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Driscoll Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"EMI Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Eddy SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"El Paso First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ElderONE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Elderplan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Excellus BlueCross BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fallon Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FamilyHealth Center for Older Adults (PACE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"First Medical Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FirstCare Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fresno PACE for Seniors\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"GHI (Emblem Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gary and Mary West PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Geisinger Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gold Coast Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Golden State Medicare Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"HIP/Emblem Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Harvard Pilgrim Health Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health New England, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Joaquin\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Mateo\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Healthfirst\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Horizon Blue Cross Blue Shield of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Horizon BCBS\"] },",
											"{ \"payor_name\": \"Humana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ICHS PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Imperial Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independence Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independent Health Association, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inland Empire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovAge\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovaCare Health Solutions\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inspira LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inter Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan (California)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Kaiser Northern CA - Central Valley\", \"Kaiser Northern CA - Diablo\", \"Kaiser Northern CA - Fresno\", \"Kaiser Northern CA - San Francisco\", \"Kaiser Northern CA - South San Francisco\", \"Kaiser Northern CA - Greater Southern Alameda\", \"Kaiser Northern CA - East Bay\", \"Kaiser Northern CA - Marin/Sonoma\", \"Kaiser Northern CA - Redwood City\", \"Kaiser Northern CA - Roseville\", \"Kaiser Northern CA - Sacramento\", \"Kaiser Northern CA - South Sacramento\", \"Kaiser Northern CA - San Jose\", \"Kaiser Northern CA - Santa Clara\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- Other\", \"payor_program_name\": [\"Orange County\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kalos Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"KelseyCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kern Health Systems, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"L.A. Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE St. Francis\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE at Lourdes, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lasso Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LifeWise Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Longevity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lutheran Senior LIFE at Jersey City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MAPFRE Puerto Rico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MVP Health Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Magellan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"MediExcel Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicaid\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medical Card System, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Memorial Hermann Health Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MetroPlus Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Miami Children’s Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Moda Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"MODA\", \"Optum Cares\"] },",
											"{ \"payor_name\": \"Molina Healthcare\", \"payor_program_name\": [\"Optum Standard\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Mutual of Omaha Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"NY Hotel Trades Council and Hotel Association of NYC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Neighborhood Health Plan of Rhode Island, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"No Insurance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"On Lok Lifeways\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Optum\", \"payor_program_name\": [\"Optum\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Oscar Insurance Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Other\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Oxford\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"PACE CNY\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"PacificSource Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"PacificSource - Medicaid\", \"PacificSource - Navigator\", \"PacificSource - SmartChoice\", \"PacificSource - Voyager\"] },",
											"{ \"payor_name\": \"Parkland Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partners Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partnership HealthPlan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Partnership Health Plan\"] },",
											"{ \"payor_name\": \"Physicians Health Plan of Northern Indiana, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Piedmont Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan Medico Bella Vista\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan de Salud Menonita\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Premera Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Presbyterian Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Priority Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Private Pay\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"ProCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Prominence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Providence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - Standard\"] },",
											"{ \"payor_name\": \"Redwood Coast PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Utah\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield of Idaho\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"RiverSpring Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Ryder Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SCAN Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIHO Holding, LLC dba SIHO Insurance Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIMNSA Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Samaritan Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Diego PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Francisco Health Plan (SFHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara County dba Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara Family Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Fe Employe's Hospital Association-Coast Lines\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scott and White Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scripps Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Seaside Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SelectHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Sendero Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Senior Whole Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sentara Health Plans, Inc. (fka Optima Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sharp Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Silver Star Health Network\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"St. Paul's PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stanford Health Care Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stockton PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sunrise Advantage Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sutter Health Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Sutter SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Texas Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Total Senior Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Triple-S Management Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"True Health New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Tufts Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UMR\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UPMC Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Umpqua Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"UnitedHealthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Univera Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VNSNY CHOICE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VillageCareMAX\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Vitality Health Plan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"WEA Trust\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"WellCare Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of Iowa\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of South Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Western Health Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"Western Oregon Advanced Health, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Yamhill Community Care Organization\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] }];",
											"",
											"randomPayor = ld.sample(payor_payor_program_map);",
											"randomPayorName = randomPayor.payor_name;",
											"randomPayorProgramName = ld.sample(randomPayor.payor_program_name);",
											"",
											"console.log(randomPayorName);",
											"console.log(randomPayorProgramName);",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let patientRelationList = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"",
											"pm.environment.set(\"groupId\", \"GRP12345689\");",
											"pm.environment.set(\"subscriberId\", \"SUB12345689\");",
											"pm.environment.set(\"payor\", randomPayorName);",
											"pm.environment.set(\"payorProgram\", randomPayorProgramName);",
											"pm.environment.set(\"stateCode\", ld.sample(statesList));",
											"pm.environment.set(\"coverageStartDate\", moment().format('YYYY-MM-DD'));",
											"pm.environment.set(\"coverageEndDate\", moment().add(6, 'months').format('YYYY-MM-DD'));",
											"pm.environment.set(\"alternativeId\", \"ALT12345689\");",
											"pm.environment.set(\"providerServicesPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientRelationToSubscriber\", ld.sample(patientRelationList));",
											"pm.environment.set(\"subscriberFirstName\", firstName);",
											"pm.environment.set(\"subscriberLastName\", lastName);",
											"pm.environment.set(\"subscriberDateOfBirth\", moment().subtract(10, 'years').format('YYYY-MM-DD'));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "74176a4a-11f2-4a35-8010-db61c3d75bc3",
										"exec": [
											"var response_text = pm.response.text();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"// pm.test(\"Verify CoverageExternalId is generated\", function () {",
											"//     pm.expect(jsonData.id).length.greaterThan(0);",
											"// });",
											"",
											"pm.environment.set(\"coverageExternalId\", response_text);",
											"console.log(\"response_text\" + response_text)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a34484f7-e647-4651-9e50-cb7db09b98a3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payor\": \"{{payor}}\",\n    \"payorProgram\": \"{{payorProgram}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{groupId}}\",\n    \"subscriberId\": \"{{subscriberId}}\",\n    \"stateCode\": \"{{stateCode}}\",\n    \"startDate\": \"{{coverageStartDate}}\",\n    \"endDate\": \"{{coverageEndDate}}\",\n    \"alternativeId\": \"{{alternativeId}}\",\n    \"customPayorName\": \"\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber}}\",\n    \"patientRelationToSubscriber\": \"{{patientRelationToSubscriber}}\",\n    \"subscriberFirstName\": \"{{subscriberFirstName}}\",\n    \"subscriberLastName\": \"{{subscriberLastName}}\",\n    \"subscriberDateOfBirth\": \"{{subscriberDateOfBirth}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"coverages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode - Enrolled",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "38d85af5-9766-4631-9fa5-1344db67b402",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"Enrolled\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\",\"Freeform\", \"Relapse prevention\"];",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e3917309-e387-44da-8611-6eefd68c2ac8",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4f2f8690-0298-4c74-a18c-a737d4e1825f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get clinical profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eda85bb9-6562-4c13-8994-378d2e8df866",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"// let expectedResponse = {",
											"//     \"externalId\": pm.environment.get(\"primaryDiagnosisId\"),",
											"//     \"primaryDiagnosis\": null,",
											"//     \"primaryDiagnosisAbbreviation\": null,",
											"//     \"patientStatus\": \"New\"",
											"// };",
											"",
											"pm.test(\"Verify patient status\", function () {",
											"    tests[\"Patient status is: \" + jsonData.patientStatus] = pm.expect(jsonData.patientStatus).to.eql(\"Enrolled\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "15e8f6d3-ffa4-443d-ba96-811783a00698",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"externalId\": \"string\",\n    \"primaryDiagnosis\": \"string\",\n    \"primaryDiagnosisAbbreviation\": \"string\",\n    \"patientStatus\": \"string\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/clinical-profile",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"clinical-profile"
									]
								}
							},
							"response": []
						}
					],
					"id": "c142e040-84b1-4e97-a519-2a0bba4b7d0a"
				},
				{
					"name": "Assessing",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "476e4684-167c-419f-9234-c0a1e5237544",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "68bb2732-a0da-4c1a-9416-f471823d2ad9",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c2025267-f061-47ab-8320-84d379cea096",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add coverage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "899d3d14-2063-4ef3-b18d-6928d8bacc53",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"",
											"",
											"let payor_payor_program_map = [{ \"payor_name\": \"AIDS Healthcare Foundation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ATRIO Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aetna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Aetna\"] },",
											"{ \"payor_name\": \"Affinity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeRight Advantage Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeWell New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alameda Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alignment Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AltaMed PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AmeriHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Amida Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Anthem\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Arkansas Blue Cross and Blue Shield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aspire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Asuris Northwest Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Atlanticare LIFE Connection\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Auxilio Salud Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Avera Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bienvivir Senior Health Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Arizona\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Massachusetts\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Michigan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of North Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Alabama\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Illinois\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Louisiana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Minnesota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Mississippi\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Montana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Nebraska\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of North Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Oklahoma\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Rhode Island\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Vermont\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Wyoming\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross of Idaho Health Service, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Shield of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of South Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Tennessee\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brand New Day\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brandman Centers for Senior Care (BCSC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BridgeSpan Health Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bright Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CHRISTUS Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalOptima\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalViva Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Care N' Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareFirst BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareOregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cascade Health Alliance, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Catholic Health LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenCal Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centene\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Center for Elders Independence\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenterLight Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers Plan for Healthy Living (CPHL)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers for Medicare and Medicaid Services (CMS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central California Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central Health Plan of California, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Chinese Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cigna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Cigna\"] },",
											"{ \"payor_name\": \"Clover Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Choice, Inc. (CHC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Group\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Plan of Washington (CHPW)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Complete Senior Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ConnectiCare, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Contra Costa Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cook Children's Health Plan (CCHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Crystal Run Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"DAKOTACARE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Dean Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Dell Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Devoted Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Driscoll Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"EMI Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Eddy SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"El Paso First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ElderONE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Elderplan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Excellus BlueCross BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fallon Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FamilyHealth Center for Older Adults (PACE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"First Medical Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FirstCare Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fresno PACE for Seniors\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"GHI (Emblem Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gary and Mary West PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Geisinger Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gold Coast Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Golden State Medicare Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"HIP/Emblem Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Harvard Pilgrim Health Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health New England, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Joaquin\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Mateo\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Healthfirst\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Horizon Blue Cross Blue Shield of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Horizon BCBS\"] },",
											"{ \"payor_name\": \"Humana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ICHS PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Imperial Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independence Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independent Health Association, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inland Empire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovAge\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovaCare Health Solutions\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inspira LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inter Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan (California)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Kaiser Northern CA - Central Valley\", \"Kaiser Northern CA - Diablo\", \"Kaiser Northern CA - Fresno\", \"Kaiser Northern CA - San Francisco\", \"Kaiser Northern CA - South San Francisco\", \"Kaiser Northern CA - Greater Southern Alameda\", \"Kaiser Northern CA - East Bay\", \"Kaiser Northern CA - Marin/Sonoma\", \"Kaiser Northern CA - Redwood City\", \"Kaiser Northern CA - Roseville\", \"Kaiser Northern CA - Sacramento\", \"Kaiser Northern CA - South Sacramento\", \"Kaiser Northern CA - San Jose\", \"Kaiser Northern CA - Santa Clara\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- Other\", \"payor_program_name\": [\"Orange County\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kalos Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"KelseyCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kern Health Systems, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"L.A. Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE St. Francis\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE at Lourdes, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lasso Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LifeWise Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Longevity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lutheran Senior LIFE at Jersey City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MAPFRE Puerto Rico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MVP Health Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Magellan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"MediExcel Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicaid\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medical Card System, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Memorial Hermann Health Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MetroPlus Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Miami Children’s Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Moda Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"MODA\", \"Optum Cares\"] },",
											"{ \"payor_name\": \"Molina Healthcare\", \"payor_program_name\": [\"Optum Standard\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Mutual of Omaha Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"NY Hotel Trades Council and Hotel Association of NYC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Neighborhood Health Plan of Rhode Island, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"No Insurance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"On Lok Lifeways\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Optum\", \"payor_program_name\": [\"Optum\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Oscar Insurance Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Other\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Oxford\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"PACE CNY\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"PacificSource Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"PacificSource - Medicaid\", \"PacificSource - Navigator\", \"PacificSource - SmartChoice\", \"PacificSource - Voyager\"] },",
											"{ \"payor_name\": \"Parkland Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partners Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partnership HealthPlan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Partnership Health Plan\"] },",
											"{ \"payor_name\": \"Physicians Health Plan of Northern Indiana, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Piedmont Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan Medico Bella Vista\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan de Salud Menonita\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Premera Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Presbyterian Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Priority Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Private Pay\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"ProCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Prominence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Providence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - Standard\"] },",
											"{ \"payor_name\": \"Redwood Coast PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Utah\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield of Idaho\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"RiverSpring Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Ryder Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SCAN Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIHO Holding, LLC dba SIHO Insurance Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIMNSA Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Samaritan Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Diego PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Francisco Health Plan (SFHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara County dba Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara Family Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Fe Employe's Hospital Association-Coast Lines\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scott and White Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scripps Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Seaside Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SelectHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Sendero Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Senior Whole Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sentara Health Plans, Inc. (fka Optima Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sharp Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Silver Star Health Network\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"St. Paul's PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stanford Health Care Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stockton PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sunrise Advantage Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sutter Health Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Sutter SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Texas Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Total Senior Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Triple-S Management Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"True Health New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Tufts Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UMR\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UPMC Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Umpqua Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"UnitedHealthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Univera Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VNSNY CHOICE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VillageCareMAX\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Vitality Health Plan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"WEA Trust\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"WellCare Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of Iowa\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of South Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Western Health Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"Western Oregon Advanced Health, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Yamhill Community Care Organization\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] }];",
											"",
											"randomPayor = ld.sample(payor_payor_program_map);",
											"randomPayorName = randomPayor.payor_name;",
											"randomPayorProgramName = ld.sample(randomPayor.payor_program_name);",
											"",
											"console.log(randomPayorName);",
											"console.log(randomPayorProgramName);",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let patientRelationList = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"",
											"pm.environment.set(\"groupId\", \"GRP12345689\");",
											"pm.environment.set(\"subscriberId\", \"SUB12345689\");",
											"pm.environment.set(\"payor\", randomPayorName);",
											"pm.environment.set(\"payorProgram\", randomPayorProgramName);",
											"pm.environment.set(\"stateCode\", ld.sample(statesList));",
											"pm.environment.set(\"coverageStartDate\", moment().format('YYYY-MM-DD'));",
											"pm.environment.set(\"coverageEndDate\", moment().add(6, 'months').format('YYYY-MM-DD'));",
											"pm.environment.set(\"alternativeId\", \"ALT12345689\");",
											"pm.environment.set(\"providerServicesPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientRelationToSubscriber\", ld.sample(patientRelationList));",
											"pm.environment.set(\"subscriberFirstName\", firstName);",
											"pm.environment.set(\"subscriberLastName\", lastName);",
											"pm.environment.set(\"subscriberDateOfBirth\", moment().subtract(10, 'years').format('YYYY-MM-DD'));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "07919138-a8f2-4a8f-be2b-7aabe6d474bc",
										"exec": [
											"var response_text = pm.response.text();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"// pm.test(\"Verify CoverageExternalId is generated\", function () {",
											"//     pm.expect(jsonData.id).length.greaterThan(0);",
											"// });",
											"",
											"pm.environment.set(\"coverageExternalId\", response_text);",
											"console.log(\"response_text\" + response_text)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "cc7f57fa-04cc-40ff-9997-9600e45857eb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payor\": \"{{payor}}\",\n    \"payorProgram\": \"{{payorProgram}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{groupId}}\",\n    \"subscriberId\": \"{{subscriberId}}\",\n    \"stateCode\": \"{{stateCode}}\",\n    \"startDate\": \"{{coverageStartDate}}\",\n    \"endDate\": \"{{coverageEndDate}}\",\n    \"alternativeId\": \"{{alternativeId}}\",\n    \"customPayorName\": \"\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber}}\",\n    \"patientRelationToSubscriber\": \"{{patientRelationToSubscriber}}\",\n    \"subscriberFirstName\": \"{{subscriberFirstName}}\",\n    \"subscriberLastName\": \"{{subscriberLastName}}\",\n    \"subscriberDateOfBirth\": \"{{subscriberDateOfBirth}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"coverages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode - Assessing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6d3b70c2-ef22-4417-974a-bff02c98da27",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"Assessing\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\",\"Freeform\", \"Relapse prevention\"];",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bf1989a1-a518-4c76-9efe-be2a068f236b",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "de71c18d-6162-4d68-b384-e73cb8f04744",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get clinical profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c117d1db-2fe2-4314-9992-2fbdec945c10",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"// let expectedResponse = {",
											"//     \"externalId\": pm.environment.get(\"primaryDiagnosisId\"),",
											"//     \"primaryDiagnosis\": null,",
											"//     \"primaryDiagnosisAbbreviation\": null,",
											"//     \"patientStatus\": \"New\"",
											"// };",
											"",
											"pm.test(\"Verify patient status\", function () {",
											"    tests[\"Patient status is: \" + jsonData.patientStatus] = pm.expect(jsonData.patientStatus).to.eql(\"Assessing\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4cad8e5c-974b-4291-ba20-f867f67872a3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"externalId\": \"string\",\n    \"primaryDiagnosis\": \"string\",\n    \"primaryDiagnosisAbbreviation\": \"string\",\n    \"patientStatus\": \"string\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/clinical-profile",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"clinical-profile"
									]
								}
							},
							"response": []
						}
					],
					"id": "01431019-2df6-4073-8ec1-878f49baff15"
				},
				{
					"name": "In-treatment",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3df2eda7-c28e-46f2-a47f-7e2d4d595394",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "484b118e-4d03-4369-8a71-9b8a027d60b7",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "341c8e4a-3588-442d-ad3f-908aad8af37c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add coverage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "02b1386f-984c-437d-9f98-fcfb3a902617",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"",
											"",
											"let payor_payor_program_map = [{ \"payor_name\": \"AIDS Healthcare Foundation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ATRIO Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aetna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Aetna\"] },",
											"{ \"payor_name\": \"Affinity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeRight Advantage Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeWell New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alameda Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alignment Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AltaMed PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AmeriHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Amida Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Anthem\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Arkansas Blue Cross and Blue Shield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aspire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Asuris Northwest Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Atlanticare LIFE Connection\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Auxilio Salud Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Avera Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bienvivir Senior Health Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Arizona\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Massachusetts\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Michigan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of North Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Alabama\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Illinois\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Louisiana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Minnesota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Mississippi\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Montana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Nebraska\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of North Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Oklahoma\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Rhode Island\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Vermont\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Wyoming\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross of Idaho Health Service, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Shield of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of South Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Tennessee\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brand New Day\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brandman Centers for Senior Care (BCSC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BridgeSpan Health Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bright Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CHRISTUS Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalOptima\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalViva Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Care N' Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareFirst BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareOregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cascade Health Alliance, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Catholic Health LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenCal Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centene\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Center for Elders Independence\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenterLight Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers Plan for Healthy Living (CPHL)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers for Medicare and Medicaid Services (CMS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central California Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central Health Plan of California, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Chinese Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cigna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Cigna\"] },",
											"{ \"payor_name\": \"Clover Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Choice, Inc. (CHC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Group\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Plan of Washington (CHPW)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Complete Senior Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ConnectiCare, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Contra Costa Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cook Children's Health Plan (CCHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Crystal Run Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"DAKOTACARE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Dean Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Dell Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Devoted Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Driscoll Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"EMI Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Eddy SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"El Paso First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ElderONE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Elderplan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Excellus BlueCross BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fallon Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FamilyHealth Center for Older Adults (PACE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"First Medical Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FirstCare Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fresno PACE for Seniors\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"GHI (Emblem Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gary and Mary West PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Geisinger Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gold Coast Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Golden State Medicare Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"HIP/Emblem Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Harvard Pilgrim Health Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health New England, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Joaquin\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Mateo\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Healthfirst\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Horizon Blue Cross Blue Shield of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Horizon BCBS\"] },",
											"{ \"payor_name\": \"Humana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ICHS PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Imperial Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independence Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independent Health Association, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inland Empire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovAge\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovaCare Health Solutions\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inspira LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inter Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan (California)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Kaiser Northern CA - Central Valley\", \"Kaiser Northern CA - Diablo\", \"Kaiser Northern CA - Fresno\", \"Kaiser Northern CA - San Francisco\", \"Kaiser Northern CA - South San Francisco\", \"Kaiser Northern CA - Greater Southern Alameda\", \"Kaiser Northern CA - East Bay\", \"Kaiser Northern CA - Marin/Sonoma\", \"Kaiser Northern CA - Redwood City\", \"Kaiser Northern CA - Roseville\", \"Kaiser Northern CA - Sacramento\", \"Kaiser Northern CA - South Sacramento\", \"Kaiser Northern CA - San Jose\", \"Kaiser Northern CA - Santa Clara\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- Other\", \"payor_program_name\": [\"Orange County\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kalos Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"KelseyCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kern Health Systems, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"L.A. Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE St. Francis\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE at Lourdes, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lasso Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LifeWise Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Longevity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lutheran Senior LIFE at Jersey City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MAPFRE Puerto Rico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MVP Health Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Magellan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"MediExcel Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicaid\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medical Card System, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Memorial Hermann Health Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MetroPlus Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Miami Children’s Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Moda Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"MODA\", \"Optum Cares\"] },",
											"{ \"payor_name\": \"Molina Healthcare\", \"payor_program_name\": [\"Optum Standard\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Mutual of Omaha Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"NY Hotel Trades Council and Hotel Association of NYC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Neighborhood Health Plan of Rhode Island, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"No Insurance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"On Lok Lifeways\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Optum\", \"payor_program_name\": [\"Optum\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Oscar Insurance Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Other\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Oxford\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"PACE CNY\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"PacificSource Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"PacificSource - Medicaid\", \"PacificSource - Navigator\", \"PacificSource - SmartChoice\", \"PacificSource - Voyager\"] },",
											"{ \"payor_name\": \"Parkland Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partners Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partnership HealthPlan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Partnership Health Plan\"] },",
											"{ \"payor_name\": \"Physicians Health Plan of Northern Indiana, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Piedmont Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan Medico Bella Vista\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan de Salud Menonita\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Premera Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Presbyterian Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Priority Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Private Pay\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"ProCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Prominence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Providence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - Standard\"] },",
											"{ \"payor_name\": \"Redwood Coast PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Utah\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield of Idaho\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"RiverSpring Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Ryder Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SCAN Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIHO Holding, LLC dba SIHO Insurance Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIMNSA Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Samaritan Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Diego PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Francisco Health Plan (SFHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara County dba Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara Family Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Fe Employe's Hospital Association-Coast Lines\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scott and White Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scripps Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Seaside Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SelectHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Sendero Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Senior Whole Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sentara Health Plans, Inc. (fka Optima Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sharp Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Silver Star Health Network\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"St. Paul's PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stanford Health Care Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stockton PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sunrise Advantage Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sutter Health Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Sutter SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Texas Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Total Senior Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Triple-S Management Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"True Health New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Tufts Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UMR\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UPMC Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Umpqua Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"UnitedHealthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Univera Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VNSNY CHOICE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VillageCareMAX\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Vitality Health Plan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"WEA Trust\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"WellCare Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of Iowa\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of South Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Western Health Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"Western Oregon Advanced Health, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Yamhill Community Care Organization\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] }];",
											"",
											"randomPayor = ld.sample(payor_payor_program_map);",
											"randomPayorName = randomPayor.payor_name;",
											"randomPayorProgramName = ld.sample(randomPayor.payor_program_name);",
											"",
											"console.log(randomPayorName);",
											"console.log(randomPayorProgramName);",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let patientRelationList = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"",
											"pm.environment.set(\"groupId\", \"GRP12345689\");",
											"pm.environment.set(\"subscriberId\", \"SUB12345689\");",
											"pm.environment.set(\"payor\", randomPayorName);",
											"pm.environment.set(\"payorProgram\", randomPayorProgramName);",
											"pm.environment.set(\"stateCode\", ld.sample(statesList));",
											"pm.environment.set(\"coverageStartDate\", moment().format('YYYY-MM-DD'));",
											"pm.environment.set(\"coverageEndDate\", moment().add(6, 'months').format('YYYY-MM-DD'));",
											"pm.environment.set(\"alternativeId\", \"ALT12345689\");",
											"pm.environment.set(\"providerServicesPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientRelationToSubscriber\", ld.sample(patientRelationList));",
											"pm.environment.set(\"subscriberFirstName\", firstName);",
											"pm.environment.set(\"subscriberLastName\", lastName);",
											"pm.environment.set(\"subscriberDateOfBirth\", moment().subtract(10, 'years').format('YYYY-MM-DD'));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7167862a-4e7d-4500-862b-a8ed8d288be5",
										"exec": [
											"var response_text = pm.response.text();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"// pm.test(\"Verify CoverageExternalId is generated\", function () {",
											"//     pm.expect(jsonData.id).length.greaterThan(0);",
											"// });",
											"",
											"pm.environment.set(\"coverageExternalId\", response_text);",
											"console.log(\"response_text\" + response_text)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0212d6e7-35f9-4431-a7c7-6539ab45e133",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payor\": \"{{payor}}\",\n    \"payorProgram\": \"{{payorProgram}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{groupId}}\",\n    \"subscriberId\": \"{{subscriberId}}\",\n    \"stateCode\": \"{{stateCode}}\",\n    \"startDate\": \"{{coverageStartDate}}\",\n    \"endDate\": \"{{coverageEndDate}}\",\n    \"alternativeId\": \"{{alternativeId}}\",\n    \"customPayorName\": \"\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber}}\",\n    \"patientRelationToSubscriber\": \"{{patientRelationToSubscriber}}\",\n    \"subscriberFirstName\": \"{{subscriberFirstName}}\",\n    \"subscriberLastName\": \"{{subscriberLastName}}\",\n    \"subscriberDateOfBirth\": \"{{subscriberDateOfBirth}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"coverages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode - In-treatment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d8230b81-d8df-4e29-8b9a-02c2486c108a",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"In-treatment\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\",\"Freeform\", \"Relapse prevention\"];",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c0c3b0f7-aeaf-4e56-9a01-c40894a76241",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b2d104be-675a-4cda-98f5-a51bad5904f8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get clinical profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c07b9c66-408e-4bd2-beb0-fa6a146721ad",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"// let expectedResponse = {",
											"//     \"externalId\": pm.environment.get(\"primaryDiagnosisId\"),",
											"//     \"primaryDiagnosis\": null,",
											"//     \"primaryDiagnosisAbbreviation\": null,",
											"//     \"patientStatus\": \"New\"",
											"// };",
											"",
											"pm.test(\"Verify patient status\", function () {",
											"    tests[\"Patient status is: \" + jsonData.patientStatus] = pm.expect(jsonData.patientStatus).to.eql(\"In-treatment\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "69a80728-8db1-491f-b58c-baac1319673a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"externalId\": \"string\",\n    \"primaryDiagnosis\": \"string\",\n    \"primaryDiagnosisAbbreviation\": \"string\",\n    \"patientStatus\": \"string\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/clinical-profile",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"clinical-profile"
									]
								}
							},
							"response": []
						}
					],
					"id": "5054a42f-d077-4fbf-a248-0ffa97fff286"
				},
				{
					"name": "Closed",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb052076-9e63-496d-bd08-57818dd37b8f",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5e09c0e2-0116-494b-85b6-0010bc2dc681",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "825dd8c1-76c1-4a77-bae5-ea17665da0e3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add coverage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8f32cb3f-57df-45a5-affb-cc31c52cf09b",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"",
											"",
											"let payor_payor_program_map = [{ \"payor_name\": \"AIDS Healthcare Foundation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ATRIO Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aetna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Aetna\"] },",
											"{ \"payor_name\": \"Affinity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeRight Advantage Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeWell New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alameda Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alignment Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AltaMed PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AmeriHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Amida Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Anthem\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Arkansas Blue Cross and Blue Shield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aspire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Asuris Northwest Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Atlanticare LIFE Connection\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Auxilio Salud Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Avera Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bienvivir Senior Health Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Arizona\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Massachusetts\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Michigan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of North Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Alabama\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Illinois\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Louisiana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Minnesota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Mississippi\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Montana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Nebraska\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of North Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Oklahoma\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Rhode Island\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Vermont\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Wyoming\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross of Idaho Health Service, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Shield of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of South Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Tennessee\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brand New Day\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brandman Centers for Senior Care (BCSC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BridgeSpan Health Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bright Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CHRISTUS Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalOptima\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalViva Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Care N' Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareFirst BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareOregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cascade Health Alliance, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Catholic Health LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenCal Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centene\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Center for Elders Independence\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenterLight Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers Plan for Healthy Living (CPHL)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers for Medicare and Medicaid Services (CMS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central California Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central Health Plan of California, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Chinese Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cigna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Cigna\"] },",
											"{ \"payor_name\": \"Clover Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Choice, Inc. (CHC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Group\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Plan of Washington (CHPW)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Complete Senior Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ConnectiCare, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Contra Costa Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cook Children's Health Plan (CCHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Crystal Run Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"DAKOTACARE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Dean Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Dell Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Devoted Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Driscoll Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"EMI Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Eddy SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"El Paso First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ElderONE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Elderplan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Excellus BlueCross BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fallon Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FamilyHealth Center for Older Adults (PACE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"First Medical Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FirstCare Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fresno PACE for Seniors\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"GHI (Emblem Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gary and Mary West PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Geisinger Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gold Coast Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Golden State Medicare Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"HIP/Emblem Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Harvard Pilgrim Health Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health New England, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Joaquin\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Mateo\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Healthfirst\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Horizon Blue Cross Blue Shield of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Horizon BCBS\"] },",
											"{ \"payor_name\": \"Humana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ICHS PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Imperial Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independence Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independent Health Association, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inland Empire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovAge\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovaCare Health Solutions\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inspira LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inter Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan (California)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Kaiser Northern CA - Central Valley\", \"Kaiser Northern CA - Diablo\", \"Kaiser Northern CA - Fresno\", \"Kaiser Northern CA - San Francisco\", \"Kaiser Northern CA - South San Francisco\", \"Kaiser Northern CA - Greater Southern Alameda\", \"Kaiser Northern CA - East Bay\", \"Kaiser Northern CA - Marin/Sonoma\", \"Kaiser Northern CA - Redwood City\", \"Kaiser Northern CA - Roseville\", \"Kaiser Northern CA - Sacramento\", \"Kaiser Northern CA - South Sacramento\", \"Kaiser Northern CA - San Jose\", \"Kaiser Northern CA - Santa Clara\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- Other\", \"payor_program_name\": [\"Orange County\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kalos Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"KelseyCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kern Health Systems, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"L.A. Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE St. Francis\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE at Lourdes, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lasso Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LifeWise Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Longevity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lutheran Senior LIFE at Jersey City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MAPFRE Puerto Rico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MVP Health Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Magellan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"MediExcel Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicaid\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medical Card System, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Memorial Hermann Health Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MetroPlus Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Miami Children’s Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Moda Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"MODA\", \"Optum Cares\"] },",
											"{ \"payor_name\": \"Molina Healthcare\", \"payor_program_name\": [\"Optum Standard\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Mutual of Omaha Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"NY Hotel Trades Council and Hotel Association of NYC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Neighborhood Health Plan of Rhode Island, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"No Insurance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"On Lok Lifeways\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Optum\", \"payor_program_name\": [\"Optum\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Oscar Insurance Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Other\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Oxford\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"PACE CNY\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"PacificSource Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"PacificSource - Medicaid\", \"PacificSource - Navigator\", \"PacificSource - SmartChoice\", \"PacificSource - Voyager\"] },",
											"{ \"payor_name\": \"Parkland Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partners Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partnership HealthPlan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Partnership Health Plan\"] },",
											"{ \"payor_name\": \"Physicians Health Plan of Northern Indiana, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Piedmont Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan Medico Bella Vista\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan de Salud Menonita\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Premera Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Presbyterian Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Priority Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Private Pay\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"ProCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Prominence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Providence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - Standard\"] },",
											"{ \"payor_name\": \"Redwood Coast PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Utah\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield of Idaho\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"RiverSpring Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Ryder Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SCAN Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIHO Holding, LLC dba SIHO Insurance Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIMNSA Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Samaritan Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Diego PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Francisco Health Plan (SFHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara County dba Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara Family Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Fe Employe's Hospital Association-Coast Lines\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scott and White Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scripps Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Seaside Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SelectHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Sendero Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Senior Whole Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sentara Health Plans, Inc. (fka Optima Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sharp Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Silver Star Health Network\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"St. Paul's PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stanford Health Care Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stockton PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sunrise Advantage Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sutter Health Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Sutter SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Texas Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Total Senior Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Triple-S Management Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"True Health New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Tufts Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UMR\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UPMC Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Umpqua Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"UnitedHealthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Univera Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VNSNY CHOICE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VillageCareMAX\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Vitality Health Plan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"WEA Trust\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"WellCare Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of Iowa\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of South Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Western Health Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"Western Oregon Advanced Health, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Yamhill Community Care Organization\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] }];",
											"",
											"randomPayor = ld.sample(payor_payor_program_map);",
											"randomPayorName = randomPayor.payor_name;",
											"randomPayorProgramName = ld.sample(randomPayor.payor_program_name);",
											"",
											"console.log(randomPayorName);",
											"console.log(randomPayorProgramName);",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let patientRelationList = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"",
											"pm.environment.set(\"groupId\", \"GRP12345689\");",
											"pm.environment.set(\"subscriberId\", \"SUB12345689\");",
											"pm.environment.set(\"payor\", randomPayorName);",
											"pm.environment.set(\"payorProgram\", randomPayorProgramName);",
											"pm.environment.set(\"stateCode\", ld.sample(statesList));",
											"pm.environment.set(\"coverageStartDate\", moment().format('YYYY-MM-DD'));",
											"pm.environment.set(\"coverageEndDate\", moment().add(6, 'months').format('YYYY-MM-DD'));",
											"pm.environment.set(\"alternativeId\", \"ALT12345689\");",
											"pm.environment.set(\"providerServicesPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientRelationToSubscriber\", ld.sample(patientRelationList));",
											"pm.environment.set(\"subscriberFirstName\", firstName);",
											"pm.environment.set(\"subscriberLastName\", lastName);",
											"pm.environment.set(\"subscriberDateOfBirth\", moment().subtract(10, 'years').format('YYYY-MM-DD'));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3e8f0db9-0829-41cd-941c-378087b0aa7c",
										"exec": [
											"var response_text = pm.response.text();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"// pm.test(\"Verify CoverageExternalId is generated\", function () {",
											"//     pm.expect(jsonData.id).length.greaterThan(0);",
											"// });",
											"",
											"pm.environment.set(\"coverageExternalId\", response_text);",
											"console.log(\"response_text\" + response_text)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "76e43cf3-2da2-472e-bdee-ef005a22dfe4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payor\": \"{{payor}}\",\n    \"payorProgram\": \"{{payorProgram}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{groupId}}\",\n    \"subscriberId\": \"{{subscriberId}}\",\n    \"stateCode\": \"{{stateCode}}\",\n    \"startDate\": \"{{coverageStartDate}}\",\n    \"endDate\": \"{{coverageEndDate}}\",\n    \"alternativeId\": \"{{alternativeId}}\",\n    \"customPayorName\": \"\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber}}\",\n    \"patientRelationToSubscriber\": \"{{patientRelationToSubscriber}}\",\n    \"subscriberFirstName\": \"{{subscriberFirstName}}\",\n    \"subscriberLastName\": \"{{subscriberLastName}}\",\n    \"subscriberDateOfBirth\": \"{{subscriberDateOfBirth}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"coverages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode - Closed",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "273777b4-4efa-402c-be8b-1cfae32dc580",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"Closed\"];",
											"let treatmentProgramList = [\"Equip treatment\",\"Freeform\", \"Relapse prevention\"];",
											"let closedReasonList = [\"Declined - Chose HLOC (IOP/PHP/RTC)\", \"Declined - Chose new outpt team\", \"Declined - Continue w current team\", \"Declined - Unknown tx choice\", \"Discharged - Admin - Change in payor\", \"Discharged - Admin - Disengaged\", \"Discharged - Admin - Financial\", \"Discharged - Admin - Ins denial\", \"Discharged - AEA - Declined relapse prevention\", \"Discharged - AEA - No care\", \"Discharged - AEA - Inpatient\", \"Discharged - AEA - Outpatient\", \"Discharged - AEA - PHP\", \"Discharged - AEA - RTC\", \"Discharged - HLOC - Inpt med\", \"Discharged - HLOC - Inpt psych\", \"Discharged - HLOC - IOP\", \"Discharged - HLOC - PHP\", \"Discharged - HLOC - RTC\", \"MIA - Lost contact\", \"MIA - No contact\", \"Not eligible - Wrong age\", \"Not eligible - Wrong state\", \"Not qualified - Equip referred to clinical HLOC\", \"Not qualified - Equip referred to medical HLOC\", \"Not qualified - Family unwilling to participate in tx\", \"Not qualified - Financial - Insurance not in-network\", \"Not qualified - No eating disorder\", \"Not qualified - Not living with family\", \"Declined - Admin/Equip delay\", \"Not qualified - Financial - Can't afford OOP $\", \"Contemplative\"];",
											"",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodeClosedDate = moment(episodeStartDate).add(7, 'days').format('YYYY-MM-DD');",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"pm.environment.set(\"cdsEpisodeClosedDate\", episodeClosedDate);",
											"pm.environment.set(\"statusReason\", ld.sample(closedReasonList));",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d2d3f0d3-f921-47f2-9026-427c43d861d7",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bffe8a37-5211-4bc7-b4fc-58eb394e85a4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"{{cdsEpisodeClosedDate}}\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"{{statusReason}}\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get clinical profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5699d0ae-4dab-480d-9bb6-d641240b13c9",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"// let expectedResponse = {",
											"//     \"externalId\": pm.environment.get(\"primaryDiagnosisId\"),",
											"//     \"primaryDiagnosis\": null,",
											"//     \"primaryDiagnosisAbbreviation\": null,",
											"//     \"patientStatus\": \"New\"",
											"// };",
											"",
											"pm.test(\"Verify patient status\", function () {",
											"    tests[\"Patient status is: \" + jsonData.patientStatus] = pm.expect(jsonData.patientStatus).to.eql(\"Closed\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a5ee2203-b512-4612-a4b2-10d9122faeb8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"externalId\": \"string\",\n    \"primaryDiagnosis\": \"string\",\n    \"primaryDiagnosisAbbreviation\": \"string\",\n    \"patientStatus\": \"string\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/clinical-profile",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"clinical-profile"
									]
								}
							},
							"response": []
						}
					],
					"id": "79e88912-1802-4bca-8ba7-480fd4ee669e"
				},
				{
					"name": "Paused",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19465e5b-826e-42f1-bc9a-98bd76c07ae3",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c4baf0f2-000c-47fb-9b64-73ab589bf04d",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6cc6da39-00e6-441f-9854-9ee0d332f29a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add coverage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "385a829b-f6c1-4341-a930-0f81f79b33b7",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"",
											"",
											"let payor_payor_program_map = [{ \"payor_name\": \"AIDS Healthcare Foundation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ATRIO Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aetna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Aetna\"] },",
											"{ \"payor_name\": \"Affinity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeRight Advantage Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeWell New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alameda Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alignment Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AltaMed PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AmeriHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Amida Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Anthem\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Arkansas Blue Cross and Blue Shield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aspire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Asuris Northwest Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Atlanticare LIFE Connection\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Auxilio Salud Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Avera Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bienvivir Senior Health Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Arizona\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Massachusetts\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Michigan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of North Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Alabama\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Illinois\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Louisiana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Minnesota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Mississippi\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Montana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Nebraska\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of North Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Oklahoma\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Rhode Island\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Vermont\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Wyoming\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross of Idaho Health Service, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Shield of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of South Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Tennessee\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brand New Day\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brandman Centers for Senior Care (BCSC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BridgeSpan Health Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bright Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CHRISTUS Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalOptima\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalViva Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Care N' Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareFirst BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareOregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cascade Health Alliance, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Catholic Health LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenCal Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centene\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Center for Elders Independence\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenterLight Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers Plan for Healthy Living (CPHL)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers for Medicare and Medicaid Services (CMS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central California Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central Health Plan of California, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Chinese Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cigna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Cigna\"] },",
											"{ \"payor_name\": \"Clover Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Choice, Inc. (CHC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Group\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Plan of Washington (CHPW)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Complete Senior Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ConnectiCare, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Contra Costa Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cook Children's Health Plan (CCHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Crystal Run Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"DAKOTACARE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Dean Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Dell Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Devoted Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Driscoll Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"EMI Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Eddy SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"El Paso First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ElderONE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Elderplan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Excellus BlueCross BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fallon Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FamilyHealth Center for Older Adults (PACE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"First Medical Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FirstCare Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fresno PACE for Seniors\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"GHI (Emblem Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gary and Mary West PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Geisinger Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gold Coast Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Golden State Medicare Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"HIP/Emblem Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Harvard Pilgrim Health Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health New England, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Joaquin\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Mateo\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Healthfirst\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Horizon Blue Cross Blue Shield of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Horizon BCBS\"] },",
											"{ \"payor_name\": \"Humana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ICHS PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Imperial Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independence Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independent Health Association, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inland Empire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovAge\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovaCare Health Solutions\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inspira LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inter Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan (California)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Kaiser Northern CA - Central Valley\", \"Kaiser Northern CA - Diablo\", \"Kaiser Northern CA - Fresno\", \"Kaiser Northern CA - San Francisco\", \"Kaiser Northern CA - South San Francisco\", \"Kaiser Northern CA - Greater Southern Alameda\", \"Kaiser Northern CA - East Bay\", \"Kaiser Northern CA - Marin/Sonoma\", \"Kaiser Northern CA - Redwood City\", \"Kaiser Northern CA - Roseville\", \"Kaiser Northern CA - Sacramento\", \"Kaiser Northern CA - South Sacramento\", \"Kaiser Northern CA - San Jose\", \"Kaiser Northern CA - Santa Clara\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- Other\", \"payor_program_name\": [\"Orange County\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kalos Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"KelseyCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kern Health Systems, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"L.A. Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE St. Francis\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE at Lourdes, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lasso Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LifeWise Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Longevity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lutheran Senior LIFE at Jersey City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MAPFRE Puerto Rico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MVP Health Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Magellan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"MediExcel Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicaid\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medical Card System, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Memorial Hermann Health Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MetroPlus Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Miami Children’s Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Moda Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"MODA\", \"Optum Cares\"] },",
											"{ \"payor_name\": \"Molina Healthcare\", \"payor_program_name\": [\"Optum Standard\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Mutual of Omaha Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"NY Hotel Trades Council and Hotel Association of NYC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Neighborhood Health Plan of Rhode Island, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"No Insurance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"On Lok Lifeways\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Optum\", \"payor_program_name\": [\"Optum\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Oscar Insurance Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Other\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Oxford\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"PACE CNY\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"PacificSource Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"PacificSource - Medicaid\", \"PacificSource - Navigator\", \"PacificSource - SmartChoice\", \"PacificSource - Voyager\"] },",
											"{ \"payor_name\": \"Parkland Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partners Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partnership HealthPlan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Partnership Health Plan\"] },",
											"{ \"payor_name\": \"Physicians Health Plan of Northern Indiana, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Piedmont Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan Medico Bella Vista\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan de Salud Menonita\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Premera Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Presbyterian Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Priority Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Private Pay\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"ProCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Prominence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Providence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - Standard\"] },",
											"{ \"payor_name\": \"Redwood Coast PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Utah\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield of Idaho\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"RiverSpring Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Ryder Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SCAN Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIHO Holding, LLC dba SIHO Insurance Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIMNSA Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Samaritan Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Diego PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Francisco Health Plan (SFHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara County dba Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara Family Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Fe Employe's Hospital Association-Coast Lines\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scott and White Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scripps Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Seaside Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SelectHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Sendero Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Senior Whole Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sentara Health Plans, Inc. (fka Optima Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sharp Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Silver Star Health Network\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"St. Paul's PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stanford Health Care Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stockton PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sunrise Advantage Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sutter Health Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Sutter SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Texas Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Total Senior Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Triple-S Management Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"True Health New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Tufts Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UMR\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UPMC Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Umpqua Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"UnitedHealthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Univera Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VNSNY CHOICE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VillageCareMAX\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Vitality Health Plan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"WEA Trust\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"WellCare Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of Iowa\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of South Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Western Health Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"Western Oregon Advanced Health, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Yamhill Community Care Organization\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] }];",
											"",
											"randomPayor = ld.sample(payor_payor_program_map);",
											"randomPayorName = randomPayor.payor_name;",
											"randomPayorProgramName = ld.sample(randomPayor.payor_program_name);",
											"",
											"console.log(randomPayorName);",
											"console.log(randomPayorProgramName);",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let patientRelationList = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"",
											"pm.environment.set(\"groupId\", \"GRP12345689\");",
											"pm.environment.set(\"subscriberId\", \"SUB12345689\");",
											"pm.environment.set(\"payor\", randomPayorName);",
											"pm.environment.set(\"payorProgram\", randomPayorProgramName);",
											"pm.environment.set(\"stateCode\", ld.sample(statesList));",
											"pm.environment.set(\"coverageStartDate\", moment().format('YYYY-MM-DD'));",
											"pm.environment.set(\"coverageEndDate\", moment().add(6, 'months').format('YYYY-MM-DD'));",
											"pm.environment.set(\"alternativeId\", \"ALT12345689\");",
											"pm.environment.set(\"providerServicesPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientRelationToSubscriber\", ld.sample(patientRelationList));",
											"pm.environment.set(\"subscriberFirstName\", firstName);",
											"pm.environment.set(\"subscriberLastName\", lastName);",
											"pm.environment.set(\"subscriberDateOfBirth\", moment().subtract(10, 'years').format('YYYY-MM-DD'));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "eef01d4f-3b24-4c8a-9411-6fdb3a102c2a",
										"exec": [
											"var response_text = pm.response.text();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"// pm.test(\"Verify CoverageExternalId is generated\", function () {",
											"//     pm.expect(jsonData.id).length.greaterThan(0);",
											"// });",
											"",
											"pm.environment.set(\"coverageExternalId\", response_text);",
											"console.log(\"response_text\" + response_text)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "19b269db-9db1-4a63-8799-519d77237e70",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payor\": \"{{payor}}\",\n    \"payorProgram\": \"{{payorProgram}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{groupId}}\",\n    \"subscriberId\": \"{{subscriberId}}\",\n    \"stateCode\": \"{{stateCode}}\",\n    \"startDate\": \"{{coverageStartDate}}\",\n    \"endDate\": \"{{coverageEndDate}}\",\n    \"alternativeId\": \"{{alternativeId}}\",\n    \"customPayorName\": \"\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber}}\",\n    \"patientRelationToSubscriber\": \"{{patientRelationToSubscriber}}\",\n    \"subscriberFirstName\": \"{{subscriberFirstName}}\",\n    \"subscriberLastName\": \"{{subscriberLastName}}\",\n    \"subscriberDateOfBirth\": \"{{subscriberDateOfBirth}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"coverages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode - Paused",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "227cd488-242c-452a-8205-1730140a1c02",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"Paused\"];",
											"let treatmentProgramList = [\"Equip treatment\",\"Freeform\", \"Relapse prevention\"];",
											"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
											"",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
											"let episodePausedEndDate = moment(episodePausedStartDate).add(14, 'days').format('YYYY-MM-DD');",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"// pm.environment.set(\"cdsEpisodeClosedDate\", episodeClosedDate);",
											"// pm.environment.set(\"statusReason\", ld.sample(pausedStatusReasonList));",
											"",
											"//Paused details",
											"// \"open\": true,",
											"//     \"externalId\": \"string\",",
											"//         \"adminEpisodeExternalId\": \"string\",",
											"//             \"startDate\": \"2022-09-09\",",
											"//                 \"endDate\": \"2022-09-09\",",
											"pm.environment.set(\"pausedStartDate\", episodePausedStartDate);",
											"pm.environment.set(\"pausedEndDate\", episodePausedEndDate);",
											"pm.environment.set(\"pausedReason\", ld.sample(pausedReasonList));",
											"",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2ad08c9b-4ed3-444d-836c-816eacba4ce1",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f40ebdd5-2860-4643-a4c3-dfd529a73485",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate}}\",\n            \"endDate\": \"{{pausedEndDate}}\",\n            \"pausedReason\": \"{{pausedReason}}\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get clinical profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee4f896d-0b3a-4dcd-9139-e695eef4caed",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify patient status\", function () {",
											"    tests[\"Patient status is: \" + jsonData.patientStatus] = pm.expect(jsonData.patientStatus).to.eql(\"Paused\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f7a82f64-f234-4239-80a6-2ecb94f794a7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"externalId\": \"string\",\n    \"primaryDiagnosis\": \"string\",\n    \"primaryDiagnosisAbbreviation\": \"string\",\n    \"patientStatus\": \"string\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/clinical-profile",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"clinical-profile"
									]
								}
							},
							"response": []
						}
					],
					"id": "c27a7196-bcf9-489a-950e-e798a5e7b9e5"
				}
			],
			"id": "cba61631-e419-4577-bef1-f82ec2a87e50"
		},
		{
			"name": "Soft delete paused details",
			"item": [
				{
					"name": "Add Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9ceca2b8-b6b2-45da-be59-5bbf23eda83a",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"patientId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "04fe0f37-7dff-495a-9d01-36feb0b6cf73",
								"exec": [
									"let ld = require('lodash');",
									"",
									"let gendersList = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"let pronounsList = [",
									"    \"He/Him/His\",",
									"    \"She/Her/Hers\",",
									"    \"They/Them/Theirs\",",
									"    \"Other\"",
									"];",
									"",
									"let ethnicitiesList = [",
									"    \"Asian\",",
									"    \"Black/African American\",",
									"    \"White/Caucasian\",",
									"    \"Hispanic/Latinx\",",
									"    \"Native American, Indian American, or Alaska Native\",",
									"    \"Native Hawaiian or other Pacific Islander\",",
									"    \"Middle Eastern or North African\",",
									"    \"Prefer not to answer\",",
									"    \"Other\"",
									"];",
									"",
									"let languagesList = [",
									"    \"English\",",
									"    \"Spanish\",",
									"    \"Chinese\",",
									"    \"French\",",
									"    \"Tagalog\",",
									"    \"Vietnamese\",",
									"    \"Korean\",",
									"    \"German\",",
									"    \"Russian\",",
									"    \"Italian\",",
									"    \"Portuguese\",",
									"    \"Polish\",",
									"    \"Japanese\",",
									"    \"Persian\",",
									"    \"Greek\",",
									"    \"Serbo-Croatian\",",
									"    \"Armenian\",",
									"    \"Yiddish\",",
									"    \"American Sign Language (ASL)\"",
									"];",
									"",
									"let sexList = [",
									"    \"Male\",",
									"    \"Female\"",
									"];",
									"",
									"let timezonesList = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\"",
									"];",
									"",
									"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"patientFirstName\", firstName);",
									"pm.environment.set(\"patientLastName\", lastName);",
									"pm.environment.set(\"patientEmail\", email);",
									"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientChosenName\", chosenName);",
									"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
									"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
									"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientCountry\", \"US\");",
									"pm.environment.set(\"patientZip\", zip.toString());",
									"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
									"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
									"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
									"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
									"pm.environment.set(\"patientSex\", ld.sample(sexList));",
									"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
									"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3d487368-dee3-41ec-8073-35abdcd9d71c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add coverage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "98c4580e-4c7c-4f1c-bbb5-e909381e87bd",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"",
									"",
									"let payor_payor_program_map = [{ \"payor_name\": \"AIDS Healthcare Foundation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"ATRIO Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Aetna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Aetna\"] },",
									"{ \"payor_name\": \"Affinity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"AgeRight Advantage Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"AgeWell New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Alameda Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Alignment Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"AltaMed PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"AmeriHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Amida Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Anthem\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Arkansas Blue Cross and Blue Shield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Aspire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Asuris Northwest Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Atlanticare LIFE Connection\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Auxilio Salud Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Avera Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Bienvivir Senior Health Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross Blue Shield of Arizona\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross Blue Shield of Massachusetts\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross Blue Shield of Michigan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross Blue Shield of North Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Alabama\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Illinois\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Louisiana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Minnesota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Mississippi\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Montana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Nebraska\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of North Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Oklahoma\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Rhode Island\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Vermont\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross and Blue Shield of Wyoming\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Cross of Idaho Health Service, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Blue Shield of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
									"{ \"payor_name\": \"BlueCross BlueShield of South Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"BlueCross BlueShield of Tennessee\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Brand New Day\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Brandman Centers for Senior Care (BCSC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"BridgeSpan Health Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Bright Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CHRISTUS Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CalOptima\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CalViva Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Care N' Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CareFirst BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CareOregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Cascade Health Alliance, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Catholic Health LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CenCal Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Centene\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Center for Elders Independence\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"CenterLight Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Centers Plan for Healthy Living (CPHL)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Centers for Medicare and Medicaid Services (CMS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Central California Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Central Health Plan of California, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Chinese Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Cigna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Cigna\"] },",
									"{ \"payor_name\": \"Clover Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Community Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Community First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Community Health Choice, Inc. (CHC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Community Health Group\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Community Health Plan of Washington (CHPW)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Complete Senior Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"ConnectiCare, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Contra Costa Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Cook Children's Health Plan (CCHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Crystal Run Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"DAKOTACARE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Dean Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Dell Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Devoted Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Driscoll Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"EMI Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Eddy SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"El Paso First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"ElderONE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Elderplan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Excellus BlueCross BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Fallon Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"FamilyHealth Center for Older Adults (PACE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"First Medical Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"FirstCare Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Fresno PACE for Seniors\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"GHI (Emblem Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Gary and Mary West PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Geisinger Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Gold Coast Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Golden State Medicare Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"HIP/Emblem Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Harvard Pilgrim Health Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Health New England, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Health Plan of San Joaquin\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Health Plan of San Mateo\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Healthfirst\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Highmark BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Highmark Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Horizon Blue Cross Blue Shield of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Horizon BCBS\"] },",
									"{ \"payor_name\": \"Humana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"ICHS PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Imperial Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Independence Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Independent Health Association, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Inland Empire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"InnovAge\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"InnovaCare Health Solutions\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Inspira LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Inter Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Kaiser Foundation Health Plan (California)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Kaiser Northern CA - Central Valley\", \"Kaiser Northern CA - Diablo\", \"Kaiser Northern CA - Fresno\", \"Kaiser Northern CA - San Francisco\", \"Kaiser Northern CA - South San Francisco\", \"Kaiser Northern CA - Greater Southern Alameda\", \"Kaiser Northern CA - East Bay\", \"Kaiser Northern CA - Marin/Sonoma\", \"Kaiser Northern CA - Redwood City\", \"Kaiser Northern CA - Roseville\", \"Kaiser Northern CA - Sacramento\", \"Kaiser Northern CA - South Sacramento\", \"Kaiser Northern CA - San Jose\", \"Kaiser Northern CA - Santa Clara\"] },",
									"{ \"payor_name\": \"Kaiser Foundation Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- Other\", \"payor_program_name\": [\"Orange County\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Kalos Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"KelseyCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Kern Health Systems, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"L.A. Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"LIFE St. Francis\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"LIFE at Lourdes, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Lasso Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"LifeWise Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Longevity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Lutheran Senior LIFE at Jersey City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"MAPFRE Puerto Rico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"MVP Health Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Magellan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"MediExcel Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Medicaid\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Medical Card System, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Medicare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Memorial Hermann Health Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"MetroPlus Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Miami Children’s Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Moda Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"MODA\", \"Optum Cares\"] },",
									"{ \"payor_name\": \"Molina Healthcare\", \"payor_program_name\": [\"Optum Standard\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Mutual of Omaha Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"NY Hotel Trades Council and Hotel Association of NYC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Neighborhood Health Plan of Rhode Island, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"No Insurance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"On Lok Lifeways\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Optum\", \"payor_program_name\": [\"Optum\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Oscar Insurance Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Other\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Oxford\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"PACE CNY\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"PacificSource Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"PacificSource - Medicaid\", \"PacificSource - Navigator\", \"PacificSource - SmartChoice\", \"PacificSource - Voyager\"] },",
									"{ \"payor_name\": \"Parkland Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Partners Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Partnership HealthPlan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Partnership Health Plan\"] },",
									"{ \"payor_name\": \"Physicians Health Plan of Northern Indiana, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Piedmont Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Plan Medico Bella Vista\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Plan de Salud Menonita\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Premera Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Presbyterian Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Priority Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Private Pay\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"ProCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Prominence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Providence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - Standard\"] },",
									"{ \"payor_name\": \"Redwood Coast PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Regence BlueCross BlueShield of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Regence BlueCross BlueShield of Utah\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Regence BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Regence BlueShield of Idaho\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"RiverSpring Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Ryder Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"SCAN Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"SIHO Holding, LLC dba SIHO Insurance Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"SIMNSA Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Samaritan Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"San Diego PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"San Francisco Health Plan (SFHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Santa Clara County dba Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Santa Clara Family Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Santa Fe Employe's Hospital Association-Coast Lines\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Scott and White Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Scripps Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Seaside Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"SelectHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Sendero Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Senior Whole Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Sentara Health Plans, Inc. (fka Optima Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Sharp Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Silver Star Health Network\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"St. Paul's PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Stanford Health Care Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"State of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Stockton PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Sunrise Advantage Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Sutter Health Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
									"{ \"payor_name\": \"Sutter SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Texas Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Total Senior Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Triple-S Management Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"True Health New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Tufts Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"UCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"UMR\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"UPMC Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Umpqua Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"UnitedHealthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
									"{ \"payor_name\": \"Univera Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"VNSNY CHOICE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"VillageCareMAX\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Vitality Health Plan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"WEA Trust\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"WellCare Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of Iowa\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of South Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
									"{ \"payor_name\": \"Western Health Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
									"{ \"payor_name\": \"Western Oregon Advanced Health, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
									"{ \"payor_name\": \"Yamhill Community Care Organization\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] }];",
									"",
									"randomPayor = ld.sample(payor_payor_program_map);",
									"randomPayorName = randomPayor.payor_name;",
									"randomPayorProgramName = ld.sample(randomPayor.payor_program_name);",
									"",
									"console.log(randomPayorName);",
									"console.log(randomPayorProgramName);",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let patientRelationList = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"pm.environment.set(\"groupId\", \"GRP12345689\");",
									"pm.environment.set(\"subscriberId\", \"SUB12345689\");",
									"pm.environment.set(\"payor\", randomPayorName);",
									"pm.environment.set(\"payorProgram\", randomPayorProgramName);",
									"pm.environment.set(\"stateCode\", ld.sample(statesList));",
									"pm.environment.set(\"coverageStartDate\", moment().format('YYYY-MM-DD'));",
									"pm.environment.set(\"coverageEndDate\", moment().add(6, 'months').format('YYYY-MM-DD'));",
									"pm.environment.set(\"alternativeId\", \"ALT12345689\");",
									"pm.environment.set(\"providerServicesPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"pm.environment.set(\"patientRelationToSubscriber\", ld.sample(patientRelationList));",
									"pm.environment.set(\"subscriberFirstName\", firstName);",
									"pm.environment.set(\"subscriberLastName\", lastName);",
									"pm.environment.set(\"subscriberDateOfBirth\", moment().subtract(10, 'years').format('YYYY-MM-DD'));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "437ed791-69dd-47e7-bee5-4f37d40a53c4",
								"exec": [
									"var response_text = pm.response.text();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"// pm.test(\"Verify CoverageExternalId is generated\", function () {",
									"//     pm.expect(jsonData.id).length.greaterThan(0);",
									"// });",
									"",
									"pm.environment.set(\"coverageExternalId\", response_text);",
									"console.log(\"response_text\" + response_text)"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "bdb3e1ad-7d46-4810-aabd-5f3de09a6645",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payor\": \"{{payor}}\",\n    \"payorProgram\": \"{{payorProgram}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{groupId}}\",\n    \"subscriberId\": \"{{subscriberId}}\",\n    \"stateCode\": \"{{stateCode}}\",\n    \"startDate\": \"{{coverageStartDate}}\",\n    \"endDate\": \"{{coverageEndDate}}\",\n    \"alternativeId\": \"{{alternativeId}}\",\n    \"customPayorName\": \"\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber}}\",\n    \"patientRelationToSubscriber\": \"{{patientRelationToSubscriber}}\",\n    \"subscriberFirstName\": \"{{subscriberFirstName}}\",\n    \"subscriberLastName\": \"{{subscriberLastName}}\",\n    \"subscriberDateOfBirth\": \"{{subscriberDateOfBirth}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"coverages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add episode with Paused details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "74483a53-e62b-4805-9613-ae9763263234",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"let episodeStatusList = [\"In-treatment\"];",
									"let treatmentProgramList = [\"Equip treatment\",\"Freeform\", \"Relapse prevention\"];",
									"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
									"",
									"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
									"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
									"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
									"",
									"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
									"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
									"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
									"let episodePausedEndDate = moment(episodePausedStartDate).add(5, 'days').format('YYYY-MM-DD');",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
									"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
									"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
									"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
									"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
									"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
									"// pm.environment.set(\"cdsEpisodeClosedDate\", episodeClosedDate);",
									"// pm.environment.set(\"statusReason\", ld.sample(pausedStatusReasonList));",
									"",
									"//Paused details",
									"pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
									"pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
									"pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
									"",
									"//Authorization details",
									"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
									"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
									"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Medical clearance details",
									"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
									"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Insurance verification details",
									"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
									"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6a4ef148-7e30-4bbc-9a32-d91ed4764a6b",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"//set episodeExternalId to be used in next request",
									"pm.environment.set(\"episodeExternalId\", pm.response.text());",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "64ceb2ec-83c3-4e34-bc70-eff44114a9f3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate_1}}\",\n            \"endDate\": \"{{pausedEndDate_1}}\",\n            \"pausedReason\": \"{{pausedReason_1}}\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get episode after add",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d8e8337-e587-46b4-8667-a9c1bb27a3cf",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.a('number');",
									"        pm.expect(jsonData[i][\"level\"]).to.be.a('string');",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['authorizationNumber']).to.be.a('string');",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['startDate']).to.be.a('string');",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['endDate']).to.be.a('string');",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['coverageExternalId']).to.be.a('string');",
									"    }",
									"});",
									"",
									"pm.test(\"Verify episode status values\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.eql(pm.environment.get(\"patientId\"));",
									"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.eql(pm.environment.get(\"episodeExternalId\"));",
									"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.eql(pm.environment.get(\"cdsTreatmentProgramName\"));",
									"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStatus\"));",
									"        pm.expect(jsonData[i][\"statusReason\"]).to.be.eql(null);",
									"        pm.expect(jsonData[i][\"payorName\"]).to.be.eql(null);",
									"        pm.expect(jsonData[i][\"payorProgramName\"]).to.be.eql(null);",
									"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStartDate\"));",
									"        pm.expect(jsonData[i][\"episodeClosedDate\"]).to.be.eql(null);",
									"        pm.expect(jsonData[i][\"firstInquiryReferralDate\"]).to.be.eql(pm.environment.get(\"firstInquiryReferralDate\"));",
									"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.eql(pm.environment.get(\"cdsLengthInWeeks\"));",
									"        pm.expect(jsonData[i][\"level\"]).to.be.eql(pm.environment.get(\"cdsLevel\"));",
									"",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['authorizationNumber']).to.be.eql(pm.environment.get(\"authorizationNumber\"));",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['startDate']).to.be.eql(pm.environment.get(\"authorizationStartDate\"));",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['endDate']).to.be.eql(pm.environment.get(\"authorizationEndDate\"));",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['coverageExternalId']).to.be.eql(pm.environment.get(\"coverageExternalId\"));",
									"        // pm.expect(jsonData[i]['authorizationDetails'][i][\"payorProgram\"]).to.be.eql(null);",
									"        pm.expect(jsonData[i]['authorizationDetails'][i][\"approvedSessions\"]).to.be.eql(12);",
									"        pm.expect(jsonData[i]['authorizationDetails'][i][\"approvedSessionUnits\"]).to.be.eql(\"days\");",
									"        pm.expect(jsonData[i]['authorizationDetails'][i][\"isAuthRequired\"]).to.be.eql(true);",
									"",
									"        pm.expect(jsonData[i]['pausedDetails'][i][\"startDate\"]).to.be.eql(pm.environment.get(\"pausedStartDate_1\"));",
									"        pm.expect(jsonData[i]['pausedDetails'][i][\"endDate\"]).to.be.eql(pm.environment.get(\"pausedEndDate_1\"));",
									"        pm.expect(jsonData[i]['pausedDetails'][i][\"pausedReason\"]).to.be.eql(pm.environment.get(\"pausedReason_1\"));",
									"        // pm.expect(jsonData[i]['pausedDetails'][i][\"open\"]).to.be.eql(false);",
									"",
									"    }",
									"});",
									"",
									"//set externalId to be used in next request",
									"pm.environment.set(\"cdsExternalId\", jsonData[0]['authorizationDetails'][0]['externalId']);",
									"pm.environment.set(\"pausedDetailsExternalId\", jsonData[0]['pausedDetails'][0]['externalId']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b2b5eceb-a9da-4237-834b-c61f16c4f2f5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Soft delete paused details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c38e5017-b76c-4bf6-a5ad-db38dac40290",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"let episodeStatusList = [\"In-treatment\"];",
									"let treatmentProgramList = [\"Equip treatment\"];",
									"let closedReasonList = [\"Declined - Chose HLOC (IOP/PHP/RTC)\", \"Declined - Chose new outpt team\", \"Declined - Continue w current team\", \"Declined - Unknown tx choice\", \"Discharged - Admin - Change in payor\", \"Discharged - Admin - Disengaged\", \"Discharged - Admin - Financial\", \"Discharged - Admin - Ins denial\", \"Discharged - AEA - Declined relapse prevention\", \"Discharged - AEA - No care\", \"Discharged - AEA - Inpatient\", \"Discharged - AEA - Outpatient\", \"Discharged - AEA - PHP\", \"Discharged - AEA - RTC\", \"Discharged - HLOC - Inpt med\", \"Discharged - HLOC - Inpt psych\", \"Discharged - HLOC - IOP\", \"Discharged - HLOC - PHP\", \"Discharged - HLOC - RTC\", \"MIA - Lost contact\", \"MIA - No contact\", \"Not eligible - Wrong age\", \"Not eligible - Wrong state\", \"Not qualified - Equip referred to clinical HLOC\", \"Not qualified - Equip referred to medical HLOC\", \"Not qualified - Family unwilling to participate in tx\", \"Not qualified - Financial - Insurance not in-network\", \"Not qualified - No eating disorder\", \"Not qualified - Not living with family\", \"Declined - Admin/Equip delay\", \"Not qualified - Financial - Can't afford OOP $\", \"Contemplative\"];",
									"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
									"",
									"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
									"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
									"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
									"",
									"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
									"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
									"let episodeClosedDate = moment(episodeStartDate).add(7, 'days').format('YYYY-MM-DD');",
									"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
									"let episodePausedEndDate = moment(episodePausedStartDate).add(5, 'days').format('YYYY-MM-DD');",
									"",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
									"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
									"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
									"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
									"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
									"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
									"pm.environment.set(\"cdsEpisodeClosedDate\", episodeClosedDate);",
									"pm.environment.set(\"statusReason\", ld.sample(closedReasonList));",
									"",
									"//Paused details",
									"// pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
									"// pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
									"// pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
									"",
									"//Authorization details",
									"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
									"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
									"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Medical clearance details",
									"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
									"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Insurance verification details",
									"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
									"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4b45bd8d-a0a8-4684-98f5-7260a2f7d142",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"//set episodeExternalId to be used in next request",
									"// pm.environment.set(\"episodeExternalId\", pm.response.text());",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "38894965-8eb7-4d6e-ba1a-0824c78983d3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"externalId\": \"{{pausedDetailsExternalId}}\",\n            \"startDate\": \"{{pausedStartDate_1}}\",\n            \"endDate\": \"{{pausedStartDate_1}}\",\n            \"pausedReason\": \"{{pausedReason_1}}\",\n            \"isDeleted\": \"true\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes",
								"{{episodeExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify paused details are soft deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5d237ef-371c-4dcd-9599-7fdf7c4a0afa",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.a('string');",
									"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.a('number');",
									"        pm.expect(jsonData[i][\"level\"]).to.be.a('string');",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['authorizationNumber']).to.be.a('string');",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['startDate']).to.be.a('string');",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['endDate']).to.be.a('string');",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['coverageExternalId']).to.be.a('string');",
									"    }",
									"});",
									"",
									"pm.test(\"Verify episode status values\", function () {",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.eql(pm.environment.get(\"patientId\"));",
									"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.eql(pm.environment.get(\"episodeExternalId\"));",
									"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.eql(pm.environment.get(\"cdsTreatmentProgramName\"));",
									"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStatus\"));",
									"        pm.expect(jsonData[i][\"statusReason\"]).to.be.eql(null);",
									"        pm.expect(jsonData[i][\"payorName\"]).to.be.eql(null);",
									"        pm.expect(jsonData[i][\"payorProgramName\"]).to.be.eql(null);",
									"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStartDate\"));",
									"        pm.expect(jsonData[i][\"episodeClosedDate\"]).to.be.eql(null);",
									"        pm.expect(jsonData[i][\"firstInquiryReferralDate\"]).to.be.eql(pm.environment.get(\"firstInquiryReferralDate\"));",
									"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.eql(pm.environment.get(\"cdsLengthInWeeks\"));",
									"        pm.expect(jsonData[i][\"level\"]).to.be.eql(pm.environment.get(\"cdsLevel\"));",
									"",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['authorizationNumber']).to.be.eql(pm.environment.get(\"authorizationNumber\"));",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['startDate']).to.be.eql(pm.environment.get(\"authorizationStartDate\"));",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['endDate']).to.be.eql(pm.environment.get(\"authorizationEndDate\"));",
									"        pm.expect(jsonData[i]['authorizationDetails'][i]['coverageExternalId']).to.be.eql(pm.environment.get(\"coverageExternalId\"));",
									"        // pm.expect(jsonData[i]['authorizationDetails'][i][\"payorProgram\"]).to.be.eql(null);",
									"        pm.expect(jsonData[i]['authorizationDetails'][i][\"approvedSessions\"]).to.be.eql(12);",
									"        pm.expect(jsonData[i]['authorizationDetails'][i][\"approvedSessionUnits\"]).to.be.eql(\"days\");",
									"        pm.expect(jsonData[i]['authorizationDetails'][i][\"isAuthRequired\"]).to.be.eql(true);",
									"",
									"        pm.expect(jsonData[i]['pausedDetails']).to.be.eql(null);",
									"",
									"    }",
									"});",
									"",
									"//set externalId to be used in next request",
									"pm.environment.set(\"cdsExternalId\", jsonData[0]['authorizationDetails'][0]['externalId']);",
									"// pm.environment.set(\"pausedDetailsExternalId\", jsonData[0]['pausedDetails'][0]['externalId']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "725770be-1b1b-4c25-896e-55d3f4d621f6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add 2nd paused details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "242981be-7ac3-4188-9181-666bca5c2077",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"let episodeStatusList = [\"In-treatment\"];",
									"let treatmentProgramList = [\"Equip treatment\"];",
									"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
									"",
									"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
									"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
									"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
									"",
									"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
									"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
									"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
									"let episodePausedEndDate = moment(episodePausedStartDate).add(5, 'days').format('YYYY-MM-DD');",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
									"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
									"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
									"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
									"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
									"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
									"// pm.environment.set(\"cdsEpisodeClosedDate\", episodeClosedDate);",
									"// pm.environment.set(\"statusReason\", ld.sample(pausedStatusReasonList));",
									"",
									"//Paused details",
									"pm.environment.set(\"pausedStartDate_2\", episodePausedStartDate);",
									"pm.environment.set(\"pausedEndDate_2\", episodePausedEndDate);",
									"pm.environment.set(\"pausedReason_2\", ld.sample(pausedReasonList));",
									"",
									"//Authorization details",
									"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
									"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
									"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Medical clearance details",
									"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
									"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Insurance verification details",
									"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
									"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ecddb1b5-5218-44f5-ad26-e7c87c6075fd",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"//set episodeExternalId to be used in next request",
									"// pm.environment.set(\"episodeExternalId\", pm.response.text());",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b7de1059-cb3e-4f06-a2b0-b03a2e85c354",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate_2}}\",\n            \"endDate\": \"{{pausedEndDate_2}}\",\n            \"pausedReason\": \"{{pausedReason_2}}\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes",
								"{{episodeExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new paused details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cad9da17-bbc2-4568-827b-94f59c62c8ae",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"let episodeStatusList = [\"In-treatment\"];",
									"let treatmentProgramList = [\"Equip treatment\"];",
									"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
									"",
									"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
									"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
									"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
									"",
									"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
									"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
									"let episodePausedStartDate = moment(episodeStartDate).add(8, 'days').format('YYYY-MM-DD');",
									"let episodePausedEndDate = moment(episodePausedStartDate).add(5, 'days').format('YYYY-MM-DD');",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
									"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
									"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
									"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
									"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
									"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
									"// pm.environment.set(\"cdsEpisodeClosedDate\", episodeClosedDate);",
									"// pm.environment.set(\"statusReason\", ld.sample(pausedStatusReasonList));",
									"",
									"//Paused details",
									"pm.environment.set(\"pausedStartDate_3\", episodePausedStartDate);",
									"pm.environment.set(\"pausedEndDate_3\", episodePausedEndDate);",
									"pm.environment.set(\"pausedReason_3\", ld.sample(pausedReasonList));",
									"",
									"//Authorization details",
									"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
									"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
									"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Medical clearance details",
									"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
									"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Insurance verification details",
									"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
									"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "50975ede-573b-4abb-be96-a75fc9469e9a",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"//set episodeExternalId to be used in next request",
									"pm.environment.set(\"episodeExternalId\", pm.response.text());",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e09c28d5-46d5-47b8-9e68-205651784623",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate_3}}\",\n            \"endDate\": \"{{pausedEndDate_3}}\",\n            \"pausedReason\": \"{{pausedReason_3}}\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes",
								"{{episodeExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify new paused details are added",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc5bbb5e-c09d-4a5f-88e6-ac8ca40987b7",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    pm.expect(jsonData[0][\"patientExternalId\"]).to.be.a('string');",
									"    pm.expect(jsonData[0][\"episodeExternalId\"]).to.be.a('string');",
									"    pm.expect(jsonData[0][\"treatmentProgramName\"]).to.be.a('string');",
									"    pm.expect(jsonData[0][\"episodeStatus\"]).to.be.a('string');",
									"    pm.expect(jsonData[0][\"episodeStartDate\"]).to.be.a('string');",
									"    pm.expect(jsonData[0][\"lengthInWeeks\"]).to.be.a('number');",
									"    pm.expect(jsonData[0][\"level\"]).to.be.a('string');",
									"    pm.expect(jsonData[0]['authorizationDetails'][0]['authorizationNumber']).to.be.a('string');",
									"    pm.expect(jsonData[0]['authorizationDetails'][0]['startDate']).to.be.a('string');",
									"    pm.expect(jsonData[0]['authorizationDetails'][0]['endDate']).to.be.a('string');",
									"    pm.expect(jsonData[0]['authorizationDetails'][0]['coverageExternalId']).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Verify episode status values\", function () {",
									"    pm.expect(jsonData[0][\"patientExternalId\"]).to.be.eql(pm.environment.get(\"patientId\"));",
									"    pm.expect(jsonData[0][\"episodeExternalId\"]).to.be.eql(pm.environment.get(\"episodeExternalId\"));",
									"    pm.expect(jsonData[0][\"treatmentProgramName\"]).to.be.eql(pm.environment.get(\"cdsTreatmentProgramName\"));",
									"    pm.expect(jsonData[0][\"episodeStatus\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStatus\"));",
									"    pm.expect(jsonData[0][\"statusReason\"]).to.be.eql(null);",
									"    pm.expect(jsonData[0][\"payorName\"]).to.be.eql(null);",
									"    pm.expect(jsonData[0][\"payorProgramName\"]).to.be.eql(null);",
									"    pm.expect(jsonData[0][\"episodeStartDate\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStartDate\"));",
									"    pm.expect(jsonData[0][\"episodeClosedDate\"]).to.be.eql(null);",
									"    pm.expect(jsonData[0][\"firstInquiryReferralDate\"]).to.be.eql(pm.environment.get(\"firstInquiryReferralDate\"));",
									"    pm.expect(jsonData[0][\"lengthInWeeks\"]).to.be.eql(pm.environment.get(\"cdsLengthInWeeks\"));",
									"    pm.expect(jsonData[0][\"level\"]).to.be.eql(pm.environment.get(\"cdsLevel\"));",
									"",
									"    pm.expect(jsonData[0]['authorizationDetails'][0]['authorizationNumber']).to.be.eql(pm.environment.get(\"authorizationNumber\"));",
									"    pm.expect(jsonData[0]['authorizationDetails'][0]['startDate']).to.be.eql(pm.environment.get(\"authorizationStartDate\"));",
									"    pm.expect(jsonData[0]['authorizationDetails'][0]['endDate']).to.be.eql(pm.environment.get(\"authorizationEndDate\"));",
									"    pm.expect(jsonData[0]['authorizationDetails'][0]['coverageExternalId']).to.be.eql(pm.environment.get(\"coverageExternalId\"));",
									"    // pm.expect(jsonData[0]['authorizationDetails'][0][\"payorProgram\"]).to.be.eql(null);",
									"    pm.expect(jsonData[0]['authorizationDetails'][0][\"approvedSessions\"]).to.be.eql(12);",
									"    pm.expect(jsonData[0]['authorizationDetails'][0][\"approvedSessionUnits\"]).to.be.eql(\"days\");",
									"    pm.expect(jsonData[0]['authorizationDetails'][0][\"isAuthRequired\"]).to.be.eql(true);",
									"",
									"    pm.expect(jsonData[0]['pausedDetails'][0][\"startDate\"]).to.be.eql(pm.environment.get(\"pausedStartDate_2\"));",
									"    pm.expect(jsonData[0]['pausedDetails'][0][\"endDate\"]).to.be.eql(pm.environment.get(\"pausedEndDate_2\"));",
									"    pm.expect(jsonData[0]['pausedDetails'][0][\"pausedReason\"]).to.be.eql(pm.environment.get(\"pausedReason_2\"));",
									"",
									"    pm.expect(jsonData[0]['pausedDetails'][1][\"startDate\"]).to.be.eql(pm.environment.get(\"pausedStartDate_3\"));",
									"    pm.expect(jsonData[0]['pausedDetails'][1][\"endDate\"]).to.be.eql(pm.environment.get(\"pausedEndDate_3\"));",
									"    pm.expect(jsonData[0]['pausedDetails'][1][\"pausedReason\"]).to.be.eql(pm.environment.get(\"pausedReason_3\"));",
									"});",
									"",
									"//set externalId to be used in next request",
									"pm.environment.set(\"cdsExternalId\", jsonData[0]['authorizationDetails'][0]['externalId']);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1eb30b1f-05bd-45b9-b975-80edb0bbfd85",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Soft delete authorization details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fa5167d6-f236-469f-b6d7-298034231848",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"let episodeStatusList = [\"In-treatment\"];",
									"let treatmentProgramList = [\"Equip treatment\"];",
									"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
									"",
									"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
									"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
									"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
									"",
									"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
									"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
									"let episodePausedStartDate = moment(episodeStartDate).add(8, 'days').format('YYYY-MM-DD');",
									"let episodePausedEndDate = moment(episodePausedStartDate).add(5, 'days').format('YYYY-MM-DD');",
									"",
									"//Save the variables to be used in next request for validation",
									"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
									"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
									"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
									"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
									"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
									"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
									"// pm.environment.set(\"cdsEpisodeClosedDate\", episodeClosedDate);",
									"// pm.environment.set(\"statusReason\", ld.sample(pausedStatusReasonList));",
									"",
									"//Paused details",
									"pm.environment.set(\"pausedStartDate_3\", episodePausedStartDate);",
									"pm.environment.set(\"pausedEndDate_3\", episodePausedEndDate);",
									"pm.environment.set(\"pausedReason_3\", ld.sample(pausedReasonList));",
									"",
									"//Authorization details",
									"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
									"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
									"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Medical clearance details",
									"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
									"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
									"",
									"//Insurance verification details",
									"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
									"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
									"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "093ec652-70ac-4a1d-97d0-33221c9002a6",
								"exec": [
									"var jsonData = pm.response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Verify episode id is generated\", function () {",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"//set episodeExternalId to be used in next request",
									"pm.environment.set(\"episodeExternalId\", pm.response.text());",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8d4c99f5-40c2-4b97-8c21-a582cb108e6a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\",\n            \"isDeleted\": true\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes",
								"{{episodeExternalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify authorization details are soft deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45a41dd8-368d-4a5f-818a-a6969f944b0a",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Verify data type\", function () {",
									"    pm.expect(jsonData[0][\"patientExternalId\"]).to.be.a('string');",
									"    pm.expect(jsonData[0][\"episodeExternalId\"]).to.be.a('string');",
									"    pm.expect(jsonData[0][\"treatmentProgramName\"]).to.be.a('string');",
									"    pm.expect(jsonData[0][\"episodeStatus\"]).to.be.a('string');",
									"    pm.expect(jsonData[0][\"episodeStartDate\"]).to.be.a('string');",
									"    pm.expect(jsonData[0][\"lengthInWeeks\"]).to.be.a('number');",
									"    pm.expect(jsonData[0][\"level\"]).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Verify episode status values\", function () {",
									"    pm.expect(jsonData[0][\"patientExternalId\"]).to.be.eql(pm.environment.get(\"patientId\"));",
									"    pm.expect(jsonData[0][\"episodeExternalId\"]).to.be.eql(pm.environment.get(\"episodeExternalId\"));",
									"    pm.expect(jsonData[0][\"treatmentProgramName\"]).to.be.eql(pm.environment.get(\"cdsTreatmentProgramName\"));",
									"    pm.expect(jsonData[0][\"episodeStatus\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStatus\"));",
									"    pm.expect(jsonData[0][\"statusReason\"]).to.be.eql(null);",
									"    pm.expect(jsonData[0][\"payorName\"]).to.be.eql(null);",
									"    pm.expect(jsonData[0][\"payorProgramName\"]).to.be.eql(null);",
									"    pm.expect(jsonData[0][\"episodeStartDate\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStartDate\"));",
									"    pm.expect(jsonData[0][\"episodeClosedDate\"]).to.be.eql(null);",
									"    pm.expect(jsonData[0][\"firstInquiryReferralDate\"]).to.be.eql(pm.environment.get(\"firstInquiryReferralDate\"));",
									"    pm.expect(jsonData[0][\"lengthInWeeks\"]).to.be.eql(pm.environment.get(\"cdsLengthInWeeks\"));",
									"    pm.expect(jsonData[0][\"level\"]).to.be.eql(pm.environment.get(\"cdsLevel\"));",
									"",
									"    pm.expect(jsonData[0]['authorizationDetails']).to.be.eql(null);",
									"",
									"    // pm.expect(jsonData[0]['pausedDetails'][0][\"startDate\"]).to.be.eql(pm.environment.get(\"pausedStartDate_2\"));",
									"    // pm.expect(jsonData[0]['pausedDetails'][0][\"endDate\"]).to.be.eql(pm.environment.get(\"pausedEndDate_2\"));",
									"    // pm.expect(jsonData[0]['pausedDetails'][0][\"pausedReason\"]).to.be.eql(pm.environment.get(\"pausedReason_2\"));",
									"",
									"    // pm.expect(jsonData[0]['pausedDetails'][1][\"startDate\"]).to.be.eql(pm.environment.get(\"pausedStartDate_3\"));",
									"    // pm.expect(jsonData[0]['pausedDetails'][1][\"endDate\"]).to.be.eql(pm.environment.get(\"pausedEndDate_3\"));",
									"    // pm.expect(jsonData[0]['pausedDetails'][1][\"pausedReason\"]).to.be.eql(pm.environment.get(\"pausedReason_3\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c95be27e-7d35-48cb-8eee-47fc2a6a1eab",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
							"host": [
								"{{host}}"
							],
							"path": [
								"clinical-data",
								"patients",
								"{{patientId}}",
								"episodes"
							]
						}
					},
					"response": []
				}
			],
			"id": "628507dd-33a1-4d41-b9b1-4ab053623b3e",
			"description": "[https://teamequip.atlassian.net/browse/EQ-5308](https://teamequip.atlassian.net/browse/EQ-5308)"
		},
		{
			"name": "EQ-3847",
			"item": [
				{
					"name": "Verify admin episode cannot have paused details if there is no episode start date",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1274c2e8-3f11-4489-bf19-14279fcb3336",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5d36194c-53ba-4987-808b-b9917ef2e273",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "26a85ff1-14d2-4fec-8de9-4abf2ffd5fc4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add coverage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "92c0c35e-8464-4e3c-b575-41d14545d69f",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"",
											"",
											"let payor_payor_program_map = [{ \"payor_name\": \"AIDS Healthcare Foundation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ATRIO Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aetna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Aetna\"] },",
											"{ \"payor_name\": \"Affinity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeRight Advantage Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeWell New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alameda Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alignment Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AltaMed PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AmeriHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Amida Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Anthem\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Arkansas Blue Cross and Blue Shield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aspire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Asuris Northwest Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Atlanticare LIFE Connection\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Auxilio Salud Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Avera Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bienvivir Senior Health Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Arizona\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Massachusetts\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Michigan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of North Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Alabama\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Illinois\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Louisiana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Minnesota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Mississippi\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Montana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Nebraska\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of North Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Oklahoma\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Rhode Island\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Vermont\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Wyoming\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross of Idaho Health Service, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Shield of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of South Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Tennessee\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brand New Day\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brandman Centers for Senior Care (BCSC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BridgeSpan Health Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bright Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CHRISTUS Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalOptima\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalViva Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Care N' Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareFirst BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareOregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cascade Health Alliance, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Catholic Health LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenCal Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centene\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Center for Elders Independence\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenterLight Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers Plan for Healthy Living (CPHL)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers for Medicare and Medicaid Services (CMS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central California Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central Health Plan of California, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Chinese Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cigna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Cigna\"] },",
											"{ \"payor_name\": \"Clover Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Choice, Inc. (CHC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Group\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Plan of Washington (CHPW)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Complete Senior Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ConnectiCare, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Contra Costa Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cook Children's Health Plan (CCHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Crystal Run Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"DAKOTACARE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Dean Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Dell Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Devoted Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Driscoll Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"EMI Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Eddy SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"El Paso First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ElderONE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Elderplan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Excellus BlueCross BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fallon Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FamilyHealth Center for Older Adults (PACE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"First Medical Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FirstCare Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fresno PACE for Seniors\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"GHI (Emblem Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gary and Mary West PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Geisinger Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gold Coast Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Golden State Medicare Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"HIP/Emblem Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Harvard Pilgrim Health Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health New England, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Joaquin\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Mateo\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Healthfirst\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Horizon Blue Cross Blue Shield of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Horizon BCBS\"] },",
											"{ \"payor_name\": \"Humana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ICHS PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Imperial Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independence Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independent Health Association, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inland Empire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovAge\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovaCare Health Solutions\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inspira LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inter Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan (California)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Kaiser Northern CA - Central Valley\", \"Kaiser Northern CA - Diablo\", \"Kaiser Northern CA - Fresno\", \"Kaiser Northern CA - San Francisco\", \"Kaiser Northern CA - South San Francisco\", \"Kaiser Northern CA - Greater Southern Alameda\", \"Kaiser Northern CA - East Bay\", \"Kaiser Northern CA - Marin/Sonoma\", \"Kaiser Northern CA - Redwood City\", \"Kaiser Northern CA - Roseville\", \"Kaiser Northern CA - Sacramento\", \"Kaiser Northern CA - South Sacramento\", \"Kaiser Northern CA - San Jose\", \"Kaiser Northern CA - Santa Clara\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- Other\", \"payor_program_name\": [\"Orange County\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kalos Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"KelseyCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kern Health Systems, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"L.A. Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE St. Francis\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE at Lourdes, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lasso Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LifeWise Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Longevity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lutheran Senior LIFE at Jersey City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MAPFRE Puerto Rico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MVP Health Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Magellan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"MediExcel Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicaid\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medical Card System, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Memorial Hermann Health Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MetroPlus Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Miami Children’s Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Moda Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"MODA\", \"Optum Cares\"] },",
											"{ \"payor_name\": \"Molina Healthcare\", \"payor_program_name\": [\"Optum Standard\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Mutual of Omaha Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"NY Hotel Trades Council and Hotel Association of NYC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Neighborhood Health Plan of Rhode Island, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"No Insurance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"On Lok Lifeways\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Optum\", \"payor_program_name\": [\"Optum\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Oscar Insurance Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Other\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Oxford\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"PACE CNY\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"PacificSource Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"PacificSource - Medicaid\", \"PacificSource - Navigator\", \"PacificSource - SmartChoice\", \"PacificSource - Voyager\"] },",
											"{ \"payor_name\": \"Parkland Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partners Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partnership HealthPlan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Partnership Health Plan\"] },",
											"{ \"payor_name\": \"Physicians Health Plan of Northern Indiana, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Piedmont Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan Medico Bella Vista\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan de Salud Menonita\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Premera Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Presbyterian Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Priority Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Private Pay\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"ProCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Prominence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Providence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - Standard\"] },",
											"{ \"payor_name\": \"Redwood Coast PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Utah\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield of Idaho\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"RiverSpring Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Ryder Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SCAN Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIHO Holding, LLC dba SIHO Insurance Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIMNSA Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Samaritan Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Diego PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Francisco Health Plan (SFHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara County dba Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara Family Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Fe Employe's Hospital Association-Coast Lines\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scott and White Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scripps Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Seaside Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SelectHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Sendero Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Senior Whole Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sentara Health Plans, Inc. (fka Optima Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sharp Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Silver Star Health Network\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"St. Paul's PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stanford Health Care Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stockton PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sunrise Advantage Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sutter Health Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Sutter SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Texas Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Total Senior Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Triple-S Management Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"True Health New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Tufts Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UMR\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UPMC Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Umpqua Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"UnitedHealthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Univera Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VNSNY CHOICE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VillageCareMAX\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Vitality Health Plan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"WEA Trust\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"WellCare Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of Iowa\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of South Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Western Health Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"Western Oregon Advanced Health, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Yamhill Community Care Organization\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] }];",
											"",
											"randomPayor = ld.sample(payor_payor_program_map);",
											"randomPayorName = randomPayor.payor_name;",
											"randomPayorProgramName = ld.sample(randomPayor.payor_program_name);",
											"",
											"console.log(randomPayorName);",
											"console.log(randomPayorProgramName);",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let patientRelationList = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"",
											"pm.environment.set(\"groupId\", \"GRP12345689\");",
											"pm.environment.set(\"subscriberId\", \"SUB12345689\");",
											"pm.environment.set(\"payor\", randomPayorName);",
											"pm.environment.set(\"payorProgram\", randomPayorProgramName);",
											"pm.environment.set(\"stateCode\", ld.sample(statesList));",
											"pm.environment.set(\"coverageStartDate\", moment().format('YYYY-MM-DD'));",
											"pm.environment.set(\"coverageEndDate\", moment().add(6, 'months').format('YYYY-MM-DD'));",
											"pm.environment.set(\"alternativeId\", \"ALT12345689\");",
											"pm.environment.set(\"providerServicesPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientRelationToSubscriber\", ld.sample(patientRelationList));",
											"pm.environment.set(\"subscriberFirstName\", firstName);",
											"pm.environment.set(\"subscriberLastName\", lastName);",
											"pm.environment.set(\"subscriberDateOfBirth\", moment().subtract(10, 'years').format('YYYY-MM-DD'));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "214fd164-d666-4e82-af1b-7453f3fdfad1",
										"exec": [
											"var response_text = pm.response.text();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"// pm.test(\"Verify CoverageExternalId is generated\", function () {",
											"//     pm.expect(jsonData.id).length.greaterThan(0);",
											"// });",
											"",
											"pm.environment.set(\"coverageExternalId\", response_text);",
											"console.log(\"response_text\" + response_text)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bf28999b-e1d7-43d5-ada8-69a5e29496dd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payor\": \"{{payor}}\",\n    \"payorProgram\": \"{{payorProgram}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{groupId}}\",\n    \"subscriberId\": \"{{subscriberId}}\",\n    \"stateCode\": \"{{stateCode}}\",\n    \"startDate\": \"{{coverageStartDate}}\",\n    \"endDate\": \"{{coverageEndDate}}\",\n    \"alternativeId\": \"{{alternativeId}}\",\n    \"customPayorName\": \"\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber}}\",\n    \"patientRelationToSubscriber\": \"{{patientRelationToSubscriber}}\",\n    \"subscriberFirstName\": \"{{subscriberFirstName}}\",\n    \"subscriberLastName\": \"{{subscriberLastName}}\",\n    \"subscriberDateOfBirth\": \"{{subscriberDateOfBirth}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"coverages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode - New",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "bffaae3f-abd7-4f58-908f-38c4f6a4c799",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"New\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(60, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7eaf67a6-2210-421c-8b55-75f1a21a5331",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f50cdfad-3225-4a1a-a4b0-129d344e22a8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get episode after add",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08d79dd3-7d15-48ba-a506-50b0d679bf1e",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify episode status values\", function () {",
											"    pm.expect(jsonData[0][\"patientExternalId\"]).to.be.eql(pm.environment.get(\"patientId\"));",
											"    pm.expect(jsonData[0][\"episodeExternalId\"]).to.be.eql(pm.environment.get(\"episodeExternalId\"));",
											"    pm.expect(jsonData[0][\"treatmentProgramName\"]).to.be.eql(pm.environment.get(\"cdsTreatmentProgramName\"));",
											"    pm.expect(jsonData[0][\"episodeStatus\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStatus\"));",
											"    pm.expect(jsonData[0][\"statusReason\"]).to.be.eql(null);",
											"    pm.expect(jsonData[0][\"payorName\"]).to.be.eql(null);",
											"    pm.expect(jsonData[0][\"payorProgramName\"]).to.be.eql(null);",
											"    pm.expect(jsonData[0][\"episodeStartDate\"]).to.be.eql(null);",
											"    pm.expect(jsonData[0][\"episodeClosedDate\"]).to.be.eql(null);",
											"    pm.expect(jsonData[0][\"firstInquiryReferralDate\"]).to.be.eql(pm.environment.get(\"firstInquiryReferralDate\"));",
											"    pm.expect(jsonData[0][\"lengthInWeeks\"]).to.be.eql(pm.environment.get(\"cdsLengthInWeeks\"));",
											"    pm.expect(jsonData[0][\"level\"]).to.be.eql(pm.environment.get(\"cdsLevel\"));",
											"",
											"    pm.expect(jsonData[0]['authorizationDetails'][0]['authorizationNumber']).to.be.eql(pm.environment.get(\"authorizationNumber\"));",
											"    pm.expect(jsonData[0]['authorizationDetails'][0]['startDate']).to.be.eql(pm.environment.get(\"authorizationStartDate\"));",
											"    pm.expect(jsonData[0]['authorizationDetails'][0]['endDate']).to.be.eql(pm.environment.get(\"authorizationEndDate\"));",
											"    pm.expect(jsonData[0]['authorizationDetails'][0]['coverageExternalId']).to.be.eql(pm.environment.get(\"coverageExternalId\"));",
											"    pm.expect(jsonData[0]['authorizationDetails'][0][\"payorProgram\"]).to.be.eql(pm.environment.get(\"payorProgram\"));",
											"    pm.expect(jsonData[0]['authorizationDetails'][0][\"approvedSessions\"]).to.be.eql(12);",
											"    pm.expect(jsonData[0]['authorizationDetails'][0][\"approvedSessionUnits\"]).to.be.eql(\"days\");",
											"    pm.expect(jsonData[0]['authorizationDetails'][0][\"isAuthRequired\"]).to.be.eql(true);",
											"",
											"    pm.expect(jsonData[0]['pausedDetails']).to.be.eql(null);",
											"",
											"});",
											"",
											"//set externalId to be used in next request",
											"pm.environment.set(\"cdsExternalId\", jsonData[0]['authorizationDetails'][0]['externalId']);",
											"// pm.environment.set(\"pausedDetailsExternalId\", jsonData[0]['pausedDetails'][0]['externalId']);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "238cf57f-bf8c-4d39-9eb7-04656e45a2b3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add paused details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "efd7a6e7-5592-4b90-a0b6-b1e9a9ca828d",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"New\"];",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
											"",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(60, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
											"let episodePausedEndDate = moment(episodePausedStartDate).add(5, 'days').format('YYYY-MM-DD');",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"// pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"// pm.environment.set(\"cdsEpisodeClosedDate\", episodeClosedDate);",
											"// pm.environment.set(\"statusReason\", ld.sample(pausedStatusReasonList));",
											"",
											"//Paused details",
											"pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
											"pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
											"pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c7840e29-dd92-41b2-a8d5-cd92b69ebf51",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify error message\", function () {",
											"    pm.expect(jsonData.message).to.be.eql(\"Episode with paused details must have start date.\");",
											"});",
											"console.log(jsonData.message);",
											"//set episodeExternalId to be used in next request",
											"// pm.environment.set(\"episodeExternalId\", pm.response.text());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f58d3aff-d9c4-4a66-ac6c-69620f19ab6f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate_1}}\",\n            \"endDate\": \"{{pausedEndDate_1}}\",\n            \"pausedReason\": \"{{pausedReason_1}}\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes",
										"{{episodeExternalId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "f1489f3c-3ea3-472f-9e6c-7a3afbd1a6a7"
				},
				{
					"name": "Verify Paused start date and reason are required",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "635eb6e2-5855-4e26-9de3-0efeefe4e8a9",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cb908a74-d0db-4ed6-a657-e39031c1cfbf",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "05a7fe76-b935-4c2e-bed4-71de24e0700e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode without Paused start date",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "672da0b5-1eac-4f2a-ab52-e79ee955974d",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"New\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
											"",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(60, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
											"let episodePausedEndDate = moment(episodePausedStartDate).add(5, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Paused details",
											"pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
											"pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
											"pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4d0f98bf-dcf9-4f1b-9841-ecff15a4b701",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify start date must not be null error message\", function () {",
											"    pm.expect(jsonData._embedded.errors[0].message).to.be.eql(\"persistEpisodeRequest.pausedDetails[0].startDate: must not be null\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "466a046a-f8a8-42f9-8809-68d971d2e560",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"\",\n            \"endDate\": \"{{pausedEndDate_1}}\",\n            \"pausedReason\": \"\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode without Paused reason",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e372a5ac-723c-41a3-bd86-831b83b4a8b6",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"New\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
											"",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(60, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
											"let episodePausedEndDate = moment(episodePausedStartDate).add(5, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Paused details",
											"pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
											"pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
											"pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6a237f8b-b876-4374-99aa-7f8c59a56b4f",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify paused reason  date must not be null error message\", function () {",
											"    pm.expect(jsonData.message).to.be.eql(\"Could not find paused reason .\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "572add71-3024-4c23-946a-e120edd05ef1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate_1}}\",\n            \"endDate\": \"{{pausedEndDate_1}}\",\n            \"pausedReason\": \"\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						}
					],
					"id": "df9314c1-f1dd-4af0-a1bb-302685623edc"
				},
				{
					"name": "Verify end date cannot be before the start date",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0c013b9-bc14-480d-a463-18f7b5db55b3",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bfe67bc8-8f64-4704-bcd8-707489868f2f",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "552dac44-b468-489a-8895-6dad64de0ecb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode without Paused start date",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c4540326-336b-4970-819c-e0652f5159ce",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"New\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
											"",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(60, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
											"let episodePausedEndDate = moment(episodePausedStartDate).subtract(5, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Paused details",
											"pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
											"pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
											"pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "48cf946c-bf84-40fc-ba83-16c67d97b069",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify end date cannot be before the start date error message\", function () {",
											"    pm.expect(jsonData.message).to.be.eql(\"Paused detail start date cannot be after end date.\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c557828e-def9-40a3-b9c5-4ea4aeecf81f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate_1}}\",\n            \"endDate\": \"{{pausedEndDate_1}}\",\n            \"pausedReason\": \"\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						}
					],
					"id": "41e1ee49-d073-4c28-a420-2e34c0853c50"
				},
				{
					"name": "Verify Start date can be the same as an end date",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "43f85d61-f224-48af-948c-8cc4dd1ba303",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9a59cb46-5ec0-4477-97b4-1c0229dfe7cf",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a5a6014e-7d00-435c-a7dc-014c613ed754",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add coverage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7b05dd16-d186-4261-940e-26e25f121de1",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"",
											"",
											"let payor_payor_program_map = [{ \"payor_name\": \"AIDS Healthcare Foundation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ATRIO Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aetna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Aetna\"] },",
											"{ \"payor_name\": \"Affinity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeRight Advantage Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AgeWell New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alameda Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Alignment Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AltaMed PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"AmeriHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Amida Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Anthem\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Arkansas Blue Cross and Blue Shield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Aspire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Asuris Northwest Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Atlanticare LIFE Connection\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Auxilio Salud Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Avera Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bienvivir Senior Health Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Arizona\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Massachusetts\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of Michigan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross Blue Shield of North Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Alabama\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Illinois\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Kansas City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Louisiana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Minnesota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Mississippi\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Montana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Nebraska\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of North Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Oklahoma\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Rhode Island\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Vermont\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross and Blue Shield of Wyoming\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Cross of Idaho Health Service, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Blue Shield of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of South Carolina\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Tennessee\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brand New Day\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Brandman Centers for Senior Care (BCSC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"BridgeSpan Health Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Bright Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CHRISTUS Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalOptima\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CalViva Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Care N' Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareFirst BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CareOregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cascade Health Alliance, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Catholic Health LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenCal Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centene\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Center for Elders Independence\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"CenterLight Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers Plan for Healthy Living (CPHL)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Centers for Medicare and Medicaid Services (CMS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central California Alliance for Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Central Health Plan of California, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Chinese Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cigna\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Cigna\"] },",
											"{ \"payor_name\": \"Clover Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Choice, Inc. (CHC)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Group\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Community Health Plan of Washington (CHPW)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Complete Senior Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ConnectiCare, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Contra Costa Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Cook Children's Health Plan (CCHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Crystal Run Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"DAKOTACARE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Dean Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Dell Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Devoted Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Driscoll Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"EMI Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Eddy SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"El Paso First Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ElderONE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Elderplan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Excellus BlueCross BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fallon Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FamilyHealth Center for Older Adults (PACE)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"First Medical Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"FirstCare Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Fresno PACE for Seniors\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"GHI (Emblem Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gary and Mary West PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Geisinger Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Gold Coast Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Golden State Medicare Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"HIP/Emblem Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Harvard Pilgrim Health Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health New England, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Joaquin\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Health Plan of San Mateo\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Healthfirst\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark BCBS\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Highmark Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Horizon Blue Cross Blue Shield of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Horizon BCBS\"] },",
											"{ \"payor_name\": \"Humana\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"ICHS PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Imperial Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independence Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Independent Health Association, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inland Empire Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovAge\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"InnovaCare Health Solutions\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inspira LIFE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Inter Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan (California)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Kaiser Northern CA - Central Valley\", \"Kaiser Northern CA - Diablo\", \"Kaiser Northern CA - Fresno\", \"Kaiser Northern CA - San Francisco\", \"Kaiser Northern CA - South San Francisco\", \"Kaiser Northern CA - Greater Southern Alameda\", \"Kaiser Northern CA - East Bay\", \"Kaiser Northern CA - Marin/Sonoma\", \"Kaiser Northern CA - Redwood City\", \"Kaiser Northern CA - Roseville\", \"Kaiser Northern CA - Sacramento\", \"Kaiser Northern CA - South Sacramento\", \"Kaiser Northern CA - San Jose\", \"Kaiser Northern CA - Santa Clara\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan of the Northwest (OR, some WA)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- Other\", \"payor_program_name\": [\"Orange County\", \"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kalos Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"KelseyCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Kern Health Systems, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"L.A. Care Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE St. Francis\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LIFE at Lourdes, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lasso Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"LifeWise Health Plan of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Longevity Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Lutheran Senior LIFE at Jersey City\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MAPFRE Puerto Rico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MVP Health Care\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Magellan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"MediExcel Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicaid\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medical Card System, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Medicare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Memorial Hermann Health Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"MetroPlus Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Miami Children’s Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Moda Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"MODA\", \"Optum Cares\"] },",
											"{ \"payor_name\": \"Molina Healthcare\", \"payor_program_name\": [\"Optum Standard\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Mutual of Omaha Insurance Company\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"NY Hotel Trades Council and Hotel Association of NYC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Neighborhood Health Plan of Rhode Island, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"No Insurance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"On Lok Lifeways\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Optum\", \"payor_program_name\": [\"Optum\", \"Project Heal\", \"SCA\", \"Private Pay\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Oscar Insurance Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Other\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Oxford\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"PACE CNY\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"PacificSource Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"PacificSource - Medicaid\", \"PacificSource - Navigator\", \"PacificSource - SmartChoice\", \"PacificSource - Voyager\"] },",
											"{ \"payor_name\": \"Parkland Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partners Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Partnership HealthPlan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Partnership Health Plan\"] },",
											"{ \"payor_name\": \"Physicians Health Plan of Northern Indiana, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Piedmont Community Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan Medico Bella Vista\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Plan de Salud Menonita\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Premera Blue Cross\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Presbyterian Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Priority Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Private Pay\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"ProCare Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Prominence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Providence Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - Standard\"] },",
											"{ \"payor_name\": \"Redwood Coast PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Regence BlueCross BlueShield of Utah\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Regence BlueShield of Idaho\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"RiverSpring Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Ryder Health Plan, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SCAN Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIHO Holding, LLC dba SIHO Insurance Services\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SIMNSA Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Samaritan Health Plans\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Diego PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"San Francisco Health Plan (SFHP)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara County dba Valley Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Clara Family Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Santa Fe Employe's Hospital Association-Coast Lines\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scott and White Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Scripps Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Seaside Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"SelectHealth\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Sendero Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Senior Whole Health\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sentara Health Plans, Inc. (fka Optima Health)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sharp Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Silver Star Health Network\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"St. Paul's PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stanford Health Care Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New Jersey\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of New York\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Oregon\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Texas\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"State of Washington\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Stockton PACE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sunrise Advantage Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Sutter Health Plus\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Sutter SeniorCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Texas Children's Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Standard\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Total Senior Care, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Triple-S Management Corporation\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"True Health New Mexico\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Tufts Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UCare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UMR\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"UPMC Health Plan\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Umpqua Health Alliance\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"UnitedHealthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Optum\"] },",
											"{ \"payor_name\": \"Univera Healthcare\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VNSNY CHOICE\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"VillageCareMAX\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Vitality Health Plan of California\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"WEA Trust\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"WellCare Health Plans, Inc.\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of Iowa\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Wellmark Blue Cross and Blue Shield of South Dakota\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\"] },",
											"{ \"payor_name\": \"Western Health Advantage\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Beacon - SCA\", \"Magellan - Standard\"] },",
											"{ \"payor_name\": \"Western Oregon Advanced Health, LLC\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] },",
											"{ \"payor_name\": \"Yamhill Community Care Organization\", \"payor_program_name\": [\"Private Pay\", \"Project Heal\", \"SCA\", \"Optum\", \"Cigna\", \"Aetna\", \"Anthem\", \"Magellan - SCA\", \"Beacon - SCA\", \"Standard\"] }];",
											"",
											"randomPayor = ld.sample(payor_payor_program_map);",
											"randomPayorName = randomPayor.payor_name;",
											"randomPayorProgramName = ld.sample(randomPayor.payor_program_name);",
											"",
											"console.log(randomPayorName);",
											"console.log(randomPayorProgramName);",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let patientRelationList = [\"Self\", \"Spouse\", \"Child\", \"Child (Mother's Insurance)\", \"Child (Father's Insurance)\", \"Other\", \"Grandparent\", \"Grandchild\", \"Nephew or Niece\", \"Foster Child\", \"Ward\", \"Stepson or Stepdaughter\", \"Stepson or Stepdaughter (Stepmother's Insurance)\", \"Stepson or Stepdaughter (Stepfather's Insurance)\", \"Employee\", \"Unknown\", \"Handicapped Dependent\", \"Sponsored Dependent\", \"Dependent of a Minor Dependent\", \"Significant Other\", \"Mother\", \"Father\", \"Emancipated Minor\", \"Organ Donor\", \"Cadaver Donor\", \"Injured Plaintiff\", \"Child (Ins. not Financial Respons.)\", \"Child (Mother's Ins., Ins. not Financially Respons.)\", \"Child (Father's Ins., Ins. not Financially Respons.)\", \"Life Partner\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"",
											"pm.environment.set(\"groupId\", \"GRP12345689\");",
											"pm.environment.set(\"subscriberId\", \"SUB12345689\");",
											"pm.environment.set(\"payor\", randomPayorName);",
											"pm.environment.set(\"payorProgram\", randomPayorProgramName);",
											"pm.environment.set(\"stateCode\", ld.sample(statesList));",
											"pm.environment.set(\"coverageStartDate\", moment().format('YYYY-MM-DD'));",
											"pm.environment.set(\"coverageEndDate\", moment().add(6, 'months').format('YYYY-MM-DD'));",
											"pm.environment.set(\"alternativeId\", \"ALT12345689\");",
											"pm.environment.set(\"providerServicesPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientRelationToSubscriber\", ld.sample(patientRelationList));",
											"pm.environment.set(\"subscriberFirstName\", firstName);",
											"pm.environment.set(\"subscriberLastName\", lastName);",
											"pm.environment.set(\"subscriberDateOfBirth\", moment().subtract(10, 'years').format('YYYY-MM-DD'));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1d2c4d83-6581-4995-9b5f-e3866ed547aa",
										"exec": [
											"var response_text = pm.response.text();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"// pm.test(\"Verify CoverageExternalId is generated\", function () {",
											"//     pm.expect(jsonData.id).length.greaterThan(0);",
											"// });",
											"",
											"pm.environment.set(\"coverageExternalId\", response_text);",
											"console.log(\"response_text\" + response_text)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c44e4b69-3afe-48ed-a5c7-adbc31859df2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payor\": \"{{payor}}\",\n    \"payorProgram\": \"{{payorProgram}}\",\n    \"isActive\": true,\n    \"groupId\": \"{{groupId}}\",\n    \"subscriberId\": \"{{subscriberId}}\",\n    \"stateCode\": \"{{stateCode}}\",\n    \"startDate\": \"{{coverageStartDate}}\",\n    \"endDate\": \"{{coverageEndDate}}\",\n    \"alternativeId\": \"{{alternativeId}}\",\n    \"customPayorName\": \"\",\n    \"providerServicesPhoneNumber\": \"+1 {{providerServicesPhoneNumber}}\",\n    \"patientRelationToSubscriber\": \"{{patientRelationToSubscriber}}\",\n    \"subscriberFirstName\": \"{{subscriberFirstName}}\",\n    \"subscriberLastName\": \"{{subscriberLastName}}\",\n    \"subscriberDateOfBirth\": \"{{subscriberDateOfBirth}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/coverages",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"coverages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode with same Paused start date and end date",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "9d578022-be42-421f-aec0-1a11467466e4",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"New\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
											"",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(60, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
											"let episodePausedEndDate = moment(episodePausedStartDate).subtract(5, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Paused details",
											"pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
											"pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
											"pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "54017bfb-954c-4660-bdc1-b9a854863b19",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8f52a542-b819-449e-944a-9f2133306b0a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate_1}}\",\n            \"endDate\": \"{{pausedStartDate_1}}\",\n            \"pausedReason\": \"{{pausedReason_1}}\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get episode after add",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0e483408-41f2-46a1-b07c-bf31e6f30248",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify episode status values\", function () {",
											"    pm.expect(jsonData[0][\"patientExternalId\"]).to.be.eql(pm.environment.get(\"patientId\"));",
											"    pm.expect(jsonData[0][\"episodeExternalId\"]).to.be.eql(pm.environment.get(\"episodeExternalId\"));",
											"    pm.expect(jsonData[0][\"treatmentProgramName\"]).to.be.eql(pm.environment.get(\"cdsTreatmentProgramName\"));",
											"    pm.expect(jsonData[0][\"episodeStatus\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStatus\"));",
											"    pm.expect(jsonData[0][\"statusReason\"]).to.be.eql(null);",
											"    pm.expect(jsonData[0][\"payorName\"]).to.be.eql(null);",
											"    pm.expect(jsonData[0][\"payorProgramName\"]).to.be.eql(null);",
											"    pm.expect(jsonData[0][\"episodeStartDate\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStartDate\"));",
											"    pm.expect(jsonData[0][\"episodeClosedDate\"]).to.be.eql(null);",
											"    pm.expect(jsonData[0][\"firstInquiryReferralDate\"]).to.be.eql(pm.environment.get(\"firstInquiryReferralDate\"));",
											"    pm.expect(jsonData[0][\"lengthInWeeks\"]).to.be.eql(pm.environment.get(\"cdsLengthInWeeks\"));",
											"    pm.expect(jsonData[0][\"level\"]).to.be.eql(pm.environment.get(\"cdsLevel\"));",
											"",
											"    pm.expect(jsonData[0]['authorizationDetails'][0]['authorizationNumber']).to.be.eql(pm.environment.get(\"authorizationNumber\"));",
											"    pm.expect(jsonData[0]['authorizationDetails'][0]['startDate']).to.be.eql(pm.environment.get(\"authorizationStartDate\"));",
											"    pm.expect(jsonData[0]['authorizationDetails'][0]['endDate']).to.be.eql(pm.environment.get(\"authorizationEndDate\"));",
											"    pm.expect(jsonData[0]['authorizationDetails'][0]['coverageExternalId']).to.be.eql(pm.environment.get(\"coverageExternalId\"));",
											"    pm.expect(jsonData[0]['authorizationDetails'][0][\"payorProgram\"]).to.be.eql(pm.environment.get(\"payorProgram\"));",
											"    pm.expect(jsonData[0]['authorizationDetails'][0][\"approvedSessions\"]).to.be.eql(12);",
											"    pm.expect(jsonData[0]['authorizationDetails'][0][\"approvedSessionUnits\"]).to.be.eql(\"days\");",
											"    pm.expect(jsonData[0]['authorizationDetails'][0][\"isAuthRequired\"]).to.be.eql(true);",
											"",
											"    pm.expect(jsonData[0]['pausedDetails'][0][\"startDate\"]).to.be.eql(pm.environment.get(\"pausedStartDate_1\"));",
											"    pm.expect(jsonData[0]['pausedDetails'][0][\"endDate\"]).to.be.eql(pm.environment.get(\"pausedStartDate_1\"));",
											"    pm.expect(jsonData[0]['pausedDetails'][0][\"pausedReason\"]).to.be.eql(pm.environment.get(\"pausedReason_1\"));",
											"",
											"});",
											"",
											"//set externalId to be used in next request",
											"pm.environment.set(\"cdsExternalId\", jsonData[0]['authorizationDetails'][0]['externalId']);",
											"// pm.environment.set(\"pausedDetailsExternalId\", jsonData[0]['pausedDetails'][0]['externalId']);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b6a66aaf-04df-4240-ba2f-a01e896790d4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						}
					],
					"id": "501b0330-fec1-4cc5-a13b-721476f07459"
				},
				{
					"name": "Verify Start date cannot be before the admin episode start date",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f40c8f32-384e-4b6c-b3a1-78f50f66029f",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "72a5009f-38d8-4990-9a81-b8b691d03681",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5a4499f1-4752-4897-8797-0f79cf23b26e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode with Paused start date before admit date",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "85999471-1687-4a06-956f-33a580a5903d",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"New\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
											"",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(60, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodePausedStartDate = moment(episodeStartDate).subtract(2, 'days').format('YYYY-MM-DD');",
											"let episodePausedEndDate = moment(episodePausedStartDate).add(5, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Paused details",
											"pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
											"pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
											"pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d5e969c9-c67e-46cd-a08a-94d593569a24",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"Verify end date cannot be before the start date error message\", function () {",
											"    pm.expect(jsonData.message).to.be.eql(\"Paused detail start date cannot be before episode start date.\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "39e2356a-ae5d-417f-99e0-c698dc85d083",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate_1}}\",\n            \"endDate\": \"{{pausedStartDate_1}}\",\n            \"pausedReason\": \"{{pausedReason_1}}\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						}
					],
					"id": "1436f9be-bbe6-4f9e-bb5b-c561f23aa7c9"
				},
				{
					"name": "Verify pause end date is required if admin episode is closing",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f533f5e2-37ad-49eb-92da-ada46169a187",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0c53ea50-38ce-46d5-9369-e5402e3aa81d",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9d49bfa7-5f59-46bf-8ebd-40328fce67ad",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode with Paused start date before admit date",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a5e4701f-055a-43c9-b19a-b77bb4d864ea",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"New\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
											"",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(60, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
											"let episodePausedEndDate = moment(episodePausedStartDate).add(5, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Paused details",
											"pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
											"pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
											"pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "dc420b86-838f-4e41-b4e1-a472c5a6235d",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "07f94a7c-e67b-4521-89b9-3bbd7e944f65",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate_1}}\",\n            \"endDate\": \"\",\n            \"pausedReason\": \"{{pausedReason_1}}\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Close the admin episode",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "82a70ee1-d57d-495e-9eda-3fa154773efb",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"Closed\"];",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
											"let closedReasonList = [\"Declined - Chose HLOC (IOP/PHP/RTC)\", \"Declined - Chose new outpt team\", \"Declined - Continue w current team\", \"Declined - Unknown tx choice\", \"Discharged - Admin - Change in payor\", \"Discharged - Admin - Disengaged\", \"Discharged - Admin - Financial\", \"Discharged - Admin - Ins denial\", \"Discharged - AEA - Declined relapse prevention\", \"Discharged - AEA - No care\", \"Discharged - AEA - Inpatient\", \"Discharged - AEA - Outpatient\", \"Discharged - AEA - PHP\", \"Discharged - AEA - RTC\", \"Discharged - HLOC - Inpt med\", \"Discharged - HLOC - Inpt psych\", \"Discharged - HLOC - IOP\", \"Discharged - HLOC - PHP\", \"Discharged - HLOC - RTC\", \"MIA - Lost contact\", \"MIA - No contact\", \"Not eligible - Wrong age\", \"Not eligible - Wrong state\", \"Not qualified - Equip referred to clinical HLOC\", \"Not qualified - Equip referred to medical HLOC\", \"Not qualified - Family unwilling to participate in tx\", \"Not qualified - Financial - Insurance not in-network\", \"Not qualified - No eating disorder\", \"Not qualified - Not living with family\", \"Declined - Admin/Equip delay\", \"Not qualified - Financial - Can't afford OOP $\", \"Contemplative\"];",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(60, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodeClosedDate = moment(episodeStartDate).add(7, 'days').format('YYYY-MM-DD');",
											"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
											"let episodePausedEndDate = moment(episodePausedStartDate).add(5, 'days').format('YYYY-MM-DD');",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"pm.environment.set(\"cdsEpisodeClosedDate\", episodeClosedDate);",
											"pm.environment.set(\"statusReason\", ld.sample(closedReasonList));",
											"",
											"//Paused details",
											"// pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
											"// pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
											"// pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b0d66eb9-31b4-477a-923f-6f6ac4bcde26",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify error message\", function () {",
											"    pm.expect(jsonData.message).to.be.eql(\"Closed episode cannot have open paused detail.\");",
											"});",
											"// console.log(jsonData.message);",
											"//set episodeExternalId to be used in next request",
											"// pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4adcd0b0-83d0-4cc3-8152-6ba9c950ec3a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"{{cdsEpisodeClosedDate}}\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"{{statusReason}}\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate_1}}\",\n            \"endDate\": \"\",\n            \"pausedReason\": \"{{pausedReason_1}}\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes",
										"{{episodeExternalId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "557eec3b-f41a-42d3-919c-3fa2969cc3ef"
				},
				{
					"name": "Verify paused dates cannot overlap",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3c92ec3-aee7-418a-b9c2-3bc3f4beecbb",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "62fe5638-cc8e-40ed-8082-762606726c88",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8bef2eb0-1db9-49a9-bce5-1af67d155411",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode - New",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d7ecdd98-d3b1-4c9b-9a41-6546e7e9939d",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"New\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
											"",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(60, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
											"let episodePausedEndDate = moment(episodePausedStartDate).add(5, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Paused details",
											"pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
											"pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
											"pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "06db3ce4-f5f3-4f6f-837c-5493a258b829",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "594d05dd-bf16-429b-8036-cad8c71fbc21",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate_1}}\",\n            \"endDate\": \"\",\n            \"pausedReason\": \"{{pausedReason_1}}\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Paused details with same start date",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ca57a1d0-160d-410a-89d2-cc5745d311fd",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"New\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
											"",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(60, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
											"let episodePausedEndDate = moment(episodePausedStartDate).add(5, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Paused details",
											"pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
											"pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
											"pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "96c3ed6d-1ef1-4e9c-901b-e5deea6a4581",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"Verify paused dates cannot overlap message\", function () {",
											"    pm.expect(jsonData.message).to.be.eql(\"Paused details cannot overlap.\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "63011959-b08b-4bf2-83b1-15254ff0bc00",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate_1}}\",\n            \"endDate\": \"\",\n            \"pausedReason\": \"{{pausedReason_1}}\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes",
										"{{episodeExternalId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "07eb48fe-d3e7-4d8c-9f5c-e6ddd03db770"
				},
				{
					"name": "Update existing paused details",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b94736e-5544-47c9-ac9c-03b69411a59e",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "54f5e98f-d04b-43da-8886-ba2fa41ad96a",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "959e8196-589c-41e3-99a2-dc40f2cb617a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode with Paused details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "dc9ac427-990e-42dc-a8a2-7913d25bd7ab",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"In-treatment\"];",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
											"",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
											"let episodePausedEndDate = moment(episodePausedStartDate).add(5, 'days').format('YYYY-MM-DD');",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"// pm.environment.set(\"cdsEpisodeClosedDate\", episodeClosedDate);",
											"// pm.environment.set(\"statusReason\", ld.sample(pausedStatusReasonList));",
											"",
											"//Paused details",
											"pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
											"pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
											"pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a16c6e68-e3fe-45de-92b4-09015676fa2e",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "30e9f1c1-4e97-47cc-9144-aafaea24bce0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate_1}}\",\n            \"endDate\": \"{{pausedEndDate_1}}\",\n            \"pausedReason\": \"{{pausedReason_1}}\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get episode after add",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "57287c01-eb31-403c-a793-04bb62a7c0fa",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify data type\", function () {",
											"    for (i = 0; i < jsonData.length; i++) {",
											"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.a('number');",
											"        pm.expect(jsonData[i][\"level\"]).to.be.a('string');",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['authorizationNumber']).to.be.a('string');",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['startDate']).to.be.a('string');",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['endDate']).to.be.a('string');",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['coverageExternalId']).to.be.a('string');",
											"    }",
											"});",
											"",
											"pm.test(\"Verify episode status values\", function () {",
											"    for (i = 0; i < jsonData.length; i++) {",
											"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.eql(pm.environment.get(\"patientId\"));",
											"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.eql(pm.environment.get(\"episodeExternalId\"));",
											"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.eql(pm.environment.get(\"cdsTreatmentProgramName\"));",
											"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStatus\"));",
											"        pm.expect(jsonData[i][\"statusReason\"]).to.be.eql(null);",
											"        pm.expect(jsonData[i][\"payorName\"]).to.be.eql(null);",
											"        pm.expect(jsonData[i][\"payorProgramName\"]).to.be.eql(null);",
											"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStartDate\"));",
											"        pm.expect(jsonData[i][\"episodeClosedDate\"]).to.be.eql(null);",
											"        pm.expect(jsonData[i][\"firstInquiryReferralDate\"]).to.be.eql(pm.environment.get(\"firstInquiryReferralDate\"));",
											"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.eql(pm.environment.get(\"cdsLengthInWeeks\"));",
											"        pm.expect(jsonData[i][\"level\"]).to.be.eql(pm.environment.get(\"cdsLevel\"));",
											"",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['authorizationNumber']).to.be.eql(pm.environment.get(\"authorizationNumber\"));",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['startDate']).to.be.eql(pm.environment.get(\"authorizationStartDate\"));",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['endDate']).to.be.eql(pm.environment.get(\"authorizationEndDate\"));",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['coverageExternalId']).to.be.eql(pm.environment.get(\"coverageExternalId\"));",
											"        // pm.expect(jsonData[i]['authorizationDetails'][i][\"payorProgram\"]).to.be.eql(null);",
											"        pm.expect(jsonData[i]['authorizationDetails'][i][\"approvedSessions\"]).to.be.eql(12);",
											"        pm.expect(jsonData[i]['authorizationDetails'][i][\"approvedSessionUnits\"]).to.be.eql(\"days\");",
											"        pm.expect(jsonData[i]['authorizationDetails'][i][\"isAuthRequired\"]).to.be.eql(true);",
											"",
											"        pm.expect(jsonData[i]['pausedDetails'][i][\"startDate\"]).to.be.eql(pm.environment.get(\"pausedStartDate_1\"));",
											"        pm.expect(jsonData[i]['pausedDetails'][i][\"endDate\"]).to.be.eql(pm.environment.get(\"pausedEndDate_1\"));",
											"        pm.expect(jsonData[i]['pausedDetails'][i][\"pausedReason\"]).to.be.eql(pm.environment.get(\"pausedReason_1\"));",
											"        // pm.expect(jsonData[i]['pausedDetails'][i][\"open\"]).to.be.eql(false);",
											"",
											"    }",
											"});",
											"",
											"//set externalId to be used in next request",
											"pm.environment.set(\"cdsExternalId\", jsonData[0]['authorizationDetails'][0]['externalId']);",
											"pm.environment.set(\"pausedDetailsExternalId\", jsonData[0]['pausedDetails'][0]['externalId']);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "00b9ecfa-4878-4c3b-9705-e02a8b705d9f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update exsiting paused details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cf41708a-f993-4bd5-9c99-912acef20eb7",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"In-treatment\"];",
											"",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
											"",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(60, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodePausedStartDate = moment(episodeStartDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodePausedEndDate = moment(episodePausedStartDate).add(6, 'days').format('YYYY-MM-DD');",
											"",
											"",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Paused details",
											"pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
											"pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
											"pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8b8c8214-9e94-4dd1-8306-983bcb5ee397",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b5471bf3-4bc0-4536-95d1-9896e584d115",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"externalId\": \"{{pausedDetailsExternalId}}\",\n            \"startDate\": \"{{pausedStartDate_1}}\",\n            \"endDate\": \"\",\n            \"pausedReason\": \"{{pausedReason_1}}\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes/{{episodeExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes",
										"{{episodeExternalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get episode after updating existing paused details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b17df3dd-ca65-49cf-b803-ab35b93ec224",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Verify data type\", function () {",
											"    for (i = 0; i < jsonData.length; i++) {",
											"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.a('string');",
											"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.a('number');",
											"        pm.expect(jsonData[i][\"level\"]).to.be.a('string');",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['authorizationNumber']).to.be.a('string');",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['startDate']).to.be.a('string');",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['endDate']).to.be.a('string');",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['coverageExternalId']).to.be.a('string');",
											"    }",
											"});",
											"",
											"pm.test(\"Verify episode status values\", function () {",
											"    for (i = 0; i < jsonData.length; i++) {",
											"        pm.expect(jsonData[i][\"patientExternalId\"]).to.be.eql(pm.environment.get(\"patientId\"));",
											"        pm.expect(jsonData[i][\"episodeExternalId\"]).to.be.eql(pm.environment.get(\"episodeExternalId\"));",
											"        pm.expect(jsonData[i][\"treatmentProgramName\"]).to.be.eql(pm.environment.get(\"cdsTreatmentProgramName\"));",
											"        pm.expect(jsonData[i][\"episodeStatus\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStatus\"));",
											"        pm.expect(jsonData[i][\"statusReason\"]).to.be.eql(null);",
											"        pm.expect(jsonData[i][\"payorName\"]).to.be.eql(null);",
											"        pm.expect(jsonData[i][\"payorProgramName\"]).to.be.eql(null);",
											"        pm.expect(jsonData[i][\"episodeStartDate\"]).to.be.eql(pm.environment.get(\"cdsEpisodeStartDate\"));",
											"        pm.expect(jsonData[i][\"episodeClosedDate\"]).to.be.eql(null);",
											"        pm.expect(jsonData[i][\"firstInquiryReferralDate\"]).to.be.eql(pm.environment.get(\"firstInquiryReferralDate\"));",
											"        pm.expect(jsonData[i][\"lengthInWeeks\"]).to.be.eql(pm.environment.get(\"cdsLengthInWeeks\"));",
											"        pm.expect(jsonData[i][\"level\"]).to.be.eql(pm.environment.get(\"cdsLevel\"));",
											"",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['authorizationNumber']).to.be.eql(pm.environment.get(\"authorizationNumber\"));",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['startDate']).to.be.eql(pm.environment.get(\"authorizationStartDate\"));",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['endDate']).to.be.eql(pm.environment.get(\"authorizationEndDate\"));",
											"        pm.expect(jsonData[i]['authorizationDetails'][i]['coverageExternalId']).to.be.eql(pm.environment.get(\"coverageExternalId\"));",
											"        // pm.expect(jsonData[i]['authorizationDetails'][i][\"payorProgram\"]).to.be.eql(null);",
											"        pm.expect(jsonData[i]['authorizationDetails'][i][\"approvedSessions\"]).to.be.eql(12);",
											"        pm.expect(jsonData[i]['authorizationDetails'][i][\"approvedSessionUnits\"]).to.be.eql(\"days\");",
											"        pm.expect(jsonData[i]['authorizationDetails'][i][\"isAuthRequired\"]).to.be.eql(true);",
											"",
											"        pm.expect(jsonData[i]['pausedDetails'][i][\"startDate\"]).to.be.eql(pm.environment.get(\"pausedStartDate_1\"));",
											"        pm.expect(jsonData[i]['pausedDetails'][i][\"endDate\"]).to.be.eql(null);",
											"        pm.expect(jsonData[i]['pausedDetails'][i][\"pausedReason\"]).to.be.eql(pm.environment.get(\"pausedReason_1\"));",
											"        // pm.expect(jsonData[i]['pausedDetails'][i][\"open\"]).to.be.eql(false);",
											"",
											"    }",
											"});",
											"",
											"//set externalId to be used in next request",
											"pm.environment.set(\"cdsExternalId\", jsonData[0]['authorizationDetails'][0]['externalId']);",
											"pm.environment.set(\"pausedDetailsExternalId\", jsonData[0]['pausedDetails'][0]['externalId']);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "919368fd-f0af-4fd4-a999-c8099388f340",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						}
					],
					"id": "799ba37f-d563-477c-98d4-bb7279108cc5"
				},
				{
					"name": "Verify paused end date cannot be after the admin episode closed date",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "468e25ab-8ca0-4455-90f0-aa3858944b6a",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bbac8590-6f41-4c5c-a099-f0f1ae527ea8",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d9fdf036-bc66-48f6-8b66-2827df7e735b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode - Closed with Paused end date after closed date",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "763d3093-fff2-4a90-b3b5-14bcb4e0ae3e",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"Closed\"];",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
											"",
											"let closedReasonList = [\"Declined - Chose HLOC (IOP/PHP/RTC)\", \"Declined - Chose new outpt team\", \"Declined - Continue w current team\", \"Declined - Unknown tx choice\", \"Discharged - Admin - Change in payor\", \"Discharged - Admin - Disengaged\", \"Discharged - Admin - Financial\", \"Discharged - Admin - Ins denial\", \"Discharged - AEA - Declined relapse prevention\", \"Discharged - AEA - No care\", \"Discharged - AEA - Inpatient\", \"Discharged - AEA - Outpatient\", \"Discharged - AEA - PHP\", \"Discharged - AEA - RTC\", \"Discharged - HLOC - Inpt med\", \"Discharged - HLOC - Inpt psych\", \"Discharged - HLOC - IOP\", \"Discharged - HLOC - PHP\", \"Discharged - HLOC - RTC\", \"MIA - Lost contact\", \"MIA - No contact\", \"Not eligible - Wrong age\", \"Not eligible - Wrong state\", \"Not qualified - Equip referred to clinical HLOC\", \"Not qualified - Equip referred to medical HLOC\", \"Not qualified - Family unwilling to participate in tx\", \"Not qualified - Financial - Insurance not in-network\", \"Not qualified - No eating disorder\", \"Not qualified - Not living with family\", \"Declined - Admin/Equip delay\", \"Not qualified - Financial - Can't afford OOP $\", \"Contemplative\"];",
											"",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodeClosedDate = moment(episodeStartDate).add(7, 'days').format('YYYY-MM-DD');",
											"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
											"let episodePausedEndDate = moment(episodeClosedDate).add(1, 'days').format('YYYY-MM-DD');",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"pm.environment.set(\"cdsEpisodeClosedDate\", episodeClosedDate);",
											"pm.environment.set(\"statusReason\", ld.sample(closedReasonList));",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Paused details",
											"pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
											"pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
											"pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "442e10f5-e850-4aa0-b9b7-9dfd8fc4196b",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"Verify Paused end date cannot be after episode closed date error message\", function () {",
											"    pm.expect(jsonData.message).to.be.eql(\"Paused end date cannot be after episode closed date.\");",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"// pm.environment.set(\"episodeExternalId\", pm.response.text());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b802f0c0-497f-4b84-a1e4-1706db789a43",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"{{cdsEpisodeClosedDate}}\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"{{statusReason}}\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate_1}}\",\n            \"endDate\": \"{{pausedEndDate_1}}\",\n            \"pausedReason\": \"{{pausedReason_1}}\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						}
					],
					"id": "6ebdef65-56bd-48b5-85e5-d658733cd205"
				},
				{
					"name": "Verify admin episode is closed not paused if both the dates are same",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bc7b9a01-09af-480d-bb8e-af768e82cb1b",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "10c13fe5-9d18-48e9-9c62-b3276e37f8f0",
										"exec": [
											"let ld = require('lodash');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"patientFirstName\", firstName);",
											"pm.environment.set(\"patientLastName\", lastName);",
											"pm.environment.set(\"patientEmail\", email);",
											"pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", dateOfBirth);",
											"pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"pm.environment.set(\"patientState\", ld.sample(statesList));",
											"pm.environment.set(\"patientCountry\", \"US\");",
											"pm.environment.set(\"patientZip\", zip.toString());",
											"pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "30fec258-f3e4-49a3-bf3e-ec4b944c5a41",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"contactPreferences\": {{patientContactPreferences}},\n    \"ethnicities\": {{patientEthnicities}},\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"chosenName\": \"{{patientChosenName}}\",\n    \"languages\": {{patientLanguages}},\n    \"genderOnRecord\": \"{{patientGenderOnRecord}}\",\n    \"genderOffRecord\": \"{{patientGenderOffRecord}}\",\n    \"pronounsOnRecord\": \"{{patientPronounsOnRecord}}\",\n    \"pronounsOffRecord\": \"{{patientPronounsOffRecord}}\",\n    \"sex\": \"{{patientSex}}\",\n    \"timezone\": \"{{patientTimezone}}\",\n    \"latitude\": \"{{patientLatitude}}\",\n    \"longitude\": \"{{patientLongitude}}\",\n    \"addressLine1\": \"{{patientAddressLine1}}\",\n    \"addressLine2\": \"{{patientAddressLine2}}\",\n    \"city\": \"{{patientCity}}\",\n    \"country\": \"{{patientCountry}}\",\n    \"state\": \"{{patientState}}\",\n    \"zip\": \"{{patientZip}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add episode - Closed with Paused end date and closed date same",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7dc19227-231f-48cb-8db9-fbe782dbdce4",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let episodeStatusList = [\"Closed\"];",
											"let treatmentProgramList = [\"Equip treatment\"];",
											"let pausedReasonList = [\"HLOC - Inpatient Med\", \"HLOC - Inpatient Psych\"];",
											"",
											"let closedReasonList = [\"Declined - Chose HLOC (IOP/PHP/RTC)\", \"Declined - Chose new outpt team\", \"Declined - Continue w current team\", \"Declined - Unknown tx choice\", \"Discharged - Admin - Change in payor\", \"Discharged - Admin - Disengaged\", \"Discharged - Admin - Financial\", \"Discharged - Admin - Ins denial\", \"Discharged - AEA - Declined relapse prevention\", \"Discharged - AEA - No care\", \"Discharged - AEA - Inpatient\", \"Discharged - AEA - Outpatient\", \"Discharged - AEA - PHP\", \"Discharged - AEA - RTC\", \"Discharged - HLOC - Inpt med\", \"Discharged - HLOC - Inpt psych\", \"Discharged - HLOC - IOP\", \"Discharged - HLOC - PHP\", \"Discharged - HLOC - RTC\", \"MIA - Lost contact\", \"MIA - No contact\", \"Not eligible - Wrong age\", \"Not eligible - Wrong state\", \"Not qualified - Equip referred to clinical HLOC\", \"Not qualified - Equip referred to medical HLOC\", \"Not qualified - Family unwilling to participate in tx\", \"Not qualified - Financial - Insurance not in-network\", \"Not qualified - No eating disorder\", \"Not qualified - Not living with family\", \"Declined - Admin/Equip delay\", \"Not qualified - Financial - Can't afford OOP $\", \"Contemplative\"];",
											"",
											"let medicalClearanceStatuses = [\"Cleared\", \"In progress\", \"Not cleared\", \"Not ready\", \"Ready for review\"];",
											"let insuranceVerificationStatuses = [\"Approved\", \"Denied\", \"Not ready\", \"Pre-authorization in progress\", \"Ready for review\", \"Verification in progress\"];",
											"let levelList = [\"Purple\", \"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Teal\", \"Green\"];",
											"",
											"let firstInquiryReferralDate = moment().subtract(90, 'days').format('YYYY-MM-DD');",
											"let episodeStartDate = moment(firstInquiryReferralDate).add(3, 'days').format('YYYY-MM-DD');",
											"let episodeClosedDate = moment(episodeStartDate).add(7, 'days').format('YYYY-MM-DD');",
											"let episodePausedStartDate = moment(episodeStartDate).add(2, 'days').format('YYYY-MM-DD');",
											"let episodePausedEndDate = moment(episodePausedStartDate).add(2, 'days').format('YYYY-MM-DD');",
											"",
											"//Save the variables to be used in next request for validation",
											"pm.environment.set(\"cdsEpisodeStatus\", ld.sample(episodeStatusList));",
											"pm.environment.set(\"cdsTreatmentProgramName\", ld.sample(treatmentProgramList));",
											"pm.environment.set(\"cdsLengthInWeeks\", ld.random(1, 8));",
											"pm.environment.set(\"cdsLevel\", ld.sample(levelList));",
											"pm.environment.set(\"firstInquiryReferralDate\", firstInquiryReferralDate);",
											"pm.environment.set(\"cdsEpisodeStartDate\", episodeStartDate);",
											"pm.environment.set(\"cdsEpisodeClosedDate\", episodeClosedDate);",
											"pm.environment.set(\"statusReason\", ld.sample(closedReasonList));",
											"",
											"//Authorization details",
											"pm.environment.set(\"authorizationNumber\", \"ABC12345\");",
											"pm.environment.set(\"authorizationStartDate\", episodeStartDate);",
											"pm.environment.set(\"authorizationEndDate\", moment(episodeStartDate).add(90, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Paused details",
											"pm.environment.set(\"pausedStartDate_1\", episodePausedStartDate);",
											"pm.environment.set(\"pausedEndDate_1\", episodePausedEndDate);",
											"pm.environment.set(\"pausedReason_1\", ld.sample(pausedReasonList));",
											"",
											"//Medical clearance details",
											"pm.environment.set(\"medicalClearanceStatus\", ld.sample(medicalClearanceStatuses));",
											"pm.environment.set(\"medicalClearanceRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"medicalClearanceCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));",
											"",
											"//Insurance verification details",
											"pm.environment.set(\"insuranceVerificationStatus\", ld.sample(insuranceVerificationStatuses));",
											"pm.environment.set(\"insuranceVerificationRequestedDate\", episodeStartDate);",
											"pm.environment.set(\"insuranceVerificationCompletedDate\", moment(episodeStartDate).add(3, \"days\").format('YYYY-MM-DD'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "20f7bfa5-abd0-4f5b-a72c-333bbd02559a",
										"exec": [
											"var jsonData = pm.response;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Verify episode id is generated\", function () {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"//set episodeExternalId to be used in next request",
											"pm.environment.set(\"episodeExternalId\", pm.response.text());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "19a79c95-9a06-40e3-8930-06984b76640c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"treatmentProgramName\": \"{{cdsTreatmentProgramName}}\",\n    \"episodeStatus\": \"{{cdsEpisodeStatus}}\",\n    \"episodeStartDate\": \"{{cdsEpisodeStartDate}}\",\n    \"episodeClosedDate\": \"{{cdsEpisodeClosedDate}}\",\n    \"lengthInWeeks\": {{cdsLengthInWeeks}},\n    \"level\": \"{{cdsLevel}}\",\n    \"statusReason\": \"{{statusReason}}\",\n    \"firstInquiryReferralDate\": \"{{firstInquiryReferralDate}}\",\n    \"authorizationDetails\": [\n        {\n            \"authorizationNumber\": \"{{authorizationNumber}}\",\n            \"coverageExternalId\": \"{{coverageExternalId}}\",\n            \"externalId\": \"{{cdsExternalId}}\",\n            \"startDate\": \"{{authorizationStartDate}}\",\n            \"endDate\": \"{{authorizationEndDate}}\",\n            \"payorProgram\": \"{{payorProgram}}\",\n            \"isAuthRequired\": true,\n            \"approvedSessions\": 12,\n            \"approvedSessionUnits\": \"DAYS\"\n        }\n    ],\n    \"pausedDetails\": [\n        {\n            \"startDate\": \"{{pausedStartDate_1}}\",\n            \"endDate\": \"{{cdsEpisodeClosedDate}}\",\n            \"pausedReason\": \"{{pausedReason_1}}\"\n        }\n    ],\n    \"medicalClearance\": {\n        \"medicalClearanceStatus\": \"{{medicalClearanceStatus}}\",\n        \"requestedDate\": \"{{medicalClearanceRequestedDate}}\",\n        \"completedDate\": \"{{medicalClearanceCompletedDate}}\"\n    },\n    \"insuranceVerification\": {\n        \"insuranceVerificationStatus\": \"{{insuranceVerificationStatus}}\",\n        \"requestedDate\": \"{{insuranceVerificationRequestedDate}}\",\n        \"completedDate\": \"{{insuranceVerificationCompletedDate}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get clinical profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "73064433-9e64-443f-95c7-f8d54d70b54f",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"// let expectedResponse = {",
											"//     \"externalId\": pm.environment.get(\"primaryDiagnosisId\"),",
											"//     \"primaryDiagnosis\": pm.environment.get(\"primaryDiagnosis\"),",
											"//     \"primaryDiagnosisAbbreviation\": pm.environment.get(\"primaryDiagnosisAbbreviation\"),",
											"//     \"patientStatus\": pm.environment.get(\"cdsEpisodeStatus\"),",
											"//     \"pausedStatus\": false,",
											"//     \"admitDate\": pm.environment.get(\"cdsEpisodeStartDate\")",
											"// };",
											"",
											"pm.test(\"Verify patient's clinical profile\", function () {",
											"    // pm.expect(jsonData).to.eql(expectedResponse);",
											"    pm.expect(jsonData.patientStatus).to.eql(pm.environment.get(\"cdsEpisodeStatus\"));",
											"    pm.expect(jsonData.pausedStatus).to.eql(false);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "89d1435b-1695-4913-a0f2-8442af2f8a48",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"externalId\": \"string\",\n    \"primaryDiagnosis\": \"string\",\n    \"primaryDiagnosisAbbreviation\": \"string\",\n    \"patientStatus\": \"string\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/clinical-data/patients/{{patientId}}/clinical-profile",
									"host": [
										"{{host}}"
									],
									"path": [
										"clinical-data",
										"patients",
										"{{patientId}}",
										"clinical-profile"
									]
								}
							},
							"response": []
						}
					],
					"id": "9c7bf42d-d1ed-4216-8086-a7120f7f2c2b"
				}
			],
			"id": "6b1aa9f0-ec21-406c-9502-7b96da586e71"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e90da854-63e6-4632-825d-dfbd48f0d1d7",
				"type": "text/javascript",
				"exec": [
					"collectionMethods = {",
					"    //Return random value by passing the list values",
					"    getAgeFromDOB: function (dob) {",
					"        var ageDifMs = Date.now() - new Date(dob).getTime();",
					"        var ageDate = new Date(ageDifMs); // miliseconds from epoch",
					"        return Math.abs(ageDate.getUTCFullYear() - 1970);",
					"    },",
					"    //Return random date value by passing start and end date",
					"    randomDate: function (start, end) {",
					"        return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
					"    }",
					"}",
					"",
					"// Refresh the OAuth token if necessary",
					"console.log('Current environment: ' + pm.environment.name);",
					"",
					"if (pm.environment.name === \"qa\") {",
					"    pm.environment.set(\"vesta_audience\", \"https://equip-qa.us.auth0.com/api/v2/\");",
					"    pm.environment.set(\"token_tenant\", \"equip-qa\");",
					"    pm.environment.set(\"coookieURL\", \"https://equip-qa.us.auth0.com\");",
					"    pm.environment.set(\"vesta_client_id\", \"octk74sRPfVm7zJz314cMMzFHnGO3B2s\")",
					"    pm.environment.set(\"token_host\", \"https://equip-qa.us.auth0.com\")",
					"} else if (pm.environment.name === \"dev\") {",
					"    pm.environment.set(\"vesta_audience\", \"https://equip-dev.us.auth0.com/api/v2/\");",
					"    pm.environment.set(\"token_tenant\", \"equip-dev\");",
					"    pm.environment.set(\"coookieURL\", \"https://equip-dev.us.auth0.com\");",
					"    pm.environment.set(\"vesta_client_id\", \"hh9fZVGIShbS2xXdr7B0glheYEKOFFdw\")",
					"    pm.environment.set(\"token_host\", \"https://equip-dev.us.auth0.com\")",
					"}",
					"",
					"var tokenDate = new Date(2010, 1, 1);",
					"var tokenTimestamp = pm.environment.get(\"OAuth_Timestamp\");",
					"if (tokenTimestamp) {",
					"    tokenDate = Date.parse(tokenTimestamp);",
					"}",
					"var expiresInTime = pm.environment.get(\"ExpiresInTime\");",
					"if (!expiresInTime) {",
					"    expiresInTime = 86400000; // Set default expiration time to 24 hours (in ms)",
					"}",
					"",
					"if ((new Date() - tokenDate) >= expiresInTime || pm.environment.get(\"test-token\") === \"\") {",
					"    // clearCookies();",
					"    getToken();",
					"}",
					"",
					"var tokenAuthorizationCode1;",
					"var tokenAuthorizationCode2;",
					"//Function to generate token",
					"function getToken() {",
					"    //Clear cookies",
					"    const cookieJar = pm.cookies.jar();",
					"    cookieJar.clear(pm.environment.get(\"coookieURL\"), () => {",
					"        console.log(\"Cookies cleared!\");",
					"        cookieJar.clear(pm.environment.get(\"coookieURL\") + '/usernamepassword/login', () => {",
					"            console.log(\"CSRF cookies cleared!\");",
					"",
					"            console.log(\"Generating token...\")",
					"            //GET authorization code",
					"            pm.sendRequest({",
					"                url: pm.environment.get(\"token_host\") + '/authorize?audience=' + pm.environment.get(\"vesta_audience\")",
					"                    + '&response_type=code&client_id=' + pm.environment.get(\"vesta_client_id\")",
					"                    + '&redirect_uri=https://*.equip.health',",
					"                method: 'GET',",
					"                header: {",
					"                    'Accept': '*/*'",
					"                }",
					"            }, (err, res) => {",
					"                let responseHeaderData = res.headers.get('Location').split('=');",
					"                let token = responseHeaderData[1].split('&');",
					"                tokenAuthorizationCode1 = token[0];",
					"                console.log(tokenAuthorizationCode1);",
					"",
					"                //POST request to login to vesta",
					"                let url = pm.environment.get(\"token_host\") + '/usernamepassword/login';",
					"                pm.sendRequest({",
					"                    url: url,",
					"                    method: 'POST',",
					"                    header: {",
					"                        'Accept': '*/*',",
					"                        'Content-Type': 'application/x-www-form-urlencoded',",
					"                    },",
					"                    body: {",
					"                        mode: 'urlencoded',",
					"                        urlencoded: [",
					"                            { key: \"username\", value: pm.environment.get(\"vesta_username\") },",
					"                            { key: \"password\", value: pm.environment.get(\"vesta_password\") },",
					"                            { key: \"state\", value: tokenAuthorizationCode1 },",
					"                            { key: \"tenant\", value: pm.environment.get(\"token_tenant\") },",
					"                            { key: \"client_id\", value: pm.environment.get(\"vesta_client_id\") },",
					"                            { key: \"redirect_uri\", value: \"https://*.equip.health\" },",
					"                            { key: \"response_type\", value: \"code\" },",
					"                            { key: \"connection\", value: \"Username-Password-Authentication\" }",
					"                        ]",
					"                    }",
					"                }, (err, res) => {",
					"                    const $ = cheerio.load(res.text());",
					"                    var wresult = ($(\"input\")[1])['attribs'].value; // get wresult",
					"                    var wctx = ($(\"input\")[2])['attribs'].value; // get wctx",
					"",
					"                    //POST request to get resume state",
					"                    let url = pm.environment.get(\"token_host\") + '/login/callback';",
					"                    pm.sendRequest({",
					"                        url: url,",
					"                        method: 'POST',",
					"                        header: {",
					"                            'Accept': '*/*',",
					"                            'Content-Type': 'application/x-www-form-urlencoded',",
					"                        },",
					"                        body: {",
					"                            mode: 'urlencoded',",
					"                            urlencoded: [",
					"                                { key: \"wa\", value: \"wsignin1.0\" },",
					"                                { key: \"wresult\", value: wresult },",
					"                                { key: \"wctx\", value: wctx }",
					"                            ]",
					"                        }",
					"                    }, (err, res) => {",
					"                        //GET authorization code",
					"                        pm.sendRequest({",
					"                            url: pm.environment.get(\"token_host\")",
					"                                + '/authorize?audience=' + pm.environment.get(\"vesta_audience\")",
					"                                + '&response_type=code&client_id=' + pm.environment.get(\"vesta_client_id\")",
					"                                + '&redirect_uri=https://*.equip.health',",
					"                            method: 'GET',",
					"                            header: {",
					"                                'Accept': '*/*'",
					"                            }",
					"                        }, (err, res) => {",
					"                            console.log(res);",
					"                            let responseHeaderData = res.headers.get('Location').split('=');",
					"                            let token = responseHeaderData[1].split('&');",
					"                            // console.log(token[0]);",
					"                            tokenAuthorizationCode2 = token[0];",
					"                            // Get token using POST request",
					"                            let url = pm.environment.get(\"token_host\") + '/oauth/token';",
					"                            pm.sendRequest({",
					"                                url: url,",
					"                                method: 'POST',",
					"                                header: {",
					"                                    'Accept': '*/*',",
					"                                    'Content-Type': 'application/x-www-form-urlencoded',",
					"                                },",
					"                                body: {",
					"                                    mode: 'urlencoded',",
					"                                    urlencoded: [",
					"                                        { key: \"client_id\", value: pm.environment.get(\"vesta_client_id\") },",
					"                                        { key: \"code\", value: tokenAuthorizationCode2 },",
					"                                        { key: \"audience\", value: pm.environment.get(\"vesta_audience\") },",
					"                                        { key: \"grant_type\", value: \"authorization_code\" },",
					"                                        { key: \"redirect_uri\", value: \"https://*.equip.health\" }]",
					"                                }",
					"                            }, (err, res) => {",
					"                                console.log(res.json().access_token)",
					"                                pm.environment.set(\"test-token\", res.json().access_token)",
					"                                pm.environment.set(\"OAuth_Timestamp\", new Date());",
					"",
					"                                // Set the ExpiresInTime variable to the time given in the response if it exists",
					"                                if (res.json().expires_in) {",
					"                                    expiresInTime = res.json().expires_in * 1000;",
					"                                }",
					"                                pm.environment.set(\"ExpiresInTime\", expiresInTime);",
					"                            })",
					"                        });",
					"                    });",
					"",
					"                });",
					"            });",
					"        });",
					"    });",
					"}",
					"",
					"let states = [",
					"    \"Alaska\",",
					"    \"Alabama\",",
					"    \"Arizona\",",
					"    \"Arkansas\",",
					"    \"California\",",
					"    \"Colorado\",",
					"    \"Connecticut\",",
					"    \"Delaware\",",
					"    \"District of Columbia\",",
					"    \"Florida\",",
					"    \"Georgia\",",
					"    \"Hawaii\",",
					"    \"Idaho\",",
					"    \"Illinois\",",
					"    \"Indiana\",",
					"    \"Iowa\",",
					"    \"Kansas\",",
					"    \"Kentucky\",",
					"    \"Louisiana\",",
					"    \"Maine\",",
					"    \"Maryland\",",
					"    \"Massachusetts\",",
					"    \"Michigan\",",
					"    \"Minnesota\",",
					"    \"Mississippi\",",
					"    \"Missouri\",",
					"    \"Montana\",",
					"    \"Nebraska\",",
					"    \"Nevada\",",
					"    \"New Hampshire\",",
					"    \"New Jersey\",",
					"    \"New Mexico\",",
					"    \"New York\",",
					"    \"North Carolina\",",
					"    \"North Dakota\",",
					"    \"Ohio\",",
					"    \"Oklahoma\",",
					"    \"Oregon\",",
					"    \"Pennsylvania\",",
					"    \"Puerto Rico\",",
					"    \"Rhode Island\",",
					"    \"South Carolina\",",
					"    \"South Dakota\",",
					"    \"Tennessee\",",
					"    \"Texas\",",
					"    \"Utah\",",
					"    \"Vermont\",",
					"    \"Virginia\",",
					"    \"Washington\",",
					"    \"West Virginia\",",
					"    \"Wisconsin\",",
					"    \"Wyoming\",",
					"    \"Outside US\",",
					"    \"Unknown\"",
					"];",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2ed2b794-8f3b-401b-9dbf-96ea011b3d5c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}