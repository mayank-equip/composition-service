{
	"info": {
		"_postman_id": "cda0d371-32fd-46a3-90fe-3f92e459c487",
		"name": "Inquiry-Referral-Service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "19609580-cda0d371-32fd-46a3-90fe-3f92e459c487"
	},
	"item": [
		{
			"name": "Search inquiry referral",
			"item": [
				{
					"name": "inquiryTypeSelf",
					"item": [
						{
							"name": "Add Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "052e7b62-04f9-4848-9961-627829c82818",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "dd0a9001-1a37-41de-94a4-c88d9766c082",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"// pm.environment.set(\"patientFirstName\", firstName);",
											"// pm.environment.set(\"patientLastName\", lastName);",
											"// pm.environment.set(\"patientEmail\", email);",
											"// pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"// pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'));",
											"// pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"// pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"// pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"// pm.environment.set(\"patientState\", ld.sample(statesList));",
											"// pm.environment.set(\"patientCountry\", \"US\");",
											"// pm.environment.set(\"patientZip\", zip.toString());",
											"// pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"// pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"// pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"// pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"// pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"// pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"// pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"// pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"// pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"// pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"// pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));",
											"",
											"pm.environment.set(\"patientPhoneNumber\", pm.environment.get(\"patientMobile\").slice(2));",
											"",
											"    //  \"dateOfBirth\": moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'),",
											"    //         \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"    //         \"lastName\": pm.environment.get(\"patientLastName\"),",
											"    //         \"phoneNumber\": pm.environment.get(\"patientPhone\"),",
											"    //         \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
											"    //         \"email\": pm.environment.get(\"patientEmail\"),",
											"    //         \"age\": pm.environment.get(\"patientAge\"),",
											"    //         \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"    //         \"state\": pm.environment.get(\"patientState\"),",
											"    //         \"type\": \"Inquiry\",",
											"    //         \"contactPrimary\": {},",
											"    //         \"inquiryDate\": moment().format('YYYY-MM-DD')",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d89e6f86-4fd4-449c-82a0-d304b9c53982",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"state\": \"{{patientState}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "add-inquiry-self",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6567d510-88f5-4033-a220-54fee15b8f2d",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Verify inquiryExternalId is generated\", function () {",
											"    pm.expect(jsonData.inquiryExternalId).length.greaterThan(0);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.environment.set(\"inquiryExternalId\", jsonData.inquiryExternalId);",
											"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e2109c68-c192-498d-9cf2-63be42ac839c",
										"exec": [
											"var date_timestamp = new Date().toISOString();",
											"let moment = require('moment');",
											"let ld = require('lodash');",
											"",
											"let states = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
											"",
											"var equip_source;",
											"if (pm.environment.name === \"qa\") {",
											"    equip_source = [",
											"        {",
											"            \"equip_source_name\": \"Dietitian\",",
											"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Doctor\\/clinician\",",
											"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Eating disorder organization\",",
											"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip employee\",",
											"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip event\\/webinar\",",
											"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip patient\\/family\",",
											"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Friend or family member\",",
											"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Google\\/search\",",
											"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Health insurance\\/payor\",",
											"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Hospital\\/medical center\",",
											"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Newsletter\",",
											"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Other\",",
											"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Press\",",
											"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"School\",",
											"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Social media\",",
											"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Therapist\",",
											"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
											"        }",
											"    ];",
											"}",
											"else if (pm.environment.name === \"dev\") {",
											"    equip_source = [",
											"        {",
											"            \"equip_source_name\": \"Dietitian\",",
											"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Doctor\\/clinician\",",
											"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Eating disorder organization\",",
											"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip employee\",",
											"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip event\\/webinar\",",
											"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip patient\\/family\",",
											"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Friend or family member\",",
											"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Google\\/search\",",
											"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Health insurance\\/payor\",",
											"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Hospital\\/medical center\",",
											"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Newsletter\",",
											"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Other\",",
											"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Press\",",
											"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"School\",",
											"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Social media\",",
											"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Therapist\",",
											"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
											"        }",
											"    ];",
											"}",
											"let random_equip_source = ld.sample(equip_source);",
											"let equip_source_id = random_equip_source.equip_source_external_id;",
											"let equip_source_name = random_equip_source.equip_source_name;",
											"",
											"let age = ld.random(6, 24);",
											"let dob = moment().subtract(age, 'years').format('YYYY-MM-DD');",
											"",
											"///// get random date of birth (past date) /////",
											"// var end = new Date();",
											"// var start = new Date(1970, 1, 1);",
											"// var dob = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"// var month = (dob.getMonth() + 1) >= 10 ? dob.getMonth() + 1 : \"0\" + (dob.getMonth() + 1);",
											"// console.log(\"month: \" + month);",
											"// var day = (dob.getDate() + 1) > 10 ? dob.getDate() : \"0\" + dob.getDate();",
											"// var dob = dob.getFullYear() + '-' + month + '-' + day;",
											"// dob = dob;",
											"// console.log(dob);",
											"///// end - get random date of birth (past date) /////",
											"let patientFirstName = pm.variables.replaceIn('{{$randomFirstName}}') + date_timestamp;",
											"let patientLastName = pm.variables.replaceIn('{{$randomLastName}}') + date_timestamp;",
											"",
											"pm.environment.set(\"patientFirstName\", patientFirstName);",
											"pm.environment.set(\"patientLastName\", patientLastName);",
											"pm.environment.set(\"patientEmail\", \"qa\" + \"+\" + patientFirstName + \"+\" + Date.now() + \"@equip.health\");",
											"pm.environment.set(\"patientMobile\", \"+1 \" + pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientPreferredContact\", \"both\");",
											"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
											"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
											"pm.environment.set(\"dob\", dob);",
											"pm.environment.set(\"age\", age);",
											"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
											"pm.environment.set(\"equipSourceName\", equip_source_name);",
											"pm.environment.set(\"patientState\", ld.sample(states));",
											"",
											"var assigneeUserId, assigneeUserName;",
											"if (pm.environment.name === \"qa\") {",
											"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
											"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
											"} else {",
											"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
											"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "65cd53f7-7cd3-411e-85fb-b019b4d662c5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"inquirerFirstName\": \"\",\n    \"inquirerLastName\": \"\",\n    \"inquirerPhone\": \"\",\n    \"inquirerMobile\": \"\",\n    \"inquirerEmail\": \"\",\n    \"inquirerAbout\": \"self\",\n    \"relationWithPatient\": \"\",\n    \"preferredContact\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{dob}}\",\n    \"patientAge\": {{age}},\n    \"patientPhone\": \"\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"{{patientEmail}}\",\n    \"patientPreferredContact\": \"{{patientPreferredContact}}\",\n    \"contactPatientDirectly\": \"\",\n    \"tellUsMore\" : \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/add-inquiry",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"add-inquiry"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by Inquiry patient first name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f9f392b-2368-4d3b-b1db-9690284919e6",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"email\": pm.environment.get(\"patientEmail\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"patientState\"),",
											"            \"type\": \"Inquiry\",",
											"            \"contactPrimary\": {},",
											"            \"inquiryDate\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify inquiry search details\", () => {",
											"    console.log(\"expectedResponse\"+ JSON.stringify(expectedResponse));",
											"    console.log(\"jsonData\"+ JSON.stringify(jsonData));",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1a0b0c27-bced-456d-aa49-1d4f02567869",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9c483577-7da3-4193-ac61-1ebe22c04e17",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=100&filter-by=inquiry-referral-search::{{patientFirstName}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{patientFirstName}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by Inquiry patient last name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31480ccd-5dbf-42aa-86be-42d6dad7a0fd",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"email\": pm.environment.get(\"patientEmail\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"patientState\"),",
											"            \"type\": \"Inquiry\",",
											"            \"contactPrimary\": {},",
											"            \"inquiryDate\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify inquiry search details\", () => {",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e49d55aa-b413-46c6-9cbc-487b780f4c6d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1653ab0b-43c0-4b5e-9c58-f527484f7152",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=100&filter-by=inquiry-referral-search::{{patientLastName}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{patientLastName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by Inquiry patient email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "de7c3ada-ced8-4e95-a3ab-78723d13beaa",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"email\": pm.environment.get(\"patientEmail\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"patientState\"),",
											"            \"type\": \"Inquiry\",",
											"            \"contactPrimary\": {},",
											"            \"inquiryDate\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify inquiry search details\", () => {",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f96fd9ec-cad3-43ed-a920-922bfbec10d6",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "23e6f2ec-f53f-4eed-b99e-3d1df0d564a1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=500&filter-by=inquiry-referral-search::{{patientEmail}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{patientEmail}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by Inquiry patient phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "00c60696-f310-43d7-a883-92af77b5afb2",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"email\": pm.environment.get(\"patientEmail\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"patientState\"),",
											"            \"type\": \"Inquiry\",",
											"            \"contactPrimary\": {},",
											"            \"inquiryDate\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify inquiry search details\", () => {",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4569cbb1-59c8-45e0-9343-0e432aa7684b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "76b29cff-e748-42c7-91ee-965f855f3fb5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=500&filter-by=inquiry-referral-search::{{patientMobile}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{patientMobile}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Task Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3f81902d-6a59-419d-b191-b8b9f7ed3c8c",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify task name\", function () {\r",
											"    exp_task_title = \"Inquiry-\" + pm.variables.get(\"patientFirstName\") + \" \" + pm.variables.get(\"patientLastName\") + \"-\" + pm.variables.get(\"patientState\") + \"\";\r",
											"    console.log(\"exp_task_title: \" + exp_task_title);\r",
											"    pm.expect(jsonData.data[0].taskName).to.eql(exp_task_title);\r",
											"    pm.environment.set(\"inquiryTaskName\", jsonData.data[0].taskName);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify task task_description\", function () {\r",
											"    var exp_task_desc = \"Inquiry type: self\\nPatient first name: \" + pm.variables.get(\"patientFirstName\") + \"\\nPatient last name: \" + pm.variables.get(\"patientLastName\") + \"\\nPatient’s current state: \" + pm.variables.get(\"patientState\") + \"\\nPatient’s age: \" + pm.variables.get(\"age\") + \"\\nPatient’s DOB: \" + pm.variables.get(\"dob\") + \"\\nPreferred contact method: \" + pm.variables.get(\"patientPreferredContact\") + \"\\nMobile phone: \" + pm.variables.get(\"patientMobile\") + \"\\nEmail: \" + pm.variables.get(\"patientEmail\") + \"\\nAdditional notes: \" + pm.variables.get(\"AdditionalNotes\") + \"\\nAnything else we should know? \" + pm.variables.get(\"tellUsMore\") + \"\\nHow they heard about Equip: \" + pm.variables.get(\"equipSourceName\") + \"\\nHow was this inquiry information gathered? Webform\" + \"\\n\";\r",
											"    console.log(\"exp_task_desc: \" + exp_task_desc);\r",
											"    console.log(\"act_task_desc: \" + jsonData.taskDescription);\r",
											"    pm.expect(jsonData.data[0].taskDescription).to.eql(exp_task_desc);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify task is assigned\", function () {\r",
											"    pm.expect(jsonData.data[0].assignee.externalId).to.eql(pm.variables.get(\"assigneeUserId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Verify task not linked to any patient\", function () {\r",
											"    let keys = Object.keys(jsonData.data[0]);\r",
											"    pm.expect(keys).to.not.include(\"patient\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify task task_due_date\", function () {\r",
											"\r",
											"    var d = new Date();\r",
											"    d.setDate(d.getDate());\r",
											"    console.log(d);\r",
											"    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r",
											"    var day = days[d.getDay()];\r",
											"    console.log(day);\r",
											"    var days_to_add = 2;\r",
											"    if (day.localeCompare(\"Thursday\") == 0 || day.localeCompare(\"Friday\") == 0) {\r",
											"        days_to_add = days_to_add + 2;\r",
											"    } else if (day.localeCompare(\"Saturday\") == 0 || day.localeCompare(\"Sunday\") == 0) {\r",
											"        days_to_add = days_to_add + 1;\r",
											"    }\r",
											"    console.log(days_to_add);\r",
											"    d.setDate(d.getDate() + days_to_add);\r",
											"    console.log(d);\r",
											"    var d3 = d.toISOString().slice(0, 10);\r",
											"    d = d3.split(\"T\")[0];\r",
											"    pm.expect(jsonData.data[0].taskDueDate).to.contains(d);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify task priority is high\", function () {\r",
											"    pm.expect(jsonData.data[0].taskPriorityId).to.eql(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify task status is to-do\", function () {\r",
											"    pm.expect(jsonData.data[0].status.taskStatusId).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify task category is Inquiry\", function () {\r",
											"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Inquiry\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify task sub-category is Inbound outreach\", function () {\r",
											"    pm.expect(jsonData.data[0].subCategory.categoryName).to.eql(\"Inbound outreach\");\r",
											"});\r",
											"\r",
											"pm.environment.set(\"inquiryTaskCategory\", jsonData.data[0].category.categoryName);\r",
											"pm.environment.set(\"inquiryTaskStatusId\", jsonData.data[0].status.taskStatusId);\r",
											"pm.environment.set(\"inquiryTaskPriorityId\", jsonData.data[0].taskPriorityId);\r",
											"pm.environment.set(\"inquiryTaskDuedate\", jsonData.data[0].taskDueDate);\r",
											"pm.environment.set(\"inquiryTaskDescription\", jsonData.data[0].taskDescription.replace(/\\n/g, \"\\\\n\"));\r",
											"pm.environment.set(\"inquiryTaskName\", jsonData.data[0].taskName);\r",
											"pm.environment.set(\"inquiryTaskCategoryExternalId\", jsonData.data[0].category.categoryExternalId);\r",
											"pm.environment.set(\"inquiryTaskSubCategoryExternalId\", jsonData.data[0].subCategory.categoryExternalId);\r",
											"pm.environment.set(\"inquiryTaskAssignedUserId\", jsonData.data[0].assignee.externalId);\r",
											"pm.environment.set(\"inquiryTaskUpdatedByUserId\", jsonData.data[0].assignee.externalId);\r",
											"pm.environment.set(\"inquiryTaskUpdatedByUserName\", jsonData.data[0].assignee.firstName + \" \" + jsonData.data[0].assignee.lastName);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a921ee04-3855-4c7d-9ef1-498331689892",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "026432a9-df6e-439b-8ddd-12fe918fae12",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"composition",
										"tasks"
									],
									"query": [
										{
											"key": "filter-by",
											"value": "task-external-id::{{taskExternalId}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add patient to inquiry task",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3ac22edf-12f7-4199-bab1-4cce508d12b0",
										"exec": [
											"///// get random due date (today or future date) /////",
											"var start = new Date();",
											"var end = new Date(2023, 1, 1);",
											"var task_due_date = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"var month = (task_due_date.getMonth() + 1) >= 10 ? task_due_date.getMonth() + 1 : \"0\" + (task_due_date.getMonth() + 1);",
											"console.log(\"month: \" + month);",
											"var day = (task_due_date.getDate() + 1) > 10 ? task_due_date.getDate() : \"0\" + task_due_date.getDate();",
											"var task_due_date = task_due_date.getFullYear() + '-' + month + '-' + day;",
											"task_due_date = task_due_date + \"T23:59:59.999Z\";",
											"///// end - get random due date (today or future date) /////",
											"",
											"pm.environment.set(\"task_due_date\", task_due_date);",
											"",
											"if (pm.environment.name === \"qa\") {",
											"    pm.environment.set(\"patient_id\", \"c734c310-2be9-430d-8cea-4932f8e79dd1\");",
											"    pm.environment.set(\"task_assigned_userid\", \"87a6b43f-1e22-4ff6-93ae-dc003fc9c0c5\");",
											"    pm.environment.set(\"task_assigned_username\", \"Bala Deema\");",
											"    pm.environment.set(\"taskUpdatedByUserId\", \"bd12e9b1-394c-470d-b03e-aa577f6fce65\");",
											"    pm.environment.set(\"taskUpdatedByUserName\", \"Bala 000analyst\");",
											"} else if (pm.environment.name === \"dev\") {",
											"    pm.environment.set(\"patient_id\", \"a254abca-f1a6-4ae8-90d4-b537d579f285\");",
											"    pm.environment.set(\"task_assigned_userid\", \"8ff50537-55ae-420d-9f4a-1e6a04bd4c8c\");",
											"    pm.environment.set(\"task_assigned_username\", \"Chandhu Gandra\");",
											"    pm.environment.set(\"taskUpdatedByUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
											"    pm.environment.set(\"taskUpdatedByUserName\", \"Balakrishna Deema\");",
											"}",
											"pm.environment.set(\"task_priority_score\", 4.5);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "871473c5-0228-41eb-bfc2-16d56a7fb5a1",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"//console.log(pm.response.body.toString);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 4000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "777a2510-784d-45ed-8449-23309d840152",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"taskExternalId\": \"{{taskExternalId}}\",\n    \"taskName\": \"{{inquiryTaskName}}\",\n    \"taskDescription\": \"{{inquiryTaskDescription}}\",\n    \"taskCategoryExternalId\": \"{{inquiryTaskCategoryExternalId}}\",\n    \"taskSubCategoryExternalId\": \"{{inquiryTaskSubCategoryExternalId}}\",\n    \"taskAssignedUserId\": \"{{inquiryTaskAssignedUserId}}\",\n    \"taskUpdatedByUserId\":\"{{inquiryTaskUpdatedByUserId}}\",\n    \"taskUpdatedByUserName\": \"{{inquiryTaskUpdatedByUserName}}\",\n    \"patientId\":\"{{patient_id}}\",\n    \"taskDueDate\": \"{{inquiryTaskDuedate}}\",\n    \"taskPriorityId\": \"{{inquiryTaskPriorityId}}\",\n    \"taskStatusId\": \"{{inquiryTaskStatusId}}\",\n    \"taskPriorityScore\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tasks",
									"host": [
										"{{host}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "verifyInquirySearchAfterAddingPatient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb55f1a1-4a94-456a-ba4a-c854f0d2f6a6",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify no search recourds found\", () => {",
											"    pm.expect(jsonData.count).to.eql(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b535250c-807a-4363-b6ea-8cc879012985",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8fe14ada-71d8-4d3c-9098-f69c9edc999d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=100&filter-by=inquiry-referral-search::{{patientFirstName}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{patientFirstName}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "c13ede2c-cc90-4c4d-8aac-fbbd4a9a43e8"
				},
				{
					"name": "inquiryTypeSomeOneElse",
					"item": [
						{
							"name": "Add Patient Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b0f79f31-c0fd-47c9-ad26-73e2e6e4f948",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cbbbdceb-e8be-4dd0-ab7c-49cf5bf78b6f",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"// pm.environment.set(\"patientFirstName\", firstName);",
											"// pm.environment.set(\"patientLastName\", lastName);",
											"// pm.environment.set(\"patientEmail\", email);",
											"// pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"// pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'));",
											"// pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"// pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"// pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"// pm.environment.set(\"patientState\", ld.sample(statesList));",
											"// pm.environment.set(\"patientCountry\", \"US\");",
											"// pm.environment.set(\"patientZip\", zip.toString());",
											"// pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"// pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"// pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"// pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"// pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"// pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"// pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"// pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"// pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"// pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"// pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));",
											"",
											"pm.environment.set(\"patientPhoneNumber\", pm.environment.get(\"patientMobile\").slice(2));",
											"",
											"    //  \"dateOfBirth\": moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'),",
											"    //         \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"    //         \"lastName\": pm.environment.get(\"patientLastName\"),",
											"    //         \"phoneNumber\": pm.environment.get(\"patientPhone\"),",
											"    //         \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
											"    //         \"email\": pm.environment.get(\"patientEmail\"),",
											"    //         \"age\": pm.environment.get(\"patientAge\"),",
											"    //         \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"    //         \"state\": pm.environment.get(\"patientState\"),",
											"    //         \"type\": \"Inquiry\",",
											"    //         \"contactPrimary\": {},",
											"    //         \"inquiryDate\": moment().format('YYYY-MM-DD')",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5b863ff9-2df0-4ed9-8ba6-b128fa6d78a6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"state\": \"{{patientState}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "add-inquiry-someone",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5021428d-9e1c-4321-8dea-81795aea4294",
										"exec": [
											"var date_timestamp = new Date().toISOString();",
											"let moment = require('moment');",
											"let ld = require('lodash');",
											"",
											"var start = new Date(2022, 1, 1);",
											"var end = new Date();",
											"var inquiryreferral_create_date_time = new Date(end.getTime() + Math.random() * (start.getTime() - end.getTime()));",
											"var month = (inquiryreferral_create_date_time.getMonth() + 1) >= 10 ? inquiryreferral_create_date_time.getMonth() + 1 : \"0\" + (inquiryreferral_create_date_time.getMonth() + 1);",
											"console.log(\"month: \" + month);",
											"var day = (inquiryreferral_create_date_time.getDate() + 1) > 10 ? inquiryreferral_create_date_time.getDate() : \"0\" + inquiryreferral_create_date_time.getDate();",
											"var inquiryreferral_create_date_time = inquiryreferral_create_date_time.getFullYear() + '-' + month + '-' + day;",
											"inquiryreferral_create_date_time = inquiryreferral_create_date_time + \"T23:59:59.999-0000\";",
											"",
											"let states = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
											"",
											"var equip_source;",
											"if (pm.environment.name === \"qa\") {",
											"    equip_source = [",
											"        {",
											"            \"equip_source_name\": \"Dietitian\",",
											"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Doctor\\/clinician\",",
											"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Eating disorder organization\",",
											"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip employee\",",
											"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip event\\/webinar\",",
											"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip patient\\/family\",",
											"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Friend or family member\",",
											"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Google\\/search\",",
											"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Health insurance\\/payor\",",
											"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Hospital\\/medical center\",",
											"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Newsletter\",",
											"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Other\",",
											"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Press\",",
											"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"School\",",
											"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Social media\",",
											"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Therapist\",",
											"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
											"        }",
											"    ];",
											"}",
											"else if (pm.environment.name === \"dev\") {",
											"    equip_source = [",
											"        {",
											"            \"equip_source_name\": \"Dietitian\",",
											"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Doctor\\/clinician\",",
											"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Eating disorder organization\",",
											"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip employee\",",
											"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip event\\/webinar\",",
											"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip patient\\/family\",",
											"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Friend or family member\",",
											"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Google\\/search\",",
											"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Health insurance\\/payor\",",
											"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Hospital\\/medical center\",",
											"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Newsletter\",",
											"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Other\",",
											"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Press\",",
											"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"School\",",
											"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Social media\",",
											"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Therapist\",",
											"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
											"        }",
											"    ];",
											"}",
											"let random_equip_source = ld.sample(equip_source);",
											"let equip_source_id = random_equip_source.equip_source_external_id;",
											"let equip_source_name = random_equip_source.equip_source_name;",
											"",
											"const relation = [",
											"    \"Family member\",",
											"    \"Father\",",
											"    \"Friend\",",
											"    \"Guardian\",",
											"    \"Mother\",",
											"    \"Other\",",
											"    \"Parent (non-binary)\",",
											"    \"Sibling\"",
											"];",
											"",
											"const information_source = [",
											"    \"Chat\",",
											"    \"Email\",",
											"    \"Fax\",",
											"    \"In-person\",",
											"    \"Live phone call\",",
											"    \"Voicemail\"",
											"]",
											"",
											"let age = ld.random(6, 24);",
											"let dob = moment().subtract(age, 'years').format('YYYY-MM-DD');",
											"",
											"let inquirerFirstName = pm.variables.replaceIn('{{$randomFirstName}}') + date_timestamp;",
											"let inquirerLastName = pm.variables.replaceIn('{{$randomLastName}}') + date_timestamp;",
											"let patientFirstName = pm.variables.replaceIn('{{$randomFirstName}}') + date_timestamp;",
											"let patientLastName = pm.variables.replaceIn('{{$randomLastName}}') + date_timestamp;",
											"",
											"pm.environment.set(\"inquirerFirstName\", inquirerFirstName);",
											"pm.environment.set(\"inquirerLastName\", inquirerLastName);",
											"pm.environment.set(\"patientFirstName\", patientFirstName);",
											"pm.environment.set(\"patientLastName\", patientLastName);",
											"pm.environment.set(\"relation\", ld.sample(relation));",
											"pm.environment.set(\"Email\", \"qa\" + \"+\" + inquirerFirstName + \"+\" + Date.now() + \"@equip.health\");",
											"pm.environment.set(\"Mobile\", \"+1 \" + pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientPreferredContact\", \"both\");",
											"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
											"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
											"pm.environment.set(\"dob\", dob);",
											"pm.environment.set(\"age\", age);",
											"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
											"pm.environment.set(\"equipSourceName\", equip_source_name);",
											"pm.environment.set(\"patientState\", ld.sample(states));",
											"pm.environment.set(\"information_source\", ld.sample(information_source));",
											"pm.environment.set(\"inquiryreferral_create_date_time\", inquiryreferral_create_date_time);",
											"",
											"var assigneeUserId, assigneeUserName;",
											"if (pm.environment.name === \"qa\") {",
											"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
											"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
											"} else {",
											"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
											"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a614119a-a0fd-4cf0-8d94-32145a8f4657",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify inquiryExternalId is generated\", function () {",
											"    pm.expect(jsonData.inquiryExternalId).length.greaterThan(0);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.environment.set(\"inquiryExternalId\", jsonData.inquiryExternalId);",
											"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fff995ef-f858-447f-b17f-4e995e588b5f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contactPatientDirectly\": \"\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"inquirerAbout\": \"someoneelse\",\n    \"inquirerFirstName\": \"{{inquirerFirstName}}\",\n    \"inquirerLastName\": \"{{inquirerLastName}}\",\n    \"inquirerEmail\": \"{{Email}}\",\n    \"inquirerMobile\": \"{{Mobile}}\",\n    \"inquirerPhone\": \"{{Mobile}}\",\n    \"preferredContact\": \"{{patientPreferredContact}}\",\n    \"patientEmail\": \"\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"relationWithPatient\": \"{{relation}}\",\n    \"patientBirthDate\": \"{{dob}}\",\n    \"patientAge\": \"{{age}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientMobile\": \"\",\n    \"patientPhone\": \"\",\n    \"patientPreferredContact\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"{{information_source}}\",\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"inquiryCreatedDateTime\": \"{{inquiryreferral_create_date_time}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/add-inquiry",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"add-inquiry"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by Inquirer first name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "12617c6e-d38d-4b19-88d3-8ba68f3f6296",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"patientState\"),",
											"            \"type\": \"Inquiry\",",
											"            \"contactPrimary\": {",
											"                \"firstName\": pm.environment.get(\"inquirerFirstName\"),",
											"                \"lastName\": pm.environment.get(\"inquirerLastName\"),",
											"                \"email\": pm.environment.get(\"Email\"),",
											"                \"phoneNumber\": pm.environment.get(\"Mobile\"),",
											"                \"mobileNumber\": pm.environment.get(\"Mobile\"),",
											"                \"relationWithPatient\": pm.environment.get(\"relation\")",
											"            },",
											"            \"inquiryDate\": \"\"+pm.environment.get(\"inquiryreferral_create_date_time\").slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify inquiry search details\", () => {",
											"    console.log(\"expected response: \"+JSON.stringify(expectedResponse));",
											"    console.log(\"actual response. : \"+JSON.stringify(jsonData));",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "48c51135-6976-4466-b31e-912cdeebc183",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4d4c64bf-c5c2-46b2-b0ca-0213e605f4b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=500&filter-by=inquiry-referral-search::{{inquirerFirstName}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{inquirerFirstName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by Inquirer last name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2fc5d967-df03-4c81-b4b8-92f082811dcf",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"patientState\"),",
											"            \"type\": \"Inquiry\",",
											"            \"contactPrimary\": {",
											"                \"firstName\": pm.environment.get(\"inquirerFirstName\"),",
											"                \"lastName\": pm.environment.get(\"inquirerLastName\"),",
											"                \"email\": pm.environment.get(\"Email\"),",
											"                \"phoneNumber\": pm.environment.get(\"Mobile\"),",
											"                \"mobileNumber\": pm.environment.get(\"Mobile\"),",
											"                \"relationWithPatient\": pm.environment.get(\"relation\")",
											"            },",
											"            \"inquiryDate\": \"\"+pm.environment.get(\"inquiryreferral_create_date_time\").slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify inquiry search details\", () => {",
											"    console.log(\"expected response: \"+JSON.stringify(expectedResponse));",
											"    console.log(\"actual response. : \"+JSON.stringify(jsonData));",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2b7373ae-7c30-45ca-9928-c91ca935f7ba",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fb71c798-7439-45fd-95d4-0916dcc16bf7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=500&filter-by=inquiry-referral-search::{{inquirerLastName}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{inquirerLastName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by Inquirer email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ec1ae26-2f47-4c98-9f4b-0514337926b1",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"patientState\"),",
											"            \"type\": \"Inquiry\",",
											"            \"contactPrimary\": {",
											"                \"firstName\": pm.environment.get(\"inquirerFirstName\"),",
											"                \"lastName\": pm.environment.get(\"inquirerLastName\"),",
											"                \"email\": pm.environment.get(\"Email\"),",
											"                \"phoneNumber\": pm.environment.get(\"Mobile\"),",
											"                \"mobileNumber\": pm.environment.get(\"Mobile\"),",
											"                \"relationWithPatient\": pm.environment.get(\"relation\")",
											"            },",
											"            \"inquiryDate\": \"\"+pm.environment.get(\"inquiryreferral_create_date_time\").slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify inquiry search details\", () => {",
											"    console.log(\"expected response: \"+JSON.stringify(expectedResponse));",
											"    console.log(\"actual response. : \"+JSON.stringify(jsonData));",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e65ee683-75ba-4117-a037-c2e51069dbb6",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "78520b5a-9eb9-4e53-907b-e4b49478e822",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=500&filter-by=inquiry-referral-search::{{Email}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{Email}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by Inquirer phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2b6614ec-e81c-49d7-b664-c93a1562aca7",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"patientState\"),",
											"            \"type\": \"Inquiry\",",
											"            \"contactPrimary\": {",
											"                \"firstName\": pm.environment.get(\"inquirerFirstName\"),",
											"                \"lastName\": pm.environment.get(\"inquirerLastName\"),",
											"                \"email\": pm.environment.get(\"Email\"),",
											"                \"phoneNumber\": pm.environment.get(\"Mobile\"),",
											"                \"mobileNumber\": pm.environment.get(\"Mobile\"),",
											"                \"relationWithPatient\": pm.environment.get(\"relation\")",
											"            },",
											"            \"inquiryDate\": \"\"+pm.environment.get(\"inquiryreferral_create_date_time\").slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify inquiry search details\", () => {",
											"    console.log(\"expected response: \"+JSON.stringify(expectedResponse));",
											"    console.log(\"actual response. : \"+JSON.stringify(jsonData));",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a1d3f060-61d4-4096-8943-84b2f89e4590",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a46bebb0-e1a6-4c8e-9c7b-9a9dec9ad600",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=500&filter-by=inquiry-referral-search::{{Mobile}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{Mobile}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Task Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8304010f-efd9-41cf-a15e-d9fbaa11af43",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"inquiryTaskCategory\", jsonData.data[0].category.categoryName);\r",
											"pm.environment.set(\"inquiryTaskStatusId\", jsonData.data[0].status.taskStatusId);\r",
											"pm.environment.set(\"inquiryTaskPriorityId\", jsonData.data[0].taskPriorityId);\r",
											"pm.environment.set(\"inquiryTaskDuedate\", jsonData.data[0].taskDueDate);\r",
											"pm.environment.set(\"inquiryTaskDescription\",jsonData.data[0].taskDescription.replace(/\\n/g, \"\\\\n\"));\r",
											"pm.environment.set(\"inquiryTaskName\",jsonData.data[0].taskName);\r",
											"pm.environment.set(\"inquiryTaskCategoryExternalId\",jsonData.data[0].category.categoryExternalId);\r",
											"pm.environment.set(\"inquiryTaskSubCategoryExternalId\",jsonData.data[0].subCategory.categoryExternalId);\r",
											"pm.environment.set(\"inquiryTaskAssignedUserId\",jsonData.data[0].assignee.externalId);\r",
											"pm.environment.set(\"inquiryTaskUpdatedByUserId\", jsonData.data[0].assignee.externalId);\r",
											"pm.environment.set(\"inquiryTaskUpdatedByUserName\", jsonData.data[0].assignee.firstName+\" \"+jsonData.data[0].assignee.lastName);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a713a5df-5bbb-4e79-ad74-4455d8ecf5be",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "20b02b02-62e3-494e-a102-489451614d97",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"composition",
										"tasks"
									],
									"query": [
										{
											"key": "filter-by",
											"value": "task-external-id::{{taskExternalId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add patient to inquiry task",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e9874e42-ed33-41ec-9db4-b557dc775120",
										"exec": [
											"///// get random due date (today or future date) /////",
											"var start = new Date();",
											"var end = new Date(2023, 1, 1);",
											"var task_due_date = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"var month = (task_due_date.getMonth() + 1) >= 10 ? task_due_date.getMonth() + 1 : \"0\" + (task_due_date.getMonth() + 1);",
											"console.log(\"month: \" + month);",
											"var day = (task_due_date.getDate() + 1) > 10 ? task_due_date.getDate() : \"0\" + task_due_date.getDate();",
											"var task_due_date = task_due_date.getFullYear() + '-' + month + '-' + day;",
											"task_due_date = task_due_date + \"T23:59:59.999Z\";",
											"///// end - get random due date (today or future date) /////",
											"",
											"pm.environment.set(\"task_due_date\", task_due_date);",
											"",
											"if (pm.environment.name === \"qa\") {",
											"    pm.environment.set(\"patient_id\", \"c734c310-2be9-430d-8cea-4932f8e79dd1\");",
											"    pm.environment.set(\"task_assigned_userid\", \"87a6b43f-1e22-4ff6-93ae-dc003fc9c0c5\");",
											"    pm.environment.set(\"task_assigned_username\", \"Bala Deema\");",
											"    pm.environment.set(\"taskUpdatedByUserId\", \"bd12e9b1-394c-470d-b03e-aa577f6fce65\");",
											"    pm.environment.set(\"taskUpdatedByUserName\", \"Bala 000analyst\");",
											"} else if (pm.environment.name === \"dev\") {",
											"    pm.environment.set(\"patient_id\", \"a254abca-f1a6-4ae8-90d4-b537d579f285\");",
											"    pm.environment.set(\"task_assigned_userid\", \"8ff50537-55ae-420d-9f4a-1e6a04bd4c8c\");",
											"    pm.environment.set(\"task_assigned_username\", \"Chandhu Gandra\");",
											"    pm.environment.set(\"taskUpdatedByUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
											"    pm.environment.set(\"taskUpdatedByUserName\", \"Balakrishna Deema\");",
											"}",
											"pm.environment.set(\"task_priority_score\", 4.5);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "cac5607f-bf7b-44ee-b465-3ecb8261fb27",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"//console.log(pm.response.body.toString);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 4000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "25b59bfc-e8cd-4e1b-b04b-b300fc847b87",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"taskExternalId\": \"{{taskExternalId}}\",\n    \"taskName\": \"{{inquiryTaskName}}\",\n    \"taskDescription\": \"{{inquiryTaskDescription}}\",\n    \"taskCategoryExternalId\": \"{{inquiryTaskCategoryExternalId}}\",\n    \"taskSubCategoryExternalId\": \"{{inquiryTaskSubCategoryExternalId}}\",\n    \"taskAssignedUserId\": \"{{inquiryTaskAssignedUserId}}\",\n    \"taskUpdatedByUserId\":\"{{inquiryTaskUpdatedByUserId}}\",\n    \"taskUpdatedByUserName\": \"{{inquiryTaskUpdatedByUserName}}\",\n    \"patientId\":\"{{patient_id}}\",\n    \"taskDueDate\": \"{{inquiryTaskDuedate}}\",\n    \"taskPriorityId\": \"{{inquiryTaskPriorityId}}\",\n    \"taskStatusId\": \"{{inquiryTaskStatusId}}\",\n    \"taskPriorityScore\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tasks",
									"host": [
										"{{host}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "verifyInquirySearchAfterAddingPatient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79545b94-02cd-4b12-8924-dad30d6423c8",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify no search recourds found\", () => {",
											"    pm.expect(jsonData.count).to.eql(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8393d765-9793-4e24-94ab-0b60742aa88e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b87acb65-94ec-4a5e-90c1-d12a8fc954f0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=100&filter-by=inquiry-referral-search::{{patientFirstName}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{patientFirstName}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "e4a9a63b-6e14-4ac7-bf50-3fba1021c536"
				},
				{
					"name": "referralTypeDirect",
					"item": [
						{
							"name": "Add Patient Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c6e1c345-2650-421b-b48c-7be8229e9e2f",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bda72020-f011-44bd-9845-98d1c7d6eb03",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"// pm.environment.set(\"patientFirstName\", firstName);",
											"// pm.environment.set(\"patientLastName\", lastName);",
											"// pm.environment.set(\"patientEmail\", email);",
											"// pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"// pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'));",
											"// pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"// pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"// pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"// pm.environment.set(\"patientState\", ld.sample(statesList));",
											"// pm.environment.set(\"patientCountry\", \"US\");",
											"// pm.environment.set(\"patientZip\", zip.toString());",
											"// pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"// pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"// pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"// pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"// pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"// pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"// pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"// pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"// pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"// pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"// pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));",
											"",
											"pm.environment.set(\"patientPhoneNumber\", pm.environment.get(\"patientMobile\").slice(2));",
											"",
											"    //  \"dateOfBirth\": moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'),",
											"    //         \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"    //         \"lastName\": pm.environment.get(\"patientLastName\"),",
											"    //         \"phoneNumber\": pm.environment.get(\"patientPhone\"),",
											"    //         \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
											"    //         \"email\": pm.environment.get(\"patientEmail\"),",
											"    //         \"age\": pm.environment.get(\"patientAge\"),",
											"    //         \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"    //         \"state\": pm.environment.get(\"patientState\"),",
											"    //         \"type\": \"Inquiry\",",
											"    //         \"contactPrimary\": {},",
											"    //         \"inquiryDate\": moment().format('YYYY-MM-DD')",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bf241c51-e6f8-4f56-8e86-d976b1c34245",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"state\": \"{{patientState}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "add-referral-Direct",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3bc8eef9-8699-45c6-8836-26d9d6efd9af",
										"exec": [
											"var date_timestamp = new Date().toISOString();",
											"let moment = require('moment');",
											"let ld = require('lodash');",
											"",
											"let states = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
											"",
											"var equip_source;",
											"if (pm.environment.name === \"qa\") {",
											"    equip_source = [",
											"        {",
											"            \"equip_source_name\": \"Dietitian\",",
											"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Doctor\\/clinician\",",
											"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Eating disorder organization\",",
											"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip employee\",",
											"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip event\\/webinar\",",
											"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip patient\\/family\",",
											"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Friend or family member\",",
											"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Google\\/search\",",
											"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Health insurance\\/payor\",",
											"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Hospital\\/medical center\",",
											"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Newsletter\",",
											"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Other\",",
											"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Press\",",
											"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"School\",",
											"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Social media\",",
											"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Therapist\",",
											"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
											"        }",
											"    ];",
											"}",
											"else if (pm.environment.name === \"dev\") {",
											"    equip_source = [",
											"        {",
											"            \"equip_source_name\": \"Dietitian\",",
											"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Doctor\\/clinician\",",
											"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Eating disorder organization\",",
											"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip employee\",",
											"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip event\\/webinar\",",
											"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip patient\\/family\",",
											"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Friend or family member\",",
											"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Google\\/search\",",
											"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Health insurance\\/payor\",",
											"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Hospital\\/medical center\",",
											"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Newsletter\",",
											"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Other\",",
											"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Press\",",
											"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"School\",",
											"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Social media\",",
											"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Therapist\",",
											"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
											"        }",
											"    ];",
											"}",
											"let random_equip_source = ld.sample(equip_source);",
											"let equip_source_id = random_equip_source.equip_source_external_id;",
											"let equip_source_name = random_equip_source.equip_source_name;",
											"",
											"let age = ld.random(6, 24);",
											"// let dob = moment().subtract(age, 'years').format('MM/DD/YYYY');",
											"let dob = moment().subtract(age, 'years').format('YYYY-MM-DD');",
											"",
											"let referrerFirstName = pm.variables.replaceIn('{{$randomFirstName}}') + date_timestamp;",
											"let referrerLastName = pm.variables.replaceIn('{{$randomLastName}}') + date_timestamp;",
											"",
											"pm.environment.set(\"referrerFirstName\", referrerFirstName);",
											"pm.environment.set(\"referrerLastName\", referrerLastName);",
											"pm.environment.set(\"referrerEmail\", \"qa\" + \"+\" + referrerFirstName + \"+\" + Date.now() + \"@equip.health\");",
											"pm.environment.set(\"referrerMobile\", \"+1 \"+pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientFirstName\", pm.variables.replaceIn('{{$randomFirstName}}')+date_timestamp);",
											"pm.environment.set(\"patientLastName\", pm.variables.replaceIn('{{$randomLastName}}')+date_timestamp);",
											"pm.environment.set(\"contactPatientDirectly\", \"Direct\");",
											"pm.environment.set(\"patientMobile\", \"+1 \"+pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
											"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
											"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
											"pm.environment.set(\"equipSourceName\", equip_source_name);",
											"pm.environment.set(\"state\", ld.sample(states));",
											"pm.environment.set(\"patientDateOfBirth\", dob);",
											"pm.environment.set(\"patientAge\", age);",
											"",
											"var assigneeUserId, assigneeUserName;",
											"if (pm.environment.name === \"qa\") {",
											"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
											"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
											"} else {",
											"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
											"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "65d60495-242c-489a-954b-312fe92e06ee",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify referralExternalId is generated\", function () {",
											"    pm.expect(jsonData.referralExternalId).length.greaterThan(0);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.environment.set(\"referralExternalId\", jsonData.referralExternalId);",
											"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8b50128c-6c1b-41ff-91a5-be542077c0af",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"referrerFirstName\": \"{{referrerFirstName}}\",\n    \"referrerLastName\": \"{{referrerLastName}}\",\n    \"referrerPhone\": \"{{referrerMobile}}\",\n    \"referrerMobile\": \"{{referrerMobile}}\",\n    \"referrerEmail\": \"{{referrerEmail}}\",\n    \"relationWithPatient\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{state}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientAge\": {{patientAge}},\n    \"patientPhone\": \"{{patientMobile}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"\",\n    \"patientPreferredContact\": \"\",\n    \"contactPatientDirectly\": \"Yes\",\n    \"carerName\": \"\",\n    \"carerPhone\": \"\",\n    \"carerMobile\": \"\",\n    \"carerEmail\": \"\",\n    \"carerPreferredContact\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"affiliationList\": [\n        {\n            \"name\": \"Google inc. india pvt ltd\",\n            \"latitude\": \"2\",\n            \"longitude\": \"3\",\n            \"addressLine1\": \"111 8th Ave\",\n            \"addressLine2\": \"APT 1074\",\n            \"city\": \"{{state}}\",\n            \"state\": \"{{state}}\",\n            \"zipCode\": \"85283\"\n        }\n    ],\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/add-referral",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"add-referral"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by referrer first name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "146192ee-6002-46cd-b698-4274b86502f0",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"phoneNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"state\"),",
											"            \"type\": \"Referral\",",
											"            \"contactReferral\": {",
											"                \"firstName\": pm.environment.get(\"referrerFirstName\"),",
											"                \"lastName\": pm.environment.get(\"referrerLastName\"),",
											"                \"email\": pm.environment.get(\"referrerEmail\"),",
											"                \"phoneNumber\": pm.environment.get(\"referrerMobile\"),",
											"                \"mobileNumber\": pm.environment.get(\"referrerMobile\"),",
											"            },",
											"            \"referralAffiliation\":",
											"            {",
											"                \"name\": \"Google inc. india pvt ltd\",",
											"                \"addressLine1\": \"111 8th Ave\",",
											"                \"addressLine2\": \"APT 1074\",",
											"                \"city\": pm.environment.get(\"state\"),",
											"                \"state\": pm.environment.get(\"state\"),",
											"                \"zipCode\": \"85283\"",
											"            },",
											"            \"contactPrimary\": {},",
											"            \"informationSource\": \"Webform\",",
											"            \"contactPatientDirectly\": true,",
											"            \"inquiryDate\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify referral search details\", () => {",
											"    console.log(\"expected response: \"+JSON.stringify(expectedResponse));",
											"    console.log(\"actual response. : \"+JSON.stringify(jsonData));",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "30ab45ca-1c98-479b-ad54-c15771e5b1d7",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "12bb9c9c-0227-45d7-83e8-fc7be7b09271",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=500&filter-by=inquiry-referral-search::{{referrerFirstName}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{referrerFirstName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by referrer last name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "80e3abc8-ae1c-4bfe-9d15-ed2a89860c25",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"phoneNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"state\"),",
											"            \"type\": \"Referral\",",
											"            \"contactReferral\": {",
											"                \"firstName\": pm.environment.get(\"referrerFirstName\"),",
											"                \"lastName\": pm.environment.get(\"referrerLastName\"),",
											"                \"email\": pm.environment.get(\"referrerEmail\"),",
											"                \"phoneNumber\": pm.environment.get(\"referrerMobile\"),",
											"                \"mobileNumber\": pm.environment.get(\"referrerMobile\"),",
											"            },",
											"            \"referralAffiliation\":",
											"            {",
											"                \"name\": \"Google inc. india pvt ltd\",",
											"                \"addressLine1\": \"111 8th Ave\",",
											"                \"addressLine2\": \"APT 1074\",",
											"                \"city\": pm.environment.get(\"state\"),",
											"                \"state\": pm.environment.get(\"state\"),",
											"                \"zipCode\": \"85283\"",
											"            },",
											"            \"contactPrimary\": {},",
											"            \"informationSource\": \"Webform\",",
											"            \"contactPatientDirectly\": true,",
											"            \"inquiryDate\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify referral search details\", () => {",
											"    console.log(\"expected response: \"+JSON.stringify(expectedResponse));",
											"    console.log(\"actual response. : \"+JSON.stringify(jsonData));",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "34d9a8bc-1b88-47fc-8871-b6f6319afa6e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4e29aa69-de4d-4473-8d75-31bdd2f8c1a5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=500&filter-by=inquiry-referral-search::{{referrerLastName}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{referrerLastName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by referrer phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c8e51ab-4f21-4475-93ca-e344714f59e1",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"phoneNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"state\"),",
											"            \"type\": \"Referral\",",
											"            \"contactReferral\": {",
											"                \"firstName\": pm.environment.get(\"referrerFirstName\"),",
											"                \"lastName\": pm.environment.get(\"referrerLastName\"),",
											"                \"email\": pm.environment.get(\"referrerEmail\"),",
											"                \"phoneNumber\": pm.environment.get(\"referrerMobile\"),",
											"                \"mobileNumber\": pm.environment.get(\"referrerMobile\"),",
											"            },",
											"            \"referralAffiliation\":",
											"            {",
											"                \"name\": \"Google inc. india pvt ltd\",",
											"                \"addressLine1\": \"111 8th Ave\",",
											"                \"addressLine2\": \"APT 1074\",",
											"                \"city\": pm.environment.get(\"state\"),",
											"                \"state\": pm.environment.get(\"state\"),",
											"                \"zipCode\": \"85283\"",
											"            },",
											"            \"contactPrimary\": {},",
											"            \"informationSource\": \"Webform\",",
											"            \"contactPatientDirectly\": true,",
											"            \"inquiryDate\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify referral search details\", () => {",
											"    console.log(\"expected response: \"+JSON.stringify(expectedResponse));",
											"    console.log(\"actual response. : \"+JSON.stringify(jsonData));",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "da839c0e-5acb-469c-9871-28ad662f803f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5a7f15c8-97b6-4b4e-950a-0f1b38aa5cec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=500&filter-by=inquiry-referral-search::{{referrerMobile}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{referrerMobile}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by referrer email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02509d08-1a18-40ed-a818-ea66040b4304",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"phoneNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"state\"),",
											"            \"type\": \"Referral\",",
											"            \"contactReferral\": {",
											"                \"firstName\": pm.environment.get(\"referrerFirstName\"),",
											"                \"lastName\": pm.environment.get(\"referrerLastName\"),",
											"                \"email\": pm.environment.get(\"referrerEmail\"),",
											"                \"phoneNumber\": pm.environment.get(\"referrerMobile\"),",
											"                \"mobileNumber\": pm.environment.get(\"referrerMobile\"),",
											"            },",
											"            \"referralAffiliation\":",
											"            {",
											"                \"name\": \"Google inc. india pvt ltd\",",
											"                \"addressLine1\": \"111 8th Ave\",",
											"                \"addressLine2\": \"APT 1074\",",
											"                \"city\": pm.environment.get(\"state\"),",
											"                \"state\": pm.environment.get(\"state\"),",
											"                \"zipCode\": \"85283\"",
											"            },",
											"            \"contactPrimary\": {},",
											"            \"informationSource\": \"Webform\",",
											"            \"contactPatientDirectly\": true,",
											"            \"inquiryDate\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify referral search details\", () => {",
											"    console.log(\"expected response: \"+JSON.stringify(expectedResponse));",
											"    console.log(\"actual response. : \"+JSON.stringify(jsonData));",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e254496-0074-42fa-871e-769b87b09994",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "83964ff3-3b4e-4bac-b079-7dfa860c9112",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=500&filter-by=inquiry-referral-search::{{referrerEmail}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{referrerEmail}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by referred patient first name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "758a4a44-3fbc-48ed-aa73-b655b4df9eeb",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"phoneNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"state\"),",
											"            \"type\": \"Referral\",",
											"            \"contactReferral\": {",
											"                \"firstName\": pm.environment.get(\"referrerFirstName\"),",
											"                \"lastName\": pm.environment.get(\"referrerLastName\"),",
											"                \"email\": pm.environment.get(\"referrerEmail\"),",
											"                \"phoneNumber\": pm.environment.get(\"referrerMobile\"),",
											"                \"mobileNumber\": pm.environment.get(\"referrerMobile\"),",
											"            },",
											"            \"referralAffiliation\":",
											"            {",
											"                \"name\": \"Google inc. india pvt ltd\",",
											"                \"addressLine1\": \"111 8th Ave\",",
											"                \"addressLine2\": \"APT 1074\",",
											"                \"city\": pm.environment.get(\"state\"),",
											"                \"state\": pm.environment.get(\"state\"),",
											"                \"zipCode\": \"85283\"",
											"            },",
											"            \"contactPrimary\": {},",
											"            \"informationSource\": \"Webform\",",
											"            \"contactPatientDirectly\": true,",
											"            \"inquiryDate\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify referral search details\", () => {",
											"    console.log(\"expected response: \"+JSON.stringify(expectedResponse));",
											"    console.log(\"actual response. : \"+JSON.stringify(jsonData));",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "572b4c69-1941-4f3b-9425-e9a6aca4e30a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "efd22d76-933f-4d5c-81e6-79784688ca02",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=500&filter-by=inquiry-referral-search::{{patientFirstName}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{patientFirstName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by referred patient last name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a02405eb-2745-434f-858b-9ac101b2b355",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"phoneNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"state\"),",
											"            \"type\": \"Referral\",",
											"            \"contactReferral\": {",
											"                \"firstName\": pm.environment.get(\"referrerFirstName\"),",
											"                \"lastName\": pm.environment.get(\"referrerLastName\"),",
											"                \"email\": pm.environment.get(\"referrerEmail\"),",
											"                \"phoneNumber\": pm.environment.get(\"referrerMobile\"),",
											"                \"mobileNumber\": pm.environment.get(\"referrerMobile\"),",
											"            },",
											"            \"referralAffiliation\":",
											"            {",
											"                \"name\": \"Google inc. india pvt ltd\",",
											"                \"addressLine1\": \"111 8th Ave\",",
											"                \"addressLine2\": \"APT 1074\",",
											"                \"city\": pm.environment.get(\"state\"),",
											"                \"state\": pm.environment.get(\"state\"),",
											"                \"zipCode\": \"85283\"",
											"            },",
											"            \"contactPrimary\": {},",
											"            \"informationSource\": \"Webform\",",
											"            \"contactPatientDirectly\": true,",
											"            \"inquiryDate\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify referral search details\", () => {",
											"    console.log(\"expected response: \"+JSON.stringify(expectedResponse));",
											"    console.log(\"actual response. : \"+JSON.stringify(jsonData));",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b168fa9d-dc67-4fd8-9063-9e3aed820498",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "72771f5e-4d03-4577-a1cc-8b48fb5ab18a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=500&filter-by=inquiry-referral-search::{{patientLastName}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{patientLastName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by referred patient phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e649f59-9aa0-49b2-a0e8-e45f3b8d7ad0",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"phoneNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"state\"),",
											"            \"type\": \"Referral\",",
											"            \"contactReferral\": {",
											"                \"firstName\": pm.environment.get(\"referrerFirstName\"),",
											"                \"lastName\": pm.environment.get(\"referrerLastName\"),",
											"                \"email\": pm.environment.get(\"referrerEmail\"),",
											"                \"phoneNumber\": pm.environment.get(\"referrerMobile\"),",
											"                \"mobileNumber\": pm.environment.get(\"referrerMobile\"),",
											"            },",
											"            \"referralAffiliation\":",
											"            {",
											"                \"name\": \"Google inc. india pvt ltd\",",
											"                \"addressLine1\": \"111 8th Ave\",",
											"                \"addressLine2\": \"APT 1074\",",
											"                \"city\": pm.environment.get(\"state\"),",
											"                \"state\": pm.environment.get(\"state\"),",
											"                \"zipCode\": \"85283\"",
											"            },",
											"            \"contactPrimary\": {},",
											"            \"informationSource\": \"Webform\",",
											"            \"contactPatientDirectly\": true,",
											"            \"inquiryDate\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify referral search details\", () => {",
											"    console.log(\"expected response: \"+JSON.stringify(expectedResponse));",
											"    console.log(\"actual response. : \"+JSON.stringify(jsonData));",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9b53b223-5578-471d-b7e2-b37dcf65cd7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f111f670-ff16-47f0-a836-c8b030b3a7e2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=500&filter-by=inquiry-referral-search::{{patientMobile}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{patientMobile}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Task Details Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "369664ad-c377-4092-996f-018021999b19",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.environment.set(\"inquiryTaskCategory\", jsonData.data[0].category.categoryName);\r",
											"pm.environment.set(\"inquiryTaskStatusId\", jsonData.data[0].status.taskStatusId);\r",
											"pm.environment.set(\"inquiryTaskPriorityId\", jsonData.data[0].taskPriorityId);\r",
											"pm.environment.set(\"inquiryTaskDuedate\", jsonData.data[0].taskDueDate);\r",
											"pm.environment.set(\"inquiryTaskDescription\",jsonData.data[0].taskDescription.replace(/\\n/g, \"\\\\n\"));\r",
											"pm.environment.set(\"inquiryTaskName\",jsonData.data[0].taskName);\r",
											"pm.environment.set(\"inquiryTaskCategoryExternalId\",jsonData.data[0].category.categoryExternalId);\r",
											"pm.environment.set(\"inquiryTaskSubCategoryExternalId\",jsonData.data[0].subCategory.categoryExternalId);\r",
											"pm.environment.set(\"inquiryTaskAssignedUserId\",jsonData.data[0].assignee.externalId);\r",
											"pm.environment.set(\"inquiryTaskUpdatedByUserId\", jsonData.data[0].assignee.externalId);\r",
											"pm.environment.set(\"inquiryTaskUpdatedByUserName\", jsonData.data[0].assignee.firstName+\" \"+jsonData.data[0].assignee.lastName);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5e3cb341-763e-4562-aa84-43dc983755df",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e72d1852-d546-4706-9b30-b4f93d574864",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"composition",
										"tasks"
									],
									"query": [
										{
											"key": "filter-by",
											"value": "task-external-id::{{taskExternalId}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add patient to inquiry task Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ab0e3ee4-ef89-495a-a705-3b33a3887b7b",
										"exec": [
											"///// get random due date (today or future date) /////",
											"var start = new Date();",
											"var end = new Date(2023, 1, 1);",
											"var task_due_date = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"var month = (task_due_date.getMonth() + 1) >= 10 ? task_due_date.getMonth() + 1 : \"0\" + (task_due_date.getMonth() + 1);",
											"console.log(\"month: \" + month);",
											"var day = (task_due_date.getDate() + 1) > 10 ? task_due_date.getDate() : \"0\" + task_due_date.getDate();",
											"var task_due_date = task_due_date.getFullYear() + '-' + month + '-' + day;",
											"task_due_date = task_due_date + \"T23:59:59.999Z\";",
											"///// end - get random due date (today or future date) /////",
											"",
											"pm.environment.set(\"task_due_date\", task_due_date);",
											"",
											"if (pm.environment.name === \"qa\") {",
											"    pm.environment.set(\"patient_id\", \"c734c310-2be9-430d-8cea-4932f8e79dd1\");",
											"    pm.environment.set(\"task_assigned_userid\", \"87a6b43f-1e22-4ff6-93ae-dc003fc9c0c5\");",
											"    pm.environment.set(\"task_assigned_username\", \"Bala Deema\");",
											"    pm.environment.set(\"taskUpdatedByUserId\", \"bd12e9b1-394c-470d-b03e-aa577f6fce65\");",
											"    pm.environment.set(\"taskUpdatedByUserName\", \"Bala 000analyst\");",
											"} else if (pm.environment.name === \"dev\") {",
											"    pm.environment.set(\"patient_id\", \"a254abca-f1a6-4ae8-90d4-b537d579f285\");",
											"    pm.environment.set(\"task_assigned_userid\", \"8ff50537-55ae-420d-9f4a-1e6a04bd4c8c\");",
											"    pm.environment.set(\"task_assigned_username\", \"Chandhu Gandra\");",
											"    pm.environment.set(\"taskUpdatedByUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
											"    pm.environment.set(\"taskUpdatedByUserName\", \"Balakrishna Deema\");",
											"}",
											"pm.environment.set(\"task_priority_score\", 4.5);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0f017ef7-e58c-4984-ba4f-448b8adbd652",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"//console.log(pm.response.body.toString);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 4000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e1a036a3-e021-461e-bf67-25e47b055cbd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"taskExternalId\": \"{{taskExternalId}}\",\n    \"taskName\": \"{{inquiryTaskName}}\",\n    \"taskDescription\": \"{{inquiryTaskDescription}}\",\n    \"taskCategoryExternalId\": \"{{inquiryTaskCategoryExternalId}}\",\n    \"taskSubCategoryExternalId\": \"{{inquiryTaskSubCategoryExternalId}}\",\n    \"taskAssignedUserId\": \"{{inquiryTaskAssignedUserId}}\",\n    \"taskUpdatedByUserId\":\"{{inquiryTaskUpdatedByUserId}}\",\n    \"taskUpdatedByUserName\": \"{{inquiryTaskUpdatedByUserName}}\",\n    \"patientId\":\"{{patient_id}}\",\n    \"taskDueDate\": \"{{inquiryTaskDuedate}}\",\n    \"taskPriorityId\": \"{{inquiryTaskPriorityId}}\",\n    \"taskStatusId\": \"{{inquiryTaskStatusId}}\",\n    \"taskPriorityScore\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tasks",
									"host": [
										"{{host}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "verifyReferralSearchAfterAddingPatient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "21e9dbde-93e2-4bb5-8bae-942c7fb1111b",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify no search recourds found\", () => {",
											"    pm.expect(jsonData.count).to.eql(0);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cc343007-0115-4c00-b181-1e86a5c3e299",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "886ae8f9-5c39-4c34-8444-ac6169fc6567",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=100&filter-by=inquiry-referral-search::{{patientFirstName}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{patientFirstName}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "4906d6c9-1419-4933-9c17-0558af7c285b"
				},
				{
					"name": "referralTypeCarer",
					"item": [
						{
							"name": "Add Patient Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "579e2899-363f-4682-8b75-da644a655040",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify id is generated\", function () {",
											"    pm.expect(jsonData.id).length.greaterThan(0);",
											"});",
											"",
											"pm.environment.set(\"patientId\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "83098425-a057-44c9-9eaa-b14023afd420",
										"exec": [
											"let ld = require('lodash');",
											"let moment = require('moment');",
											"",
											"let gendersList = [",
											"    \"Cis-gender male\",",
											"    \"Cis-gender female\",",
											"    \"Non-binary\",",
											"    \"Other\",",
											"    \"Unknown\",",
											"    \"Transgender male\",",
											"    \"Transgender female\"",
											"];",
											"",
											"let pronounsList = [",
											"    \"He/Him/His\",",
											"    \"She/Her/Hers\",",
											"    \"They/Them/Theirs\",",
											"    \"Other\"",
											"];",
											"",
											"let ethnicitiesList = [",
											"    \"Asian\",",
											"    \"Black/African American\",",
											"    \"White/Caucasian\",",
											"    \"Hispanic/Latinx\",",
											"    \"Native American, Indian American, or Alaska Native\",",
											"    \"Native Hawaiian or other Pacific Islander\",",
											"    \"Middle Eastern or North African\",",
											"    \"Prefer not to answer\",",
											"    \"Other\"",
											"];",
											"",
											"let languagesList = [",
											"    \"English\",",
											"    \"Spanish\",",
											"    \"Chinese\",",
											"    \"French\",",
											"    \"Tagalog\",",
											"    \"Vietnamese\",",
											"    \"Korean\",",
											"    \"German\",",
											"    \"Russian\",",
											"    \"Italian\",",
											"    \"Portuguese\",",
											"    \"Polish\",",
											"    \"Japanese\",",
											"    \"Persian\",",
											"    \"Greek\",",
											"    \"Serbo-Croatian\",",
											"    \"Armenian\",",
											"    \"Yiddish\",",
											"    \"American Sign Language (ASL)\"",
											"];",
											"",
											"let sexList = [",
											"    \"Male\",",
											"    \"Female\"",
											"];",
											"",
											"let timezonesList = [",
											"    \"Hawaii Standard Time\",",
											"    \"Hawaii-Aleutian Time\",",
											"    \"Alaska Time\",",
											"    \"Pacific Time\",",
											"    \"Arizona\",",
											"    \"Mountain Time\",",
											"    \"Central Time\",",
											"    \"Eastern Time\"",
											"];",
											"",
											"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
											"",
											"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
											"",
											"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
											"",
											"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
											"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
											"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
											"let zip = Math.floor(10000 + Math.random() * 90000);",
											"",
											"//Generate random Date of Birth in YYYY-MM-DD Format",
											"function randomDate(start, end) {",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"}",
											"let date = randomDate(new Date(1990, 00, 01), new Date());",
											"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
											"",
											"//Save the variables to be used in next request for validation",
											"// pm.environment.set(\"patientFirstName\", firstName);",
											"// pm.environment.set(\"patientLastName\", lastName);",
											"// pm.environment.set(\"patientEmail\", email);",
											"// pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"// pm.environment.set(\"patientChosenName\", chosenName);",
											"pm.environment.set(\"patientDateOfBirth\", moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'));",
											"// pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
											"// pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
											"// pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
											"// pm.environment.set(\"patientState\", ld.sample(statesList));",
											"// pm.environment.set(\"patientCountry\", \"US\");",
											"// pm.environment.set(\"patientZip\", zip.toString());",
											"// pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
											"// pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
											"// pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
											"// pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
											"// pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
											"// pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
											"// pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
											"// pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
											"// pm.environment.set(\"patientSex\", ld.sample(sexList));",
											"// pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
											"// pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));",
											"",
											"pm.environment.set(\"patientPhoneNumber\", pm.environment.get(\"patientMobile\").slice(2));",
											"",
											"    //  \"dateOfBirth\": moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'),",
											"    //         \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"    //         \"lastName\": pm.environment.get(\"patientLastName\"),",
											"    //         \"phoneNumber\": pm.environment.get(\"patientPhone\"),",
											"    //         \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
											"    //         \"email\": pm.environment.get(\"patientEmail\"),",
											"    //         \"age\": pm.environment.get(\"patientAge\"),",
											"    //         \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"    //         \"state\": pm.environment.get(\"patientState\"),",
											"    //         \"type\": \"Inquiry\",",
											"    //         \"contactPrimary\": {},",
											"    //         \"inquiryDate\": moment().format('YYYY-MM-DD')",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6aca77a4-40de-45a1-8506-7d84cf8f8831",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"state\": \"{{patientState}}\",\n    \"taskExternalId\": \"{{taskExternalId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/patients",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "add-referral-Carer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8bc1a1c6-a8e9-465e-905b-63580d751204",
										"exec": [
											"var date_timestamp = new Date().toISOString();",
											"let moment = require('moment');",
											"let ld = require('lodash');",
											"",
											"let states = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
											"",
											"var equip_source;",
											"if (pm.environment.name === \"qa\") {",
											"    equip_source = [",
											"        {",
											"            \"equip_source_name\": \"Dietitian\",",
											"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Doctor\\/clinician\",",
											"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Eating disorder organization\",",
											"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip employee\",",
											"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip event\\/webinar\",",
											"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip patient\\/family\",",
											"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Friend or family member\",",
											"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Google\\/search\",",
											"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Health insurance\\/payor\",",
											"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Hospital\\/medical center\",",
											"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Newsletter\",",
											"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Other\",",
											"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Press\",",
											"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"School\",",
											"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Social media\",",
											"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Therapist\",",
											"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
											"        }",
											"    ];",
											"}",
											"else if (pm.environment.name === \"dev\") {",
											"    equip_source = [",
											"        {",
											"            \"equip_source_name\": \"Dietitian\",",
											"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Doctor\\/clinician\",",
											"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Eating disorder organization\",",
											"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip employee\",",
											"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip event\\/webinar\",",
											"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Equip patient\\/family\",",
											"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Friend or family member\",",
											"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Google\\/search\",",
											"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Health insurance\\/payor\",",
											"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Hospital\\/medical center\",",
											"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Newsletter\",",
											"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Other\",",
											"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Press\",",
											"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"School\",",
											"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Social media\",",
											"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
											"        },",
											"        {",
											"            \"equip_source_name\": \"Therapist\",",
											"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
											"        }",
											"    ];",
											"}",
											"let random_equip_source = ld.sample(equip_source);",
											"let equip_source_id = random_equip_source.equip_source_external_id;",
											"let equip_source_name = random_equip_source.equip_source_name;",
											"",
											"const information_source = [",
											"    \"Chat\",",
											"    \"Email\",",
											"    \"Fax\",",
											"    \"In-person\",",
											"    \"Live phone call\",",
											"    \"Voicemail\"",
											"]",
											"",
											"let age = ld.random(6, 24);",
											"console.log(age);",
											"let dob = moment().subtract(age, 'years').format('MM/DD/YYYY');",
											"console.log(dob);",
											"",
											"let referrerFirstName = pm.variables.replaceIn('{{$randomFirstName}}') + date_timestamp;",
											"let referrerLastName = pm.variables.replaceIn('{{$randomLastName}}') + date_timestamp;",
											"",
											"pm.environment.set(\"referrerFirstName\", referrerFirstName);",
											"pm.environment.set(\"referrerLastName\", referrerLastName);",
											"pm.environment.set(\"referrerEmail\", \"qa\" + \"+\" + referrerFirstName + \"+\" + Date.now() + \"@equip.health\");",
											"pm.environment.set(\"referrerMobile\", \"+1 \"+pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"patientFirstName\", pm.variables.replaceIn('{{$randomFirstName}}')+date_timestamp);",
											"pm.environment.set(\"patientLastName\", pm.variables.replaceIn('{{$randomLastName}}')+date_timestamp);",
											"pm.environment.set(\"contactPatientDirectly\", \"Carer\");",
											"pm.environment.set(\"patientMobile\", \"+1 \"+pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
											"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
											"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
											"pm.environment.set(\"equipSourceName\", equip_source_name);",
											"pm.environment.set(\"state\", ld.sample(states));",
											"pm.environment.set(\"patientDateOfBirth\", dob);",
											"pm.environment.set(\"patientAge\", age);",
											"pm.environment.set(\"CarerFirstName\", pm.variables.replaceIn('{{$randomLastName}}')+date_timestamp);",
											"pm.environment.set(\"CarerLastName\", pm.variables.replaceIn('{{$randomLastName}}')+date_timestamp);",
											"pm.environment.set(\"CarerMobile\", \"+1 \"+pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
											"pm.environment.set(\"information_source\", ld.sample(information_source));",
											"",
											"var assigneeUserId, assigneeUserName;",
											"if (pm.environment.name === \"qa\") {",
											"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
											"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
											"} else {",
											"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
											"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1f64d3a1-0acc-441d-9b97-6ddf348f8c19",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify referralExternalId is generated\", function () {",
											"    pm.expect(jsonData.referralExternalId).length.greaterThan(0);",
											"});",
											"",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"",
											"pm.environment.set(\"referralExternalId\", jsonData.referralExternalId);",
											"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "81a093b5-b4d0-4b70-9897-93b9547c0bdd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"referrerFirstName\": \"{{referrerFirstName}}\",\n    \"referrerLastName\": \"{{referrerLastName}}\",\n    \"referrerPhone\": \"{{referrerMobile}}\",\n    \"referrerMobile\": \"{{referrerMobile}}\",\n    \"referrerEmail\": \"{{referrerEmail}}\",\n    \"relationWithPatient\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{state}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientAge\": \"{{patientAge}}\",\n    \"patientPhone\": \"\",\n    \"patientMobile\": \"\",\n    \"patientEmail\": \"\",\n    \"patientPreferredContact\": \"\",\n    \"contactPatientDirectly\": \"No\",\n    \"carerFirstName\": \"{{CarerFirstName}}\",\n    \"carerLastName\": \"{{CarerLastName}}\",\n    \"carerPhone\": \"{{CarerMobile}}\",\n    \"carerMobile\": \"{{CarerMobile}}\",\n    \"carerEmail\": \"\",\n    \"carerPreferredContact\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"{{information_source}}\",\n    \"affiliationList\": [\n        {\n            \"name\": \"Google inc. india pvt ltd\",\n            \"latitude\": \"2\",\n            \"longitude\": \"3\",\n            \"addressLine1\": \"111 8th Ave\",\n            \"addressLine2\": \"APT 1074\",\n            \"city\": \"{{state}}\",\n            \"state\": \"{{state}}\",\n            \"zipCode\": \"85283\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/add-referral",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"add-referral"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by referral carer name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ee76ad7-a57b-40e3-801b-25f68effb6dd",
										"exec": [
											"let moment = require('moment');",
											"",
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"dateOfBirth\": moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'),",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"age\": pm.environment.get(\"patientAge\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"state\"),",
											"            \"type\": \"Referral\",",
											"            \"contactReferral\": {",
											"                \"firstName\": pm.environment.get(\"referrerFirstName\"),",
											"                \"lastName\": pm.environment.get(\"referrerLastName\"),",
											"                \"email\": pm.environment.get(\"referrerEmail\"),",
											"                \"phoneNumber\": pm.environment.get(\"referrerMobile\"),",
											"                \"mobileNumber\": pm.environment.get(\"referrerMobile\"),",
											"            },",
											"            \"referralAffiliation\":",
											"            {",
											"                \"name\": \"Google inc. india pvt ltd\",",
											"                \"addressLine1\": \"111 8th Ave\",",
											"                \"addressLine2\": \"APT 1074\",",
											"                \"city\": pm.environment.get(\"state\"),",
											"                \"state\": pm.environment.get(\"state\"),",
											"                \"zipCode\": \"85283\"",
											"            },",
											"            \"contactPrimary\": {",
											"                \"firstName\": pm.environment.get(\"CarerFirstName\"),",
											"                \"lastName\": pm.environment.get(\"CarerLastName\"),",
											"                \"phoneNumber\": pm.environment.get(\"CarerMobile\"),",
											"                \"mobileNumber\": pm.environment.get(\"CarerMobile\")",
											"            },",
											"            \"informationSource\": pm.environment.get(\"information_source\"),",
											"            \"contactPatientDirectly\": false,",
											"            \"inquiryDate\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify referral search details\", () => {",
											"    console.log(\"expected response: \"+JSON.stringify(expectedResponse));",
											"    console.log(\"actual response. : \"+JSON.stringify(jsonData));",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cd9109c8-f35f-4227-abd3-4bac96992fe2",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0a7b5d30-a3f6-4997-8883-5830bb488991",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=500&filter-by=inquiry-referral-search::{{CarerFirstName}} {{CarerLastName}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{CarerFirstName}} {{CarerLastName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search inquiry referral by referral carer phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b6770dd9-23ab-41d7-a19c-33df07011b5c",
										"exec": [
											"let moment = require('moment');",
											"",
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify pageNumber count\", function () {",
											"    pm.expect(jsonData.count).to.be.eql(jsonData['data'].length);",
											"});",
											"",
											"let expectedResponse = {",
											"    \"data\": [",
											"        {",
											"            \"dateOfBirth\": moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'),",
											"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
											"            \"lastName\": pm.environment.get(\"patientLastName\"),",
											"            \"age\": pm.environment.get(\"patientAge\"),",
											"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
											"            \"state\": pm.environment.get(\"state\"),",
											"            \"type\": \"Referral\",",
											"            \"contactReferral\": {",
											"                \"firstName\": pm.environment.get(\"referrerFirstName\"),",
											"                \"lastName\": pm.environment.get(\"referrerLastName\"),",
											"                \"email\": pm.environment.get(\"referrerEmail\"),",
											"                \"phoneNumber\": pm.environment.get(\"referrerMobile\"),",
											"                \"mobileNumber\": pm.environment.get(\"referrerMobile\"),",
											"            },",
											"            \"referralAffiliation\":",
											"            {",
											"                \"name\": \"Google inc. india pvt ltd\",",
											"                \"addressLine1\": \"111 8th Ave\",",
											"                \"addressLine2\": \"APT 1074\",",
											"                \"city\": pm.environment.get(\"state\"),",
											"                \"state\": pm.environment.get(\"state\"),",
											"                \"zipCode\": \"85283\"",
											"            },",
											"            \"contactPrimary\": {",
											"                \"firstName\": pm.environment.get(\"CarerFirstName\"),",
											"                \"lastName\": pm.environment.get(\"CarerLastName\"),",
											"                \"phoneNumber\": pm.environment.get(\"CarerMobile\"),",
											"                \"mobileNumber\": pm.environment.get(\"CarerMobile\")",
											"            },",
											"            \"informationSource\": pm.environment.get(\"information_source\"),",
											"            \"contactPatientDirectly\": false,",
											"            \"inquiryDate\": \"\"+(new Date()).toISOString().slice(0, 10)+\"\"",
											"        }",
											"    ],",
											"    \"count\": 1",
											"}",
											"",
											"pm.test(\"Verify referral search details\", () => {",
											"    console.log(\"expected response: \"+JSON.stringify(expectedResponse));",
											"    console.log(\"actual response. : \"+JSON.stringify(jsonData));",
											"    pm.expect(jsonData).to.eql(expectedResponse);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f81540d1-2de1-402c-bfd4-0c1831b50a57",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f6ce7838-b937-45e4-91e2-bcfc33c2b9dc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=500&filter-by=inquiry-referral-search::{{CarerMobile}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{CarerMobile}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Task Details Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f00ca0d-a5b6-469f-b836-f8c789ec36b1",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"inquiryTaskCategory\", jsonData.data[0].category.categoryName);\r",
											"pm.environment.set(\"inquiryTaskStatusId\", jsonData.data[0].status.taskStatusId);\r",
											"pm.environment.set(\"inquiryTaskPriorityId\", jsonData.data[0].taskPriorityId);\r",
											"pm.environment.set(\"inquiryTaskDuedate\", jsonData.data[0].taskDueDate);\r",
											"pm.environment.set(\"inquiryTaskDescription\",jsonData.data[0].taskDescription.replace(/\\n/g, \"\\\\n\"));\r",
											"pm.environment.set(\"inquiryTaskName\",jsonData.data[0].taskName);\r",
											"pm.environment.set(\"inquiryTaskCategoryExternalId\",jsonData.data[0].category.categoryExternalId);\r",
											"pm.environment.set(\"inquiryTaskSubCategoryExternalId\",jsonData.data[0].subCategory.categoryExternalId);\r",
											"pm.environment.set(\"inquiryTaskAssignedUserId\",jsonData.data[0].assignee.externalId);\r",
											"pm.environment.set(\"inquiryTaskUpdatedByUserId\", jsonData.data[0].assignee.externalId);\r",
											"pm.environment.set(\"inquiryTaskUpdatedByUserName\", jsonData.data[0].assignee.firstName+\" \"+jsonData.data[0].assignee.lastName);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5711f22e-a55a-4fc6-b829-784158afe6e6",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "aedd4a35-d87f-4438-8edd-bc4cda114843",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"composition",
										"tasks"
									],
									"query": [
										{
											"key": "filter-by",
											"value": "task-external-id::{{taskExternalId}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add patient to inquiry task Copy 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "782bbe2e-01ee-4c2d-a96f-7a60bc161fea",
										"exec": [
											"///// get random due date (today or future date) /////",
											"var start = new Date();",
											"var end = new Date(2023, 1, 1);",
											"var task_due_date = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
											"var month = (task_due_date.getMonth() + 1) >= 10 ? task_due_date.getMonth() + 1 : \"0\" + (task_due_date.getMonth() + 1);",
											"console.log(\"month: \" + month);",
											"var day = (task_due_date.getDate() + 1) > 10 ? task_due_date.getDate() : \"0\" + task_due_date.getDate();",
											"var task_due_date = task_due_date.getFullYear() + '-' + month + '-' + day;",
											"task_due_date = task_due_date + \"T23:59:59.999Z\";",
											"///// end - get random due date (today or future date) /////",
											"",
											"pm.environment.set(\"task_due_date\", task_due_date);",
											"",
											"if (pm.environment.name === \"qa\") {",
											"    pm.environment.set(\"patient_id\", \"c734c310-2be9-430d-8cea-4932f8e79dd1\");",
											"    pm.environment.set(\"task_assigned_userid\", \"87a6b43f-1e22-4ff6-93ae-dc003fc9c0c5\");",
											"    pm.environment.set(\"task_assigned_username\", \"Bala Deema\");",
											"    pm.environment.set(\"taskUpdatedByUserId\", \"bd12e9b1-394c-470d-b03e-aa577f6fce65\");",
											"    pm.environment.set(\"taskUpdatedByUserName\", \"Bala 000analyst\");",
											"} else if (pm.environment.name === \"dev\") {",
											"    pm.environment.set(\"patient_id\", \"a254abca-f1a6-4ae8-90d4-b537d579f285\");",
											"    pm.environment.set(\"task_assigned_userid\", \"8ff50537-55ae-420d-9f4a-1e6a04bd4c8c\");",
											"    pm.environment.set(\"task_assigned_username\", \"Chandhu Gandra\");",
											"    pm.environment.set(\"taskUpdatedByUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
											"    pm.environment.set(\"taskUpdatedByUserName\", \"Balakrishna Deema\");",
											"}",
											"pm.environment.set(\"task_priority_score\", 4.5);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d1d49016-a478-48f3-97e3-8ad298f4fdd7",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"//console.log(pm.response.body.toString);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 4000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "10ee2a82-332b-4580-8e26-fe12b0ad07ff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"taskExternalId\": \"{{taskExternalId}}\",\n    \"taskName\": \"{{inquiryTaskName}}\",\n    \"taskDescription\": \"{{inquiryTaskDescription}}\",\n    \"taskCategoryExternalId\": \"{{inquiryTaskCategoryExternalId}}\",\n    \"taskSubCategoryExternalId\": \"{{inquiryTaskSubCategoryExternalId}}\",\n    \"taskAssignedUserId\": \"{{inquiryTaskAssignedUserId}}\",\n    \"taskUpdatedByUserId\":\"{{inquiryTaskUpdatedByUserId}}\",\n    \"taskUpdatedByUserName\": \"{{inquiryTaskUpdatedByUserName}}\",\n    \"patientId\":\"{{patient_id}}\",\n    \"taskDueDate\": \"{{inquiryTaskDuedate}}\",\n    \"taskPriorityId\": \"{{inquiryTaskPriorityId}}\",\n    \"taskStatusId\": \"{{inquiryTaskStatusId}}\",\n    \"taskPriorityScore\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tasks",
									"host": [
										"{{host}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "verifyReferralSearchAfterAddingPatient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05a3d59a-3d6c-43ad-9171-d20a08657401",
										"exec": [
											"let jsonData = pm.response.json();",
											"var searchString = pm.request.url.query.get(\"filter-by\").substring(25).replace(\"%20\",\" \").toLowerCase();",
											"console.log(\"search string is \"+ searchString)",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 4000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);",
											"});",
											"pm.test(\"Response has a JSON body\", function () {",
											"    pm.response.to.be.json;",
											"});",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"pm.test(\"Verify no search recourds found\", () => {",
											"    pm.expect(jsonData.count).to.eql(0);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "91a8a09f-89d7-40a5-ad2e-8c7f3481c575",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8e0e9765-8cf0-4619-950e-3c3453feb3e9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{test-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/inquiry-referral/patients?page-size=100&filter-by=inquiry-referral-search::{{patientFirstName}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"inquiry-referral",
										"patients"
									],
									"query": [
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "filter-by",
											"value": "inquiry-referral-search::{{patientFirstName}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "9d34af6b-73cb-4c97-a7a9-4ffa3406d3ce"
				}
			],
			"id": "72e9665f-f7af-4489-83ee-b715b1ee1c96"
		},
		{
			"name": "Get patient details from inquiry task",
			"item": [
				{
					"name": "add-inquiry-self",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97eac1d7-2830-4a2b-9972-69077be7eec5",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify inquiryExternalId is generated\", function () {",
									"    pm.expect(jsonData.inquiryExternalId).length.greaterThan(0);",
									"});",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"pm.environment.set(\"inquiryExternalId\", jsonData.inquiryExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f4d6db5f-66fa-4e2f-8a97-e1e0195ab5d9",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let statesList = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
									"",
									"var equipSourceList;",
									"if (pm.environment.name === \"qa\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equipSourceList);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"const payorList = [\"AIDS Healthcare Foundation\", \"ATRIO Health Plans\", \"Aetna\", \"Affinity Health Plan\", \"AgeRight Advantage Health Plan\", \"AgeWell New York\", \"Alameda Alliance for Health\", \"Alignment Health Plan\", \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"AltaMed PACE\", \"AmeriHealth Insurance Company of New Jersey (AmeriHealth) and AmeriHealth HMO, Inc.\", \"Amida Care\", \"Anthem, Inc.\", \"Arkansas Blue Cross and Blue Shield\", \"Aspire Health Plan\", \"Asuris Northwest Health\", \"Atlanticare LIFE Connection\", \"Auxilio Salud Plus\", \"Avera Health Plans, Inc.\", \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"Bienvivir Senior Health Services\", \"Blue Cross Blue Shield of Michigan\", \"Blue Cross and Blue Shield of Alabama\", \"Blue Cross and Blue Shield of Illinois\", \"Blue Cross and Blue Shield of Montana\", \"Blue Cross and Blue Shield of New Mexico\", \"Blue Cross and Blue Shield of Texas\", \"Blue Shield of California\", \"BlueCross BlueShield of Tennessee\", \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"Brand New Day\", \"Brandman Centers for Senior Care (BCSC)\", \"BridgeSpan Health Company\", \"Bright Health\", \"CHRISTUS Health Plan\", \"CalOptima\", \"CalViva Health\", \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"Care N' Care Health Plan\", \"CareFirst BCBS\", \"CareOregon\", \"Cascade Health Alliance, LLC\", \"Catholic Health LIFE\", \"CenCal Health\", \"Centene Corporation\", \"Center for Elders Independence\", \"CenterLight Healthcare\", \"Centers Plan for Healthy Living (CPHL)\", \"Centers for Medicare and Medicaid Services (CMS)\", \"Central California Alliance for Health\", \"Central Health Plan of California, Inc.\", \"Chinese Community Health Plan\", \"Cigna Corporation\", \"Clover Health\", \"Community Care Health Plan\", \"Community First Health Plans\", \"Community Health Choice, Inc. (CHC)\", \"Community Health Group\", \"Community Health Plan of Washington (CHPW)\", \"Complete Senior Care\", \"ConnectiCare, Inc.\", \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"Contra Costa Health Plan\", \"Cook Children's Health Plan (CCHP)\", \"Crystal Run Health Plans\", \"DAKOTACARE\", \"Devoted Health\", \"Driscoll Health Plan\", \"EMI Health\", \"Eddy SeniorCare\", \"El Paso First Health Plans\", \"ElderONE\", \"Elderplan, Inc.\", \"Excellus BlueCross BlueShield\", \"Fallon Health\", \"FamilyHealth Center for Older Adults (PACE)\", \"First Medical Health Plan, Inc.\", \"FirstCare Health Plans\", \"Fresno PACE for Seniors\", \"GHI, an EmblemHealth Company\", \"Gary and Mary West PACE\", \"Geisinger Health Plan\", \"Gold Coast Health Plan\", \"Golden State Medicare Health Plan\", \"HIP, an EmblemHealth Company\", \"Health Alliance (fka Health Alliance Medical Plans, Inc.)\", \"Health New England, Inc.\", \"Health Plan of San Joaquin\", \"Health Plan of San Mateo\", \"Healthfirst\", \"Highmark BCBS\", \"Highmark Health\", \"Horizon Blue Cross Blue Shield of New Jersey\", \"Humana Inc.\", \"ICHS PACE\", \"Imperial Health Plan\", \"Independence Blue Cross, LLC (Independence)\", \"Independent Health Association, Inc.\", \"Inland Empire Health Plan\", \"InnovAge\", \"InnovaCare Health Solutions\", \"Inspira LIFE\", \"Inter Valley Health Plan\", \"Kaiser Foundation Health Plan of Washington\", \"Kaiser Foundation Health Plan of the Northwest, Inc.\", \"Kaiser Foundation Health Plan, Inc.\", \"Kaiser Foundation Health Plan, Inc.- Other\", \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"Kalos Health\", \"KelseyCare Advantage\", \"Kern Health Systems, Inc.\", \"L.A. Care Health Plan\", \"LIFE St. Francis\", \"LIFE at Lourdes, Inc.\", \"Lasso Healthcare\", \"LifeWise Health Plan of Washington\", \"Longevity Health Plan\", \"Lutheran Senior LIFE at Jersey City\", \"MAPFRE Puerto Rico\", \"MVP Health Care\", \"Magellan\", \"MediExcel Health Plan\", \"Medicaid\", \"Medical Card System, Inc.\", \"Medicare\", \"Memorial Hermann Health Insurance Company\", \"MetroPlus Health Plan, Inc.\", \"Moda Health\", \"Molina Healthcare\", \"Mutual of Omaha Insurance Company\", \"NY Hotel Trades Council and Hotel Association of NYC\", \"No Insurance\", \"On Lok Lifeways\", \"Optum\", \"Oscar Insurance Corporation\", \"Other\", \"PACE CNY\", \"PacificSource Health Plans\", \"Parkland Community Health Plan\", \"Partners Health Plan\", \"Partnership HealthPlan of California\", \"Physicians Health Plan of Northern Indiana, Inc.\", \"Piedmont Community Health Plan\", \"Plan Medico Bella Vista\", \"Plan de Salud Menonita\", \"Premera Blue Cross\", \"Priority Health\", \"Private Pay\", \"ProCare Advantage\", \"Prominence Health Plan\", \"Providence Health Plan\", \"Redwood Coast PACE\", \"Regence BlueCross BlueShield of Oregon\", \"Regence BlueShield\", \"Regence BlueShield of Idaho\", \"RiverSpring Health\", \"Ryder Health Plan, Inc.\", \"SCAN Health Plan\", \"SIHO Holding, LLC dba SIHO Insurance Services\", \"SIMNSA Health Plan\", \"Samaritan Health Plans\", \"San Diego PACE\", \"San Francisco Health Plan (SFHP)\", \"Santa Clara County dba Valley Health Plan\", \"Santa Clara Family Health Plan\", \"Santa Fe Employe's Hospital Association-Coast Lines\", \"Scott and White Health Plan\", \"Scripps Health Plan\", \"Seaside Health Plan\", \"Sendero Health Plan\", \"Senior Whole Health\", \"Sentara Health Plans, Inc. (fka Optima Health)\", \"Seton Health Plan (dba Dell Children's Health Plan)\", \"Sharp Health Plan\", \"Silver Star Health Network\", \"St. Paul's PACE\", \"Stanford Health Care Advantage\", \"State of California\", \"State of New Jersey\", \"State of New York\", \"State of Oregon\", \"State of Texas\", \"State of Washington\", \"Stockton PACE\", \"Sunrise Advantage Plan\", \"Sutter Health Plus\", \"Sutter SeniorCare\", \"Texas Children's Health Plan\", \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"Total Senior Care, Inc.\", \"Triple-S Management Corporation\", \"True Health New Mexico\", \"Umpqua Health Alliance\", \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"UnitedHealthcare\", \"Univera Healthcare\", \"VNSNY CHOICE\", \"VillageCareMAX\", \"Vitality Health Plan of California\", \"WellCare Health Plans, Inc.\", \"Western Health Advantage\", \"Western Oregon Advanced Health, LLC\", \"Yamhill Community Care Organization\"];",
									"",
									"let age = ld.random(10, 30);",
									"let dob = moment().subtract(age, 'years').format('MM/DD/YYYY');",
									"",
									"let patientFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let patientLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"pm.environment.set(\"patientFirstName\", patientFirstName);",
									"pm.environment.set(\"patientLastName\", patientLastName);",
									"pm.environment.set(\"patientEmail\", \"qa\" + \"+\" + patientFirstName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPhone\", \"+1 (333) 333-3333\");",
									"pm.environment.set(\"patientPreferredContact\", \"both\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", age);",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"payorName\", ld.sample(payorList));",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "fb49cb84-27d7-46d7-82c0-1d8b8f3000a9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquirerFirstName\": \"\",\n    \"inquirerLastName\": \"\",\n    \"inquirerPhone\": \"\",\n    \"inquirerMobile\": \"\",\n    \"inquirerEmail\": \"\",\n    \"inquirerAbout\": \"myself\",\n    \"relationWithPatient\": \"\",\n    \"preferredContact\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientAge\": {{patientAge}},\n    \"patientPhone\": \"{{patientPhone}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"{{patientEmail}}\",\n    \"patientPreferredContact\": \"{{patientPreferredContact}}\",\n    \"contactPatientDirectly\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\",\n    \"payor\": \"{{payorName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-inquiry",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get patient details from self inquiry task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d6bfcd5-35af-4d08-b182-f1650867fcb9",
								"exec": [
									"let moment = require('moment');",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"let expectedResponse = {",
									"    \"data\": [",
									"        {",
									"            \"dateOfBirth\": moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'),",
									"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
									"            \"lastName\": pm.environment.get(\"patientLastName\"),",
									"            \"phoneNumber\": pm.environment.get(\"patientPhone\"),",
									"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
									"            \"email\": pm.environment.get(\"patientEmail\"),",
									"            \"age\": pm.environment.get(\"patientAge\"),",
									"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
									"            \"state\": pm.environment.get(\"patientState\"),",
									"            \"type\": \"Inquiry\",",
									"            \"contactPrimary\": {},",
									"            \"inquiryDate\": moment().format('YYYY-MM-DD')",
									"        }",
									"    ],",
									"    \"count\": 1",
									"}",
									"pm.test(\"Verify patient details\", () => {",
									"    pm.expect(jsonData).to.eql(expectedResponse);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c26b0075-4ecc-42fd-aea5-31d4fce684c8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0387c93e-4b14-450c-b9c4-6d07fd20a925",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/patients?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"patients"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add-inquiry-someone else",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d1e73738-eb61-45c3-88b7-0115a7b8ce9e",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let statesList = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
									"",
									"var equipSourceList;",
									"if (pm.environment.name === \"qa\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equipSourceList);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"let relationWithPatientList = [\"Mother\", \"Father\", \"Parent (non-binary)\", \"Friend\", \"Family member\", \"Other\", \"Guardian\", \"Sibling\", \"Stepparent\", \"Stepmother\", \"Stepfather\", \"Grandparent\"];",
									"",
									"const informationSourceList = [",
									"    \"Chat\",",
									"    \"Email\",",
									"    \"Fax\",",
									"    \"In-person\",",
									"    \"Live phone call\",",
									"    \"Voicemail\"",
									"]",
									"",
									"let age = ld.random(10, 30);",
									"let dob = moment().subtract(age, 'years').format('MM/DD/YYYY');",
									"",
									"",
									"let inquirerFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let inquirerLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let patientFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let patientLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"pm.environment.set(\"inquirerFirstName\", inquirerFirstName);",
									"pm.environment.set(\"inquirerLastName\", inquirerLastName);",
									"pm.environment.set(\"patientFirstName\", patientFirstName);",
									"pm.environment.set(\"patientLastName\", patientLastName);",
									"pm.environment.set(\"relationWithPatient\", ld.sample(relationWithPatientList));",
									"pm.environment.set(\"inquirerEmail\", \"qa\" + \"+\" + inquirerFirstName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"inquirerMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"inquirerPhone\", \"+1 (207) 444-4444\");",
									"pm.environment.set(\"patientPreferredContact\", \"both\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", age);",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"informationSource\", ld.sample(informationSourceList));",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPhone\", \"+1 (207) 444-5555\");",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a2975c8f-88da-4503-9799-d782b52f629d",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify inquiryExternalId is generated\", function () {",
									"    pm.expect(jsonData.inquiryExternalId).length.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"inquiryExternalId\", jsonData.inquiryExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8356504e-9708-4c28-8705-f44451970c80",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contactPatientDirectly\": \"\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"inquirerAbout\": \"someoneelse\",\n    \"inquirerFirstName\": \"{{inquirerFirstName}}\",\n    \"inquirerLastName\": \"{{inquirerLastName}}\",\n    \"inquirerEmail\": \"{{inquirerEmail}}\",\n    \"inquirerMobile\": \"{{inquirerMobile}}\",\n    \"inquirerPhone\": \"{{inquirerPhone}}\",\n    \"preferredContact\": \"{{patientPreferredContact}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientAge\": {{patientAge}},\n    \"patientEmail\": \"\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"relationWithPatient\": \"{{relationWithPatient}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientPhone\": \"{{patientPhone}}\",\n    \"patientPreferredContact\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"{{informationSource}}\",\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-inquiry",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get patient details from someone else inquiry task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a53ad5db-d659-4f58-9189-6f2d701bef3c",
								"exec": [
									"let moment = require('moment');",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"let expectedResponse = {",
									"    \"data\": [",
									"        {",
									"            \"dateOfBirth\": moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'),",
									"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
									"            \"lastName\": pm.environment.get(\"patientLastName\"),",
									"            \"phoneNumber\": pm.environment.get(\"patientPhone\"),",
									"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
									"            \"age\": pm.environment.get(\"patientAge\"),",
									"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
									"            \"state\": pm.environment.get(\"patientState\"),",
									"            \"type\": \"Inquiry\",",
									"            \"contactPrimary\": {",
									"                \"firstName\": pm.environment.get(\"inquirerFirstName\"),",
									"                \"lastName\": pm.environment.get(\"inquirerLastName\"),",
									"                \"email\": pm.environment.get(\"inquirerEmail\"),",
									"                \"phoneNumber\": pm.environment.get(\"inquirerPhone\"),",
									"                \"mobileNumber\": pm.environment.get(\"inquirerMobile\"),",
									"                \"relationWithPatient\": pm.environment.get(\"relationWithPatient\")",
									"            },",
									"            \"inquiryDate\": moment().format('YYYY-MM-DD')",
									"        }",
									"    ],",
									"    \"count\": 1",
									"}",
									"pm.test(\"Verify patient details\", () => {",
									"    console.log(\"actual: \" + JSON.stringify(jsonData));",
									"    console.log(\"actual: \" + JSON.stringify(expectedResponse));",
									"    pm.expect(jsonData).to.eql(expectedResponse);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "997acc1c-4f71-458b-a121-56a99e1c5ca8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e20a5a65-3ecd-4499-aec1-eedd348adec0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/patients?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"patients"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "02a9497a-610d-4a7e-9676-38d31d3ece3c"
		},
		{
			"name": "Get patient details from referral task",
			"item": [
				{
					"name": "add-referral-Direct",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "16ff7a6a-1131-41d0-b6ac-f8d5b468f1c9",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let statesList = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
									"",
									"var equipSourceList;",
									"if (pm.environment.name === \"qa\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equipSourceList);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"let age = ld.random(18, 40);",
									"let dob = moment().subtract(age, 'years').format('MM/DD/YYYY');",
									"",
									"let referrerFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let referrerLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"pm.environment.set(\"referrerFirstName\", referrerFirstName);",
									"pm.environment.set(\"referrerLastName\", referrerLastName);",
									"pm.environment.set(\"referrerEmail\", \"qa\" + \"+\" + referrerFirstName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"referrerMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"referrerPhone\", \"+1 (122) 222-2222\");",
									"pm.environment.set(\"patientFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set(\"patientLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", age);",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPhone\", \"+1 (916) 258-4561\");",
									"pm.environment.set(\"contactPatientDirectly\", \"Direct\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"affiliationCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"affiliationState\", ld.sample(statesList));",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6dab8d32-770a-4ee2-913d-2b78d6f6e126",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify referralExternalId is generated\", function () {",
									"    pm.expect(jsonData.referralExternalId).length.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"referralExternalId\", jsonData.referralExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6c75352f-5f0b-4bb6-ac45-b9a9be128522",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"referrerFirstName\": \"{{referrerFirstName}}\",\n    \"referrerLastName\": \"{{referrerLastName}}\",\n    \"referrerPhone\": \"{{referrerPhone}}\",\n    \"referrerMobile\": \"{{referrerMobile}}\",\n    \"referrerEmail\": \"{{referrerEmail}}\",\n    \"relationWithPatient\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientAge\": {{patientAge}},\n    \"patientPhone\": \"{{patientPhone}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"\",\n    \"patientPreferredContact\": \"\",\n    \"contactPatientDirectly\": \"Yes\",\n    \"carerName\": \"\",\n    \"carerPhone\": \"\",\n    \"carerMobile\": \"\",\n    \"carerEmail\": \"\",\n    \"carerPreferredContact\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"affiliationList\": [\n        {\n            \"name\": \"Google inc. india pvt ltd\",\n            \"latitude\": \"2\",\n            \"longitude\": \"3\",\n            \"addressLine1\": \"111 8th Ave\",\n            \"addressLine2\": \"APT 1074\",\n            \"city\": \"{{affiliationCity}}\",\n            \"state\": \"{{affiliationState}}\",\n            \"zipCode\": \"85283\"\n        }\n    ],\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-referral",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-referral"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get patient details from direct referral task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b501472b-e5c8-4bb4-b5ce-73046f767488",
								"exec": [
									"let moment = require('moment');",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"let expectedResponse = {",
									"    \"data\": [",
									"        {",
									"            \"dateOfBirth\": moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'),",
									"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
									"            \"lastName\": pm.environment.get(\"patientLastName\"),",
									"            \"phoneNumber\": pm.environment.get(\"patientPhone\"),",
									"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
									"            \"age\": pm.environment.get(\"patientAge\"),",
									"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
									"            \"state\": pm.environment.get(\"patientState\"),",
									"            \"type\": \"Referral\",",
									"            \"contactReferral\": {",
									"                \"firstName\": pm.environment.get(\"referrerFirstName\"),",
									"                \"lastName\": pm.environment.get(\"referrerLastName\"),",
									"                \"email\": pm.environment.get(\"referrerEmail\"),",
									"                \"phoneNumber\": pm.environment.get(\"referrerPhone\"),",
									"                \"mobileNumber\": pm.environment.get(\"referrerMobile\")",
									"            },",
									"            \"referralAffiliation\": {",
									"                \"name\": \"Google inc. india pvt ltd\",",
									"                \"addressLine1\": \"111 8th Ave\",",
									"                \"addressLine2\": \"APT 1074\",",
									"                \"city\": pm.environment.get(\"affiliationCity\"),",
									"                \"state\": pm.environment.get(\"affiliationState\"),",
									"                \"zipCode\": \"85283\"",
									"            },",
									"            \"contactPrimary\": {},",
									"            \"informationSource\": \"Webform\",",
									"            \"contactPatientDirectly\": true,",
									"            \"inquiryDate\": moment().format('YYYY-MM-DD')",
									"        }",
									"    ],",
									"    \"count\": 1",
									"}",
									"",
									"pm.test(\"Verify patient details\", () => {",
									"    console.log(\"actual: \" + JSON.stringify(jsonData));",
									"    console.log(\"actual: \" + JSON.stringify(expectedResponse));",
									"    pm.expect(jsonData).to.eql(expectedResponse);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "44a84a19-f044-41ed-aa41-b146aa68b02b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2ff49ef4-ee24-4e74-b24a-b3c3bc604dc6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/inquiry-referral/patients?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"patients"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add-referral-Carer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "dd04ea32-beaf-4deb-a16e-600114f11ce8",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let statesList = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
									"",
									"var equipSourceList;",
									"if (pm.environment.name === \"qa\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equipSourceList);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"const informationSourceList = [\"Chat\", \"Email\", \"Fax\", \"In-person\", \"Live phone call\", \"Voicemail\"];",
									"",
									"var relationWithPatientList;",
									"if (pm.environment.name === \"qa\") {",
									"    relationWithPatientList = [",
									"        {",
									"            \"relation_to_patient_external_id\": \"f439e154-338e-1389-bea3-4ac58fab604f\",",
									"            \"relation_to_patient_name\": \"Adolescent Medicine Specialist\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"14d3838f-5d32-2a79-9ba0-85d27b80884d\",",
									"            \"relation_to_patient_name\": \"Therapist\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"9004d8cc-3c98-1dba-0441-8dcf638f6fcc\",",
									"            \"relation_to_patient_name\": \"Doctor\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"c6de3e24-ea3d-bc62-cd2a-74c8a59c4aab\",",
									"            \"relation_to_patient_name\": \"Discharge Planner\\/Case Manager\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"dca82d60-8746-7c2d-3d7c-bafb8e22e74e\",",
									"            \"relation_to_patient_name\": \"Executive\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"f024aa10-14e2-d7f8-1cdd-9f3486eb8eb3\",",
									"            \"relation_to_patient_name\": \"Family Medicine Physician\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"52babb16-0941-adb9-7804-9e69f24761bf\",",
									"            \"relation_to_patient_name\": \"Insurance Company\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"4a42fd97-f523-a2f3-c94c-31de3ca25ef8\",",
									"            \"relation_to_patient_name\": \"Nurse Practitioner\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"dba361c6-4933-d154-25df-b14de6156759\",",
									"            \"relation_to_patient_name\": \"Outreach Professional\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"84cfaedd-8468-2e41-4019-593c94e5d85c\",",
									"            \"relation_to_patient_name\": \"Hospital\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"4f8016e7-8adb-635f-026e-46796e228c8a\",",
									"            \"relation_to_patient_name\": \"Payor Case Manager\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"6c0c081d-bc9c-7160-e3f2-a2f922e9df66\",",
									"            \"relation_to_patient_name\": \"Pediatrician\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"13599a7c-e838-66bf-f735-fa887fb372a8\",",
									"            \"relation_to_patient_name\": \"Primary Care Doctor\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"d7f6075f-5822-d0f2-2295-c5aad5d263a1\",",
									"            \"relation_to_patient_name\": \"Private Practice Group\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"0d8ead87-363c-585c-e3f2-baf51f48c08c\",",
									"            \"relation_to_patient_name\": \"Psychiatrist\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"373f1c7a-c72c-26c6-a265-366fe3ad93f2\",",
									"            \"relation_to_patient_name\": \"Psychologist\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"b7666e8e-d7ab-fce8-fb39-987f9bd2a8ba\",",
									"            \"relation_to_patient_name\": \"Social Worker\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"3229bf83-86be-7db3-c719-486161c5de98\",",
									"            \"relation_to_patient_name\": \"Treatment Center\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"c1e4cb13-1496-b098-a096-bb45f79fdea6\",",
									"            \"relation_to_patient_name\": \"Community org\\/non-profit\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"4b0a79ee-c9c4-20b2-1d85-4f9e086f7676\",",
									"            \"relation_to_patient_name\": \"Dietician\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"4f31a861-2110-16ce-61ad-2e9b02b1e93d\",",
									"            \"relation_to_patient_name\": \"Other\"",
									"        }",
									"    ];",
									"} else {",
									"    relationWithPatientList = [",
									"        {",
									"            \"relation_to_patient_external_id\": \"da490458-1899-96fc-d123-762a65809298\",",
									"            \"relation_to_patient_name\": \"Adolescent Medicine Specialist\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"1cd2780c-1cc0-b433-a2cb-545891622b0d\",",
									"            \"relation_to_patient_name\": \"Therapist\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"62416070-61bf-b7e0-cd13-089747807260\",",
									"            \"relation_to_patient_name\": \"Doctor\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"4bcb87fe-51a1-4f5f-7e8c-2c172b3ec4a2\",",
									"            \"relation_to_patient_name\": \"Discharge Planner\\/Case Manager\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"3dd2856b-dbcb-db54-b34d-d243e5f8538e\",",
									"            \"relation_to_patient_name\": \"Executive\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"69c86b9e-5cc1-080e-5593-5de50d27d905\",",
									"            \"relation_to_patient_name\": \"Family Medicine Physician\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"c98fe523-f401-6148-c9e8-c2f1553b9a18\",",
									"            \"relation_to_patient_name\": \"Insurance Company\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"8a1ad552-d6ca-e319-c8f5-c2c3a9d15012\",",
									"            \"relation_to_patient_name\": \"Nurse Practitioner\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"1f044c5a-25da-9ccc-6ed3-c276ed912bc7\",",
									"            \"relation_to_patient_name\": \"Outreach Professional\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"6dbda327-cc49-1b79-4e23-05220e004052\",",
									"            \"relation_to_patient_name\": \"Hospital\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"32bd614f-d85b-176b-c560-397be9022511\",",
									"            \"relation_to_patient_name\": \"Payor Case Manager\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"c1d1419e-4943-2c8f-db56-a113123190b0\",",
									"            \"relation_to_patient_name\": \"Pediatrician\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"d0792987-e1ae-de18-e781-ee0afe2e1e4b\",",
									"            \"relation_to_patient_name\": \"Primary Care Doctor\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"39c9d63b-e4c1-ad45-5986-625ec7742ff8\",",
									"            \"relation_to_patient_name\": \"Private Practice Group\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"9ec6d8d2-3380-b71c-6dd3-fce47c93d2ac\",",
									"            \"relation_to_patient_name\": \"Psychiatrist\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"f25bec33-0413-a1c6-cae5-ad26805a63ef\",",
									"            \"relation_to_patient_name\": \"Psychologist\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"2b338809-a664-9fee-7fcc-5699d9d35ba0\",",
									"            \"relation_to_patient_name\": \"Social Worker\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"cc76b018-1eac-4ef9-4787-580504a16105\",",
									"            \"relation_to_patient_name\": \"Treatment Center\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"2be675ed-2e3a-b2bc-22cc-39a252d2e238\",",
									"            \"relation_to_patient_name\": \"Community org\\/non-profit\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"6dd40af4-2161-d67a-09bd-ad30dbcbdd8d\",",
									"            \"relation_to_patient_name\": \"Dietician\"",
									"        },",
									"        {",
									"            \"relation_to_patient_external_id\": \"f05ba32a-f88b-1cd2-8b00-3638c3417e47\",",
									"            \"relation_to_patient_name\": \"Other\"",
									"        }];",
									"}",
									"",
									"let random_relation_with_patient = ld.sample(relationWithPatientList);",
									"let relation_to_patient_id = random_relation_with_patient.relation_to_patient_external_id;",
									"let relation_to_patient_name = random_relation_with_patient.relation_to_patient_name;",
									"",
									"let age = ld.random(1, 18);",
									"let dob = moment().subtract(age, 'years').format('MM/DD/YYYY');",
									"",
									"let referrerFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let referrerLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"pm.environment.set(\"referrerFirstName\", referrerFirstName);",
									"pm.environment.set(\"referrerLastName\", referrerLastName);",
									"pm.environment.set(\"referrerEmail\", \"qa\" + \"+\" + referrerFirstName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"referrerMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"referrerPhone\", \"+1 (122) 222-2222\");",
									"",
									"let patientFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let patientLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"pm.environment.set(\"patientFirstName\", patientFirstName);",
									"pm.environment.set(\"patientLastName\", patientLastName);",
									"pm.environment.set(\"patientEmail\", \"qa\" + \"+\" + patientFirstName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"contactPatientDirectly\", \"Carer\");",
									"// pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", age);",
									"",
									"let carerName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"pm.environment.set(\"carerName\", carerName);",
									"pm.environment.set(\"carerMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"carerPhone\", \"+1 (333) 333-3333\");",
									"pm.environment.set(\"carerEmail\", \"qa\" + \"+\" + carerName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"informationSource\", ld.sample(informationSourceList));",
									"pm.environment.set(\"affiliationCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"affiliationState\", ld.sample(statesList));",
									"pm.environment.set(\"relationWithPatientId\", relation_to_patient_id);",
									"pm.environment.set(\"relationWithPatientName\", relation_to_patient_name);",
									"",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b98d5a1f-f413-43dc-924d-e77fa2b8cdb8",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify referralExternalId is generated\", function () {",
									"    pm.expect(jsonData.referralExternalId).length.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"referralExternalId\", jsonData.referralExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "187bd94f-6a16-42c4-9c7d-fb321dccab41",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"referrerFirstName\": \"{{referrerFirstName}}\",\n    \"referrerLastName\": \"{{referrerLastName}}\",\n    \"referrerPhone\": \"{{referrerPhone}}\",\n    \"referrerMobile\": \"{{referrerMobile}}\",\n    \"referrerEmail\": \"{{referrerEmail}}\",\n    \"relationWithPatient\": \"{{relationWithPatientName}}\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientAge\": {{patientAge}},\n    \"patientPhone\": \"\",\n    \"patientMobile\": \"\",\n    \"patientEmail\": \"\",\n    \"patientPreferredContact\": \"\",\n    \"contactPatientDirectly\": \"No\",\n    \"carerName\": \"{{carerName}}\",\n    \"carerPhone\": \"{{carerPhone}}\",\n    \"carerMobile\": \"{{carerMobile}}\",\n    \"carerEmail\": \"{{carerEmail}}\",\n    \"carerPreferredContact\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"{{informationSource}}\",\n    \"affiliationList\": [\n        {\n            \"name\": \"Google inc. india pvt ltd\",\n            \"latitude\": \"2\",\n            \"longitude\": \"3\",\n            \"addressLine1\": \"111 8th Ave\",\n            \"addressLine2\": \"APT 1074\",\n            \"city\": \"{{affiliationCity}}\",\n            \"state\": \"{{affiliationState}}\",\n            \"zipCode\": \"85283\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-referral",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-referral"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get patient details from carer referral task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8010cb06-c234-40d4-a25c-55360697b41c",
								"exec": [
									"let moment = require('moment');",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"let expectedResponse = {",
									"    \"data\": [",
									"        {",
									"            \"dateOfBirth\": moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'),",
									"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
									"            \"lastName\": pm.environment.get(\"patientLastName\"),",
									"            \"age\": pm.environment.get(\"patientAge\"),",
									"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
									"            \"state\": pm.environment.get(\"patientState\"),",
									"            \"type\": \"Referral\",",
									"            \"contactReferral\": {",
									"                \"firstName\": pm.environment.get(\"referrerFirstName\"),",
									"                \"lastName\": pm.environment.get(\"referrerLastName\"),",
									"                \"email\": pm.environment.get(\"referrerEmail\"),",
									"                \"phoneNumber\": pm.environment.get(\"referrerPhone\"),",
									"                \"mobileNumber\": pm.environment.get(\"referrerMobile\"),",
									"                \"relationWithPatient\": pm.environment.get(\"relationWithPatientName\")",
									"            },",
									"            \"referralAffiliation\": {",
									"                \"name\": \"Google inc. india pvt ltd\",",
									"                \"addressLine1\": \"111 8th Ave\",",
									"                \"addressLine2\": \"APT 1074\",",
									"                \"city\": pm.environment.get(\"affiliationCity\"),",
									"                \"state\": pm.environment.get(\"affiliationState\"),",
									"                \"zipCode\": \"85283\"",
									"            },",
									"            \"contactPrimary\": {",
									"                \"email\": pm.environment.get(\"carerEmail\"),",
									"                \"phoneNumber\": \"+1 (333) 333-3333\",",
									"                \"mobileNumber\": \"+1 (207) 344-4381\"",
									"            },",
									"            \"informationSource\": pm.environment.get(\"informationSource\"),",
									"            \"contactPatientDirectly\": false,",
									"            \"inquiryDate\": moment().format('YYYY-MM-DD')",
									"        }",
									"    ],",
									"    \"count\": 1",
									"}",
									"",
									"pm.test(\"Verify patient details\", () => {",
									"    console.log(\"expected: \" + JSON.stringify(expectedResponse));",
									"    console.log(\"actual: \" + JSON.stringify(jsonData));",
									"    pm.expect(jsonData).to.eql(expectedResponse);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2f3cf89f-1a87-47a4-8b02-2c7715ca8028",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0ac76830-f875-4419-ad1d-4647278e8d5c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/inquiry-referral/patients?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"patients"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "9b333ed6-36b3-4d3c-8f3b-edcaf9b29e39"
		},
		{
			"name": "AddInquiryReferral",
			"item": [
				{
					"name": "equip-source",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f5a787c-d8fa-4255-9e4f-b084fd272593",
								"exec": [
									"var EquipSource;",
									"if(pm.environment.name === \"qa\"){",
									"        EquipSource = [",
									"        {",
									"            \"sourceExternalId\": \"1837b9e7-b4a1-5d7e-ba16-20ed3399eece\",",
									"            \"sourceName\": \"Colleague (please specify)\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"94ec1d36-86a5-9154-ed66-4a2ec588b167\",",
									"            \"sourceName\": \"Conference (please specify)\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"b0548d60-6706-66f4-39ce-64244ac9b488\",",
									"            \"sourceName\": \"Dietitian\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\",",
									"            \"sourceName\": \"Doctor/clinician\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\",",
									"            \"sourceName\": \"Eating disorder organization\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"03b05531-9533-334c-18cf-788ef65a54f2\",",
									"            \"sourceName\": \"Equip employee\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\",",
									"            \"sourceName\": \"Equip event/webinar\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\",",
									"            \"sourceName\": \"Equip patient/family\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\",",
									"            \"sourceName\": \"Friend or family member\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\",",
									"            \"sourceName\": \"Google/search\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\",",
									"            \"sourceName\": \"Hospital/medical center\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\",",
									"            \"sourceName\": \"Insurance/Health Plan\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"c51e0ae2-d6c7-1668-ae56-23b2e851831a\",",
									"            \"sourceName\": \"Networking event\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"f5968f05-8073-23e5-2e70-343d65100791\",",
									"            \"sourceName\": \"Newsletter\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\",",
									"            \"sourceName\": \"Other (please specify)\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\",",
									"            \"sourceName\": \"Press\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\",",
									"            \"sourceName\": \"School\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\",",
									"            \"sourceName\": \"Social media\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"5f071189-39a2-4546-98a5-dff2df41e804\",",
									"            \"sourceName\": \"Speaking engagement/webinar\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\",",
									"            \"sourceName\": \"Therapist\"",
									"        }",
									"    ];",
									"}",
									"",
									"else if(pm.environment.name === \"dev\"){",
									"        EquipSource = [",
									"        {",
									"            \"sourceExternalId\": \"2a9048ef-84df-5c98-8f21-d2cddf13b09e\",",
									"            \"sourceName\": \"Colleague (please specify)\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"084a0995-4e24-5a16-abc3-bb9c08c587ea\",",
									"            \"sourceName\": \"Conference (please specify)\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"78b47636-5172-758f-8385-9725544f1a27\",",
									"            \"sourceName\": \"Dietitian\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\",",
									"            \"sourceName\": \"Doctor/clinician\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\",",
									"            \"sourceName\": \"Eating disorder organization\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\",",
									"            \"sourceName\": \"Equip employee\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"be509e34-811d-708a-00cd-9b13e21f984b\",",
									"            \"sourceName\": \"Equip event/webinar\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\",",
									"            \"sourceName\": \"Equip patient/family\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\",",
									"            \"sourceName\": \"Friend or family member\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"a0824f84-d5bd-3785-371a-73259f0845f3\",",
									"            \"sourceName\": \"Google/search\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\",",
									"            \"sourceName\": \"Hospital/medical center\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"79673f1c-b875-2b44-25e0-70908d982fb4\",",
									"            \"sourceName\": \"Insurance/Health Plan\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"30eb5807-d124-71f3-8c2b-b291dfada068\",",
									"            \"sourceName\": \"Networking event\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"acd544bc-263c-8e0e-3956-65731516d082\",",
									"            \"sourceName\": \"Newsletter\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\",",
									"            \"sourceName\": \"Other (please specify)\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\",",
									"            \"sourceName\": \"Press\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\",",
									"            \"sourceName\": \"School\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\",",
									"            \"sourceName\": \"Social media\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"bf5f8480-1e2c-0aad-a106-ce17ddc4207b\",",
									"            \"sourceName\": \"Speaking engagement/webinar\"",
									"        },",
									"        {",
									"            \"sourceExternalId\": \"de8df45c-0565-a59c-2623-994ee857e4a3\",",
									"            \"sourceName\": \"Therapist\"",
									"        }",
									"    ]",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Validate Equip source values\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.eql(EquipSource);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c86dfe56-ae71-4e1a-87d7-682950089995",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/equip-source",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"equip-source"
							]
						}
					},
					"response": []
				},
				{
					"name": "relation-to-patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1b32defc-b7ee-4b35-bf95-075232f49685",
								"exec": [
									"var EquipSource;",
									"if (pm.environment.name === \"qa\") {",
									"    EquipSource = [",
									"        {",
									"            \"relationToPatientExternalId\": \"c6de3e24-ea3d-bc62-cd2a-74c8a59c4aab\",",
									"            \"relationToPatientName\": \"Case Manager/Discharge Planner\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"c1e4cb13-1496-b098-a096-bb45f79fdea6\",",
									"            \"relationToPatientName\": \"Community org/non-profit\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Another professional\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"5ea4d915-e213-4c37-564d-a80f666175a9\",",
									"            \"relationToPatientName\": \"Community professional\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Another professional\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"4b0a79ee-c9c4-20b2-1d85-4f9e086f7676\",",
									"            \"relationToPatientName\": \"Dietitian\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"ab3a2cf8-3eae-c762-418f-ccc199704933\",",
									"            \"relationToPatientName\": \"Eating disorder coach/advocate\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"dca82d60-8746-7c2d-3d7c-bafb8e22e74e\",",
									"            \"relationToPatientName\": \"Executive\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Another professional\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"7cfbe517-9ebd-8043-fce6-0b4640623acd\",",
									"            \"relationToPatientName\": \"Family member\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"3bdd0091-7c50-9e75-ccff-7bcbe61beb87\",",
									"            \"relationToPatientName\": \"Father\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"ebfd3cd6-7da2-d307-4b71-42297d45377f\",",
									"            \"relationToPatientName\": \"Friend\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"0bf5769e-8168-da26-aade-1b9ce84d2fb2\",",
									"            \"relationToPatientName\": \"Grandparent\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"6a733d23-8003-2289-f318-f0c52465e824\",",
									"            \"relationToPatientName\": \"Guardian\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"52babb16-0941-adb9-7804-9e69f24761bf\",",
									"            \"relationToPatientName\": \"Insurance Company\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Health plan employee\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"fa0ea802-5189-a91e-cfc9-4454e3ed744f\",",
									"            \"relationToPatientName\": \"Mother\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"22f3dec7-8c34-b796-7da4-076118f71b9b\",",
									"            \"relationToPatientName\": \"Nurse\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"4a42fd97-f523-a2f3-c94c-31de3ca25ef8\",",
									"            \"relationToPatientName\": \"Nurse Practitioner\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"4f31a861-2110-16ce-61ad-2e9b02b1e93d\",",
									"            \"relationToPatientName\": \"Other\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Another professional\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"1ed3fb80-d943-0912-270c-f3c51eb9efe9\",",
									"            \"relationToPatientName\": \"Other\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"dba361c6-4933-d154-25df-b14de6156759\",",
									"            \"relationToPatientName\": \"Outreach Professional\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Another professional\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"e77ad344-db8d-1b43-cfe9-1826f5afff48\",",
									"            \"relationToPatientName\": \"Parent (non-binary)\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"4f8016e7-8adb-635f-026e-46796e228c8a\",",
									"            \"relationToPatientName\": \"Payor Case Manager\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Health plan employee\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"8e8f8ce7-2fa6-845f-12ef-bacd62284944\",",
									"            \"relationToPatientName\": \"Physician Assistant\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"f439e154-338e-1389-bea3-4ac58fab604f\",",
									"            \"relationToPatientName\": \"Physician: Adolescent Medicine/Eating Disorder Specialist\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"1fdf5db7-10d9-349b-9ed4-031931c5beec\",",
									"            \"relationToPatientName\": \"Physician: Endocrinologist\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"f024aa10-14e2-d7f8-1cdd-9f3486eb8eb3\",",
									"            \"relationToPatientName\": \"Physician: Family Medicine\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"789805ac-3642-bf50-4f27-0df7df0ec8be\",",
									"            \"relationToPatientName\": \"Physician: Gastroenterologist\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"34602475-953a-1f1f-db39-316abcdc600a\",",
									"            \"relationToPatientName\": \"Physician: Other specialist\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"13599a7c-e838-66bf-f735-fa887fb372a8\",",
									"            \"relationToPatientName\": \"Physician: PCP (non-peds)\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"6c0c081d-bc9c-7160-e3f2-a2f922e9df66\",",
									"            \"relationToPatientName\": \"Physician: Pediatrician\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"7bace5e4-5732-9987-44fc-0749fcb1fd04\",",
									"            \"relationToPatientName\": \"Practice Manager\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"0d8ead87-363c-585c-e3f2-baf51f48c08c\",",
									"            \"relationToPatientName\": \"Psychiatrist\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"373f1c7a-c72c-26c6-a265-366fe3ad93f2\",",
									"            \"relationToPatientName\": \"Psychologist\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"7863dffc-d0a0-0785-f372-260a6ba85439\",",
									"            \"relationToPatientName\": \"Referral Coordinator\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"3b52c19f-d44a-3c69-18c9-2fcc51feb399\",",
									"            \"relationToPatientName\": \"School nurse\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"8e14b767-5bdb-0a89-54a2-006831106fca\",",
									"            \"relationToPatientName\": \"School therapist/counselor\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"6dce37fd-eb49-dd09-895e-283d51abdf70\",",
									"            \"relationToPatientName\": \"Sibling\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"7af95950-506a-7ebe-933a-4ffba5985977\",",
									"            \"relationToPatientName\": \"Stepfather\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"aa5265eb-3e2f-a972-d46a-f948788a099d\",",
									"            \"relationToPatientName\": \"Stepmother\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"71c18c68-1816-dae9-618b-ee1516667c34\",",
									"            \"relationToPatientName\": \"Stepparent\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"14d3838f-5d32-2a79-9ba0-85d27b80884d\",",
									"            \"relationToPatientName\": \"Therapist\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        }",
									"    ]",
									"} else if (pm.environment.name === \"dev\") {",
									"    EquipSource = [",
									"        {",
									"            \"relationToPatientExternalId\": \"4bcb87fe-51a1-4f5f-7e8c-2c172b3ec4a2\",",
									"            \"relationToPatientName\": \"Case Manager/Discharge Planner\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"2be675ed-2e3a-b2bc-22cc-39a252d2e238\",",
									"            \"relationToPatientName\": \"Community org/non-profit\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Another professional\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"4d95a07a-d421-05dc-c4b9-6f6e0a9e597d\",",
									"            \"relationToPatientName\": \"Community professional\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Another professional\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"6dd40af4-2161-d67a-09bd-ad30dbcbdd8d\",",
									"            \"relationToPatientName\": \"Dietitian\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"1c6ac2ce-c622-ada4-9ac0-28ff9384cfc6\",",
									"            \"relationToPatientName\": \"Eating disorder coach/advocate\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"3dd2856b-dbcb-db54-b34d-d243e5f8538e\",",
									"            \"relationToPatientName\": \"Executive\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Another professional\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"a28eff86-b028-5e1d-d640-4bd6b316d9b0\",",
									"            \"relationToPatientName\": \"Family member\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"74958276-b67d-8619-134e-62c7336607b8\",",
									"            \"relationToPatientName\": \"Father\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"48a3e640-aed5-322f-e35a-da5e09c29f89\",",
									"            \"relationToPatientName\": \"Friend\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"f55b3fcc-7163-9a07-8684-55a79eaf7f0b\",",
									"            \"relationToPatientName\": \"Grandparent\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"382002db-c2e4-c905-7382-c53e25bbdd69\",",
									"            \"relationToPatientName\": \"Guardian\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"c98fe523-f401-6148-c9e8-c2f1553b9a18\",",
									"            \"relationToPatientName\": \"Insurance Company\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Health plan employee\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"d6c25ff9-943a-a000-016c-ab1d6c8de891\",",
									"            \"relationToPatientName\": \"Mother\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"b9daffad-8546-7d00-9836-ff6d38081e35\",",
									"            \"relationToPatientName\": \"Nurse\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"8a1ad552-d6ca-e319-c8f5-c2c3a9d15012\",",
									"            \"relationToPatientName\": \"Nurse Practitioner\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"0ea5d828-e6a0-7085-2576-21abcc2f1e0b\",",
									"            \"relationToPatientName\": \"Other\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"f05ba32a-f88b-1cd2-8b00-3638c3417e47\",",
									"            \"relationToPatientName\": \"Other\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Another professional\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"1f044c5a-25da-9ccc-6ed3-c276ed912bc7\",",
									"            \"relationToPatientName\": \"Outreach Professional\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Another professional\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"0f6deae9-66d7-aaf1-6a53-345c60559b31\",",
									"            \"relationToPatientName\": \"Parent (non-binary)\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"32bd614f-d85b-176b-c560-397be9022511\",",
									"            \"relationToPatientName\": \"Payor Case Manager\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Health plan employee\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"827c1f5a-124f-1437-9f98-7d830f847ba8\",",
									"            \"relationToPatientName\": \"Physician Assistant\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"da490458-1899-96fc-d123-762a65809298\",",
									"            \"relationToPatientName\": \"Physician: Adolescent Medicine/Eating Disorder Specialist\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"e37b142a-65b0-97f6-71ea-17e71d94db1e\",",
									"            \"relationToPatientName\": \"Physician: Endocrinologist\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"69c86b9e-5cc1-080e-5593-5de50d27d905\",",
									"            \"relationToPatientName\": \"Physician: Family Medicine\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"010c938a-2832-de7e-644b-4232b82b1ebb\",",
									"            \"relationToPatientName\": \"Physician: Gastroenterologist\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"24611126-3792-9958-565d-dbc920ac56c1\",",
									"            \"relationToPatientName\": \"Physician: Other specialist\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"d0792987-e1ae-de18-e781-ee0afe2e1e4b\",",
									"            \"relationToPatientName\": \"Physician: PCP (non-peds)\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"c1d1419e-4943-2c8f-db56-a113123190b0\",",
									"            \"relationToPatientName\": \"Physician: Pediatrician\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"5fd72daa-8549-b9c2-e2e0-450ec0a41bfe\",",
									"            \"relationToPatientName\": \"Practice Manager\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"9ec6d8d2-3380-b71c-6dd3-fce47c93d2ac\",",
									"            \"relationToPatientName\": \"Psychiatrist\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"f25bec33-0413-a1c6-cae5-ad26805a63ef\",",
									"            \"relationToPatientName\": \"Psychologist\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"8466d374-a912-5c23-4754-679a0bc9f000\",",
									"            \"relationToPatientName\": \"Referral Coordinator\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"69b6d4db-a758-d387-dfec-de518792041a\",",
									"            \"relationToPatientName\": \"School nurse\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"293da667-e057-880d-fb9f-163ff843b929\",",
									"            \"relationToPatientName\": \"School therapist/counselor\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"5daa524d-70a2-64bf-bdd8-1e5530beabf7\",",
									"            \"relationToPatientName\": \"Sibling\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"14d65313-fee5-a17b-3a84-d00f8ba89635\",",
									"            \"relationToPatientName\": \"Stepfather\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"65c9d284-775a-df8f-a383-f162bb5c2f13\",",
									"            \"relationToPatientName\": \"Stepmother\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"cb7aa563-4d6d-b169-f05b-739dbd0fb69b\",",
									"            \"relationToPatientName\": \"Stepparent\",",
									"            \"relationToPatientType\": \"inquiry\"",
									"        },",
									"        {",
									"            \"relationToPatientExternalId\": \"1cd2780c-1cc0-b433-a2cb-545891622b0d\",",
									"            \"relationToPatientName\": \"Therapist\",",
									"            \"relationToPatientType\": \"referral\",",
									"            \"subCategoryName\": \"Provider\"",
									"        }",
									"    ]",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Validate Equip source values\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.eql(EquipSource);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "41843c0d-abe3-4af8-8b14-c7f7632af06c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/relation-to-patient",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"relation-to-patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "information-source",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var EquipSource",
									"if(pm.environment.name === \"qa\"){",
									"    EquipSource = [",
									"        {",
									"            \"informationSourceExternalId\": \"90ca0f9c-b68e-10fd-a9ac-f11f6f7d9792\",",
									"            \"informationSourceName\": \"Chat\",",
									"            \"isActive\": true",
									"        },",
									"        {",
									"            \"informationSourceExternalId\": \"e4b7aa61-3e91-d01f-752c-0d48f8bbe944\",",
									"            \"informationSourceName\": \"Email\",",
									"            \"isActive\": true",
									"        },",
									"        {",
									"            \"informationSourceExternalId\": \"bc8e5dba-71af-ae05-022e-f6c0a62ebd08\",",
									"            \"informationSourceName\": \"Fax\",",
									"            \"isActive\": true",
									"        },",
									"        {",
									"            \"informationSourceExternalId\": \"e867d5b6-9669-dd3b-a363-2a6da828f4f9\",",
									"            \"informationSourceName\": \"In-person\",",
									"            \"isActive\": true",
									"        },",
									"        {",
									"            \"informationSourceExternalId\": \"b8c7554b-2e12-be51-541b-58b8d80e4e26\",",
									"            \"informationSourceName\": \"Live phone call\",",
									"            \"isActive\": true",
									"        },",
									"        {",
									"            \"informationSourceExternalId\": \"079519a1-f61e-eac1-f04c-ad327cc85432\",",
									"            \"informationSourceName\": \"Voicemail\",",
									"            \"isActive\": true",
									"        },",
									"        {",
									"            \"informationSourceExternalId\": \"d5e4f742-fc87-9c8b-5cf0-37168a312246\",",
									"            \"informationSourceName\": \"Webform\",",
									"            \"isActive\": true",
									"        }",
									"    ];",
									"}",
									"",
									"else if(pm.environment.name === \"dev\"){",
									"    EquipSource = [",
									"    {",
									"        \"informationSourceExternalId\": \"5a2db1c5-7cbd-3b37-026e-68e8ccdc5dec\",",
									"        \"informationSourceName\": \"Chat\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"informationSourceExternalId\": \"b9303077-1ecc-b7af-5904-66324be9b9af\",",
									"        \"informationSourceName\": \"Email\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"informationSourceExternalId\": \"81e560f8-73f0-0260-bb95-78c48e003964\",",
									"        \"informationSourceName\": \"Fax\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"informationSourceExternalId\": \"fb2ab49f-605f-9ec0-e1f8-d54661fae7d5\",",
									"        \"informationSourceName\": \"In-person\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"informationSourceExternalId\": \"0d7a96fa-3be7-0e5a-7852-320bc9e4b060\",",
									"        \"informationSourceName\": \"Live phone call\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"informationSourceExternalId\": \"82112298-3b20-1900-c329-86ee70a94ed2\",",
									"        \"informationSourceName\": \"Voicemail\",",
									"        \"isActive\": true",
									"    },",
									"    {",
									"        \"informationSourceExternalId\": \"9300f2b5-5bc0-a0a6-a923-5a4fdcbee6d5\",",
									"        \"informationSourceName\": \"Webform\",",
									"        \"isActive\": true",
									"    }",
									"]",
									"}",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Validate Equip source values\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.eql(EquipSource);",
									"});"
								],
								"type": "text/javascript",
								"id": "f539102a-d74a-45c5-a94e-ded28e3f75e1"
							}
						}
					],
					"id": "53459814-6cce-49ee-b843-820a083c611a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/information-sources",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"information-sources"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-inquiry-self",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78800be6-ba7c-4565-84b1-8db80c4f4ecf",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify inquiryExternalId is generated\", function () {",
									"    pm.expect(jsonData.inquiryExternalId).length.greaterThan(0);",
									"});",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"pm.environment.set(\"inquiryExternalId\", jsonData.inquiryExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7a61dd6d-0806-461c-8385-79c143b8072b",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let statesList = [\"Alaska\", \"Alabama\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"District of Columbia\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Puerto Rico\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\", \"Outside US\", \"Unknown\"];",
									"",
									"var equip_source;",
									"if (pm.environment.name === \"qa\") {",
									"    equip_source = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equip_source = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equip_source);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"let age = ld.random(6, 24);",
									"let dob = moment().subtract(age, 'years').format('YYYY-MM-DD');",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"///// get random date of birth (past date) /////",
									"// var end = new Date();",
									"// var start = new Date(1970, 1, 1);",
									"// var dob = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"// var month = (dob.getMonth() + 1) >= 10 ? dob.getMonth() + 1 : \"0\" + (dob.getMonth() + 1);",
									"// console.log(\"month: \" + month);",
									"// var day = (dob.getDate() + 1) > 10 ? dob.getDate() : \"0\" + dob.getDate();",
									"// var dob = dob.getFullYear() + '-' + month + '-' + day;",
									"// dob = dob;",
									"// console.log(dob);",
									"///// end - get random date of birth (past date) /////",
									"",
									"pm.environment.set(\"patientFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set(\"patientLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"patientEmail\", \"qa\" + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPreferredContact\", \"both\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"dob\", dob);",
									"pm.environment.set(\"age\", age);",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"",
									"//Referral information",
									"pm.environment.set(\"referrerFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set(\"referrerLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"raName\", \"Sam Adams Boston Taproom\");",
									"pm.environment.set(\"raLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"pm.environment.set(\"raLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"pm.environment.set(\"raAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"pm.environment.set(\"raAddressLine2\", \"Apt 2\");",
									"pm.environment.set(\"raCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"raState\", ld.sample(statesList));",
									"pm.environment.set(\"raZipCode\", zip.toString());",
									"",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4eee164d-89e6-4fe5-abd0-56f224315d58",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquirerFirstName\": \"\",\n    \"inquirerLastName\": \"\",\n    \"inquirerPhone\": \"\",\n    \"inquirerMobile\": \"\",\n    \"inquirerEmail\": \"\",\n    \"inquirerAbout\": \"myself\",\n    \"relationWithPatient\": \"\",\n    \"preferredContact\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{dob}}\",\n    \"patientAge\": {{age}},\n    \"patientPhone\": \"\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"{{patientEmail}}\",\n    \"patientPreferredContact\": \"{{patientPreferredContact}}\",\n    \"contactPatientDirectly\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\",\n    \"referrerFirstName\": \"{{referrerFirstName}}\",\n    \"referrerLastName\": \"{{referrerLastName}}\",\n    \"referrerAffiliation\": {\n        \"name\": \"{{raName}}\",\n        \"latitude\": {{raLatitude}},\n        \"longitude\": {{raLongitude}},\n        \"addressLine1\": \"{{raAddressLine1}}\",\n        \"addressLine2\": \"{{raAddressLine2}}\",\n        \"city\": \"{{raCity}}\",\n        \"state\": \"{{raState}}\",\n        \"zipCode\": \"{{raZipCode}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-inquiry",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f78306a7-7812-4b08-8af3-d37049bf07c2",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task name\", function () {\r",
									"    exp_task_title = \"Inquiry-\" + pm.variables.get(\"patientFirstName\") + \" \" + pm.variables.get(\"patientLastName\") + \"-\" + pm.variables.get(\"patientState\") + \"\";\r",
									"    console.log(\"exp_task_title: \" + exp_task_title);\r",
									"    pm.expect(jsonData.data[0].taskName).to.eql(exp_task_title);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task task_description\", function () {\r",
									"    var exp_task_desc = \"Inquiry type: myself\\nPatient first name: \" + pm.variables.get(\"patientFirstName\")\r",
									"        + \"\\nPatient last name: \" + pm.variables.get(\"patientLastName\")\r",
									"        + \"\\nPatient’s current state: \" + pm.variables.get(\"patientState\")\r",
									"        + \"\\nPatient’s age: \" + pm.variables.get(\"age\")\r",
									"        + \"\\nPatient’s DOB: \" + pm.variables.get(\"dob\")\r",
									"        + \"\\nPreferred contact method: \" + pm.variables.get(\"patientPreferredContact\")\r",
									"        + \"\\nMobile phone: \" + pm.variables.get(\"patientMobile\")\r",
									"        + \"\\nEmail: \" + pm.variables.get(\"patientEmail\")\r",
									"        + \"\\nAdditional notes: \" + pm.variables.get(\"AdditionalNotes\")\r",
									"        + \"\\nAnything else we should know? \" + pm.variables.get(\"tellUsMore\")\r",
									"        + \"\\nHow they heard about Equip: \" + pm.variables.get(\"equipSourceName\")\r",
									"        + \"\\nHow was this inquiry information gathered? Webform\"\r",
									"        + \"\\nSource first name: \" + pm.variables.get(\"referrerFirstName\")\r",
									"        + \"\\nSource last name: \" + pm.variables.get(\"referrerLastName\")\r",
									"        + \"\\nSource affiliation: \"\r",
									"        + pm.variables.get(\"raName\") + \", \"\r",
									"        + pm.variables.get(\"raAddressLine1\") + \", \"\r",
									"        + pm.variables.get(\"raAddressLine2\") + \", \"\r",
									"        + pm.variables.get(\"raCity\") + \", \"\r",
									"        + pm.variables.get(\"raState\") + \", \"\r",
									"        + pm.variables.get(\"raZipCode\") + \"\\n\";\r",
									"\r",
									"    console.log(\"exp_task_desc: \" + exp_task_desc);\r",
									"    console.log(\"act_task_desc: \" + jsonData.data[0].taskDescription);\r",
									"    pm.expect(jsonData.data[0].taskDescription).to.eql(exp_task_desc);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task is assigned\", function () {\r",
									"    pm.expect(jsonData.data[0].assignee.externalId).to.eql(pm.variables.get(\"assigneeUserId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task not linked to any patient\", function () {\r",
									"    let keys = Object.keys(jsonData.data[0]);\r",
									"    pm.expect(keys).to.not.include(\"patient\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task task_due_date\", function () {\r",
									"\r",
									"    var d = new Date();\r",
									"    d.setDate(d.getDate());\r",
									"    console.log(d);\r",
									"    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r",
									"    var day = days[d.getDay()];\r",
									"    console.log(day);\r",
									"    var days_to_add = 2;\r",
									"    if (day.localeCompare(\"Thursday\") == 0 || day.localeCompare(\"Friday\") == 0) {\r",
									"        days_to_add = days_to_add + 2;\r",
									"    } else if (day.localeCompare(\"Saturday\") == 0 || day.localeCompare(\"Sunday\") == 0) {\r",
									"        days_to_add = days_to_add + 1;\r",
									"    }\r",
									"    console.log(days_to_add);\r",
									"    d.setDate(d.getDate() + days_to_add);\r",
									"    console.log(d);\r",
									"    var d3 = d.toISOString().slice(0, 10);\r",
									"    d = d3.split(\"T\")[0];\r",
									"    pm.expect(jsonData.data[0].taskDueDate).to.contains(d);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task priority is high\", function () {\r",
									"    pm.expect(jsonData.data[0].taskPriorityId).to.eql(3);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task status is to-do\", function () {\r",
									"    pm.expect(jsonData.data[0].status.taskStatusId).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task category is Inquiry\", function () {\r",
									"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Inquiry\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task sub-category is Inbound outreach\", function () {\r",
									"    pm.expect(jsonData.data[0].subCategory.categoryName).to.eql(\"Inbound outreach\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "297cad20-37d0-4a62-b2ab-c141b9a87e9d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3eeba14a-734d-425c-bef8-41b96548b695",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"composition",
								"tasks"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Inquiry - Self",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14c77ab8-a6df-4581-8061-4d111232eea4",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 4000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquiry external id\", function () {\r",
									"    pm.expect(jsonData.inquiryExternalId).to.eql(pm.environment.get(\"inquiryExternalId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquiry task ext id\", function () {\r",
									"    pm.expect(jsonData.taskExternalId).to.eql(pm.environment.get(\"taskExternalId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquirer first name\", function () {\r",
									"    pm.expect(jsonData.inquirerFirstName).to.eql(pm.environment.get(\"patientFirstName\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquirer first name\", function () {\r",
									"    pm.expect(jsonData.inquirerLastName).to.eql(pm.environment.get(\"patientLastName\"));\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify inquirer phone number\", function () {\r",
									"//     pm.expect(jsonData.inquirerPhone).to.eql(pm.environment.get(\"patientMobile\"));\r",
									"// });\r",
									"\r",
									"pm.test(\"Verify inquirer mobile number\", function () {\r",
									"    pm.expect(jsonData.inquirerMobile).to.eql(pm.environment.get(\"patientMobile\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquirer Email\", function () {\r",
									"    pm.expect(jsonData.inquirerEmail).to.eql(pm.environment.get(\"patientEmail\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquirer preferredContact\", function () {\r",
									"    pm.expect(jsonData.preferredContact).to.eql(\"both\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "68c5e7fb-7e77-4b65-8119-ee160f15551b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ec045866-1407-41dd-8575-08c087a7287a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/{{inquiryExternalId}}?type=inquiry",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"{{inquiryExternalId}}"
							],
							"query": [
								{
									"key": "type",
									"value": "inquiry"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add-inquiry-self with Payor",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5c96c183-50d8-421f-8aff-4f23b7178990",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let states = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
									"",
									"var equip_source;",
									"if (pm.environment.name === \"qa\") {",
									"    equip_source = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equip_source = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equip_source);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"const payor_names = [",
									"    \"AIDS Healthcare Foundation\",",
									"    \"ATRIO Health Plans\",",
									"    \"Aetna\",",
									"    \"Affinity Health Plan\",",
									"    \"AgeRight Advantage Health Plan\",",
									"    \"AgeWell New York\",",
									"    \"Alameda Alliance for Health\",",
									"    \"Alignment Health Plan\",",
									"    \"AllCare IPA, fka Mid Rogue IPA HealthPlan\",",
									"    \"AltaMed PACE\",",
									"    \"AmeriHealth Insurance Company of New Jersey (AmeriHealth) and AmeriHealth HMO, Inc.\",",
									"    \"Amida Care\",",
									"    \"Anthem, Inc.\",",
									"    \"Arkansas Blue Cross and Blue Shield\",",
									"    \"Aspire Health Plan\",",
									"    \"Asuris Northwest Health\",",
									"    \"Atlanticare LIFE Connection\",",
									"    \"Auxilio Salud Plus\",",
									"    \"Avera Health Plans, Inc.\",",
									"    \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\",",
									"    \"Bienvivir Senior Health Services\",",
									"    \"Blue Cross Blue Shield of Michigan\",",
									"    \"Blue Cross and Blue Shield of Alabama\",",
									"    \"Blue Cross and Blue Shield of Illinois\",",
									"    \"Blue Cross and Blue Shield of Montana\",",
									"    \"Blue Cross and Blue Shield of New Mexico\",",
									"    \"Blue Cross and Blue Shield of Texas\",",
									"    \"Blue Shield of California\",",
									"    \"BlueCross BlueShield of Tennessee\",",
									"    \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\",",
									"    \"Brand New Day\",",
									"    \"Brandman Centers for Senior Care (BCSC)\",",
									"    \"BridgeSpan Health Company\",",
									"    \"Bright Health\",",
									"    \"CHRISTUS Health Plan\",",
									"    \"CalOptima\",",
									"    \"CalViva Health\",",
									"    \"Capital District Physicians' Health Plan, Inc. (CDPHP)\",",
									"    \"Care N' Care Health Plan\",",
									"    \"CareFirst BCBS\",",
									"    \"CareOregon\",",
									"    \"Cascade Health Alliance, LLC\",",
									"    \"Catholic Health LIFE\",",
									"    \"CenCal Health\",",
									"    \"Centene Corporation\",",
									"    \"Center for Elders Independence\",",
									"    \"CenterLight Healthcare\",",
									"    \"Centers Plan for Healthy Living (CPHL)\",",
									"    \"Centers for Medicare & Medicaid Services (CMS)\",",
									"    \"Central California Alliance for Health\",",
									"    \"Central Health Plan of California, Inc.\",",
									"    \"Chinese Community Health Plan\",",
									"    \"Cigna Corporation\",",
									"    \"Clover Health\",",
									"    \"Community Care Health Plan\",",
									"    \"Community First Health Plans\",",
									"    \"Community Health Choice, Inc. (CHC)\",",
									"    \"Community Health Group\",",
									"    \"Community Health Plan of Washington (CHPW)\",",
									"    \"Complete Senior Care\",",
									"    \"ConnectiCare, Inc.\",",
									"    \"Consolidated Association of Railroad Employees Health Care (CARE)\",",
									"    \"Contra Costa Health Plan\",",
									"    \"Cook Children's Health Plan (CCHP)\",",
									"    \"Crystal Run Health Plans\",",
									"    \"DAKOTACARE\",",
									"    \"Devoted Health\",",
									"    \"Driscoll Health Plan\",",
									"    \"EMI Health\",",
									"    \"Eddy SeniorCare\",",
									"    \"El Paso First Health Plans\",",
									"    \"ElderONE\",",
									"    \"Elderplan, Inc.\",",
									"    \"Excellus BlueCross BlueShield\",",
									"    \"Fallon Health\",",
									"    \"FamilyHealth Center for Older Adults (PACE)\",",
									"    \"First Medical Health Plan, Inc.\",",
									"    \"FirstCare Health Plans\",",
									"    \"Fresno PACE for Seniors\",",
									"    \"GHI, an EmblemHealth Company\",",
									"    \"Gary and Mary West PACE\",",
									"    \"Geisinger Health Plan\",",
									"    \"Gold Coast Health Plan\",",
									"    \"Golden State Medicare Health Plan\",",
									"    \"HIP, an EmblemHealth Company\",",
									"    \"Health Alliance (fka Health Alliance Medical Plans, Inc.)\",",
									"    \"Health New England, Inc.\",",
									"    \"Health Plan of San Joaquin\",",
									"    \"Health Plan of San Mateo\",",
									"    \"Healthfirst\",",
									"    \"Highmark BCBS\",",
									"    \"Highmark Health\",",
									"    \"Horizon Blue Cross Blue Shield of New Jersey\",",
									"    \"Humana Inc.\",",
									"    \"ICHS PACE\",",
									"    \"Imperial Health Plan\",",
									"    \"Independence Blue Cross, LLC (Independence)\",",
									"    \"Independent Health Association, Inc.\",",
									"    \"Inland Empire Health Plan\",",
									"    \"InnovAge\",",
									"    \"InnovaCare Health Solutions\",",
									"    \"Inspira LIFE\",",
									"    \"Inter Valley Health Plan\",",
									"    \"Kaiser Foundation Health Plan of Washington\",",
									"    \"Kaiser Foundation Health Plan of the Northwest, Inc.\",",
									"    \"Kaiser Foundation Health Plan, Inc.\",",
									"    \"Kaiser Foundation Health Plan, Inc.- Other\",",
									"    \"Kaiser Foundation Health Plan, Inc.- SoCal\",",
									"    \"Kalos Health\",",
									"    \"KelseyCare Advantage\",",
									"    \"Kern Health Systems, Inc.\",",
									"    \"L.A. Care Health Plan\",",
									"    \"LIFE St. Francis\",",
									"    \"LIFE at Lourdes, Inc.\",",
									"    \"Lasso Healthcare\",",
									"    \"LifeWise Health Plan of Washington\",",
									"    \"Longevity Health Plan\",",
									"    \"Lutheran Senior LIFE at Jersey City\",",
									"    \"MAPFRE Puerto Rico\",",
									"    \"MVP Health Care\",",
									"    \"Magellan\",",
									"    \"MediExcel Health Plan\",",
									"    \"Medicaid\",",
									"    \"Medical Card System, Inc.\",",
									"    \"Medicare\",",
									"    \"Memorial Hermann Health Insurance Company\",",
									"    \"MetroPlus Health Plan, Inc.\",",
									"    \"Moda Health\",",
									"    \"Molina Healthcare\",",
									"    \"Mutual of Omaha Insurance Company\",",
									"    \"NY Hotel Trades Council & Hotel Association of NYC\",",
									"    \"No Insurance\",",
									"    \"On Lok Lifeways\",",
									"    \"Optum\",",
									"    \"Oscar Insurance Corporation\",",
									"    \"Other\",",
									"    \"PACE CNY\",",
									"    \"PacificSource Health Plans\",",
									"    \"Parkland Community Health Plan\",",
									"    \"Partners Health Plan\",",
									"    \"Partnership HealthPlan of California\",",
									"    \"Physicians Health Plan of Northern Indiana, Inc.\",",
									"    \"Piedmont Community Health Plan\",",
									"    \"Plan Medico Bella Vista\",",
									"    \"Plan de Salud Menonita\",",
									"    \"Premera Blue Cross\",",
									"    \"Priority Health\",",
									"    \"Private Pay\",",
									"    \"ProCare Advantage\",",
									"    \"Prominence Health Plan\",",
									"    \"Providence Health Plan\",",
									"    \"Redwood Coast PACE\",",
									"    \"Regence BlueCross BlueShield of Oregon\",",
									"    \"Regence BlueShield\",",
									"    \"Regence BlueShield of Idaho\",",
									"    \"RiverSpring Health\",",
									"    \"Ryder Health Plan, Inc.\",",
									"    \"SCAN Health Plan\",",
									"    \"SIHO Holding, LLC dba SIHO Insurance Services\",",
									"    \"SIMNSA Health Plan\",",
									"    \"Samaritan Health Plans\",",
									"    \"San Diego PACE\",",
									"    \"San Francisco Health Plan (SFHP)\",",
									"    \"Santa Clara County dba Valley Health Plan\",",
									"    \"Santa Clara Family Health Plan\",",
									"    \"Santa Fe Employe's Hospital Association-Coast Lines\",",
									"    \"Scott & White Health Plan\",",
									"    \"Scripps Health Plan\",",
									"    \"Seaside Health Plan\",",
									"    \"Sendero Health Plan\",",
									"    \"Senior Whole Health\",",
									"    \"Sentara Health Plans, Inc. (fka Optima Health)\",",
									"    \"Seton Health Plan (dba Dell Children's Health Plan)\",",
									"    \"Sharp Health Plan\",",
									"    \"Silver Star Health Network\",",
									"    \"St. Paul's PACE\",",
									"    \"Stanford Health Care Advantage\",",
									"    \"State of California\",",
									"    \"State of New Jersey\",",
									"    \"State of New York\",",
									"    \"State of Oregon\",",
									"    \"State of Texas\",",
									"    \"State of Washington\",",
									"    \"Stockton PACE\",",
									"    \"Sunrise Advantage Plan\",",
									"    \"Sutter Health Plus\",",
									"    \"Sutter SeniorCare\",",
									"    \"Texas Children's Health Plan\",",
									"    \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\",",
									"    \"Total Senior Care, Inc.\",",
									"    \"Triple-S Management Corporation\",",
									"    \"True Health New Mexico\",",
									"    \"Umpqua Health Alliance\",",
									"    \"Union Pacific Railroad Employes Health Systems (UPREHS)\",",
									"    \"UnitedHealthcare\",",
									"    \"Univera Healthcare\",",
									"    \"VNSNY CHOICE\",",
									"    \"VillageCareMAX\",",
									"    \"Vitality Health Plan of California\",",
									"    \"WellCare Health Plans, Inc.\",",
									"    \"Western Health Advantage\",",
									"    \"Western Oregon Advanced Health, LLC\",",
									"    \"Yamhill Community Care Organization\"",
									"];",
									"",
									"let age = ld.random(6, 24);",
									"let dob = moment().subtract(age, 'years').format('YYYY-MM-DD');",
									"",
									"pm.environment.set(\"patientFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set(\"patientLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"patientEmail\", \"qa\" + \"+\"+Date.now() + \"@equip.health\");",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPreferredContact\", \"both\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"dob\", dob);",
									"pm.environment.set(\"age\", age);",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"patientState\", ld.sample(states));",
									"pm.environment.set(\"payorName\", ld.sample(payor_names));",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0b1b8482-6f6b-4cbb-89f1-3592e35ea34e",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify inquiryExternalId is generated\", function () {",
									"    pm.expect(jsonData.inquiryExternalId).length.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"inquiryExternalId\", jsonData.inquiryExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f5a5f4a3-4363-4c74-96e0-499300fed048",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquirerFirstName\": \"\",\n    \"inquirerLastName\": \"\",\n    \"inquirerPhone\": \"\",\n    \"inquirerMobile\": \"\",\n    \"inquirerEmail\": \"\",\n    \"inquirerAbout\": \"myself\",\n    \"relationWithPatient\": \"\",\n    \"preferredContact\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{dob}}\",\n    \"patientAge\": {{age}},\n    \"patientPhone\": \"\",\n    \"payor\": \"{{payorName}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"{{patientEmail}}\",\n    \"patientPreferredContact\": \"{{patientPreferredContact}}\",\n    \"contactPatientDirectly\": \"\",\n    \"tellUsMore\" : \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-inquiry",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4810bfc4-c2c0-488a-91c8-7d6581b016af",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task name\", function () {\r",
									"    exp_task_title = \"Inquiry-\" + pm.variables.get(\"patientFirstName\") + \" \" + pm.variables.get(\"patientLastName\") + \"-\" + pm.variables.get(\"patientState\") + \"-\" + pm.variables.get(\"payorName\") + \"\";\r",
									"    console.log(\"exp_task_title: \" + exp_task_title);\r",
									"    pm.expect(jsonData.data[0].taskName).to.eql(exp_task_title);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task task_description\", function () {\r",
									"    var exp_task_desc = \"Inquiry type: myself\\nPatient first name: \" + pm.variables.get(\"patientFirstName\") + \"\\nPatient last name: \" + pm.variables.get(\"patientLastName\") + \"\\nPatient’s current state: \" + pm.variables.get(\"patientState\") + \"\\nPatient’s age: \" + pm.variables.get(\"age\") + \"\\nPatient’s DOB: \" + pm.variables.get(\"dob\") + \"\\nPreferred contact method: \" + pm.variables.get(\"patientPreferredContact\") + \"\\nMobile phone: \" + pm.variables.get(\"patientMobile\") + \"\\nEmail: \" + pm.variables.get(\"patientEmail\") + \"\\nAdditional notes: \" + pm.variables.get(\"AdditionalNotes\") + \"\\nAnything else we should know? \" + pm.variables.get(\"tellUsMore\") + \"\\nHow they heard about Equip: \" + pm.variables.get(\"equipSourceName\") + \"\\nPayor: \" + pm.variables.get(\"payorName\") + \"\\nHow was this inquiry information gathered? Webform\" + \"\\n\";\r",
									"    console.log(\"exp_task_desc: \" + exp_task_desc);\r",
									"    console.log(\"act_task_desc: \" + jsonData.taskDescription);\r",
									"    pm.expect(jsonData.data[0].taskDescription).to.eql(exp_task_desc);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task is not assigned\", function () {\r",
									"    let keys = Object.keys(jsonData.data[0].assignee);\r",
									"    pm.expect(keys).to.not.include(\"externalId\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task not linked to any patient\", function () {\r",
									"    let keys = Object.keys(jsonData.data[0]);\r",
									"    pm.expect(keys).to.not.include(\"patient\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task task_due_date\", function () {\r",
									"\r",
									"    var d = new Date();\r",
									"    d.setDate(d.getDate());\r",
									"    console.log(d);\r",
									"    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r",
									"    var day = days[d.getDay()];\r",
									"    console.log(day);\r",
									"    var days_to_add = 2;\r",
									"    if (day.localeCompare(\"Thursday\") == 0 || day.localeCompare(\"Friday\") == 0) {\r",
									"        days_to_add = days_to_add + 2;\r",
									"    } else if (day.localeCompare(\"Saturday\") == 0 || day.localeCompare(\"Sunday\") == 0) {\r",
									"        days_to_add = days_to_add + 1;\r",
									"    }\r",
									"    console.log(days_to_add);\r",
									"    d.setDate(d.getDate() + days_to_add);\r",
									"    console.log(d);\r",
									"    var d3 = d.toISOString().slice(0, 10);\r",
									"    d = d3.split(\"T\")[0];\r",
									"    pm.expect(jsonData.data[0].taskDueDate).to.contains(d);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task priority is high\", function () {\r",
									"    pm.expect(jsonData.data[0].taskPriorityId).to.eql(3);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task status is to-do\", function () {\r",
									"    pm.expect(jsonData.data[0].status.taskStatusId).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task category is Inquiry\", function () {\r",
									"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Inquiry\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task sub-category is Inbound outreach\", function () {\r",
									"    pm.expect(jsonData.data[0].subCategory.categoryName).to.eql(\"Inbound outreach\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b37188c8-1ece-4777-83e0-f76c3782dcca",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "583e8068-08d1-4ad6-bdd3-e994aa39c48b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"composition",
								"tasks"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add-inquiry-someone",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "999afead-38b6-4be2-84a9-0584a1578141",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"var start = new Date(2022, 1, 1);",
									"var end = new Date();",
									"var inquiryreferral_create_date_time = new Date(end.getTime() + Math.random() * (start.getTime() - end.getTime()));",
									"var month = (inquiryreferral_create_date_time.getMonth() + 1) >= 10 ? inquiryreferral_create_date_time.getMonth() + 1 : \"0\" + (inquiryreferral_create_date_time.getMonth() + 1);",
									"console.log(\"month: \" + month);",
									"var day = (inquiryreferral_create_date_time.getDate() + 1) > 10 ? inquiryreferral_create_date_time.getDate() : \"0\" + inquiryreferral_create_date_time.getDate();",
									"var inquiryreferral_create_date_time = inquiryreferral_create_date_time.getFullYear() + '-' + month + '-' + day;",
									"inquiryreferral_create_date_time = inquiryreferral_create_date_time + \"T23:59:59.999-0000\";",
									"",
									"let states = [\"Alaska\", \"Alabama\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"District of Columbia\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Puerto Rico\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\", \"Outside US\", \"Unknown\"];",
									"",
									"var equip_source;",
									"if (pm.environment.name === \"qa\") {",
									"    equip_source = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equip_source = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equip_source);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"const relation = [\"Mother\", \"Father\", \"Parent (non-binary)\", \"Friend\", \"Family member\", \"Other\", \"Guardian\", \"Sibling\", \"Stepparent\", \"Stepmother\", \"Stepfather\", \"Grandparent\"];",
									"",
									"const information_source = [",
									"    \"Chat\",",
									"    \"Email\",",
									"    \"Fax\",",
									"    \"In-person\",",
									"    \"Live phone call\",",
									"    \"Voicemail\"",
									"]",
									"",
									"let age = ld.random(6, 24);",
									"let dob = moment().subtract(age, 'years').format('YYYY-MM-DD');",
									"",
									"pm.environment.set(\"inquirerFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set(\"inquirerLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"patientFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set(\"patientLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"relation\", ld.sample(relation));",
									"pm.environment.set(\"Email\", \"qa\" + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"Mobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPreferredContact\", \"both\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"dob\", dob);",
									"pm.environment.set(\"age\", age);",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"patientState\", ld.sample(states));",
									"pm.environment.set(\"information_source\", ld.sample(information_source));",
									"pm.environment.set(\"inquiryreferral_create_date_time\", inquiryreferral_create_date_time);",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "53aa09fa-20a1-48e7-b056-79c51f66f592",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify inquiryExternalId is generated\", function () {",
									"    pm.expect(jsonData.inquiryExternalId).length.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"inquiryExternalId\", jsonData.inquiryExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "076820a9-733b-4e8a-963b-bf21f4b67100",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contactPatientDirectly\": \"\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"inquirerAbout\": \"someoneelse\",\n    \"inquirerFirstName\": \"{{inquirerFirstName}}\",\n    \"inquirerLastName\": \"{{inquirerLastName}}\",\n    \"inquirerEmail\": \"{{Email}}\",\n    \"inquirerMobile\": \"{{Mobile}}\",\n    \"inquirerPhone\": \"{{Mobile}}\",\n    \"preferredContact\": \"{{patientPreferredContact}}\",\n    \"patientEmail\": \"\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"relationWithPatient\": \"{{relation}}\",\n    \"patientBirthDate\": \"{{dob}}\",\n    \"patientAge\": \"{{age}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientMobile\": \"\",\n    \"patientPhone\": \"\",\n    \"patientPreferredContact\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"{{information_source}}\",\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"inquiryCreatedDateTime\": \"{{inquiryreferral_create_date_time}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-inquiry",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6d954ec-dcdd-4c28-8f5e-bd0fafe47d61",
								"exec": [
									"var jsonData = pm.response.json();",
									"let moment = require('moment');",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify task name\", function () {",
									"    exp_task_title = \"Inquiry-\" + pm.variables.get(\"patientFirstName\") + \" \" + pm.variables.get(\"patientLastName\") + \"-\" + pm.variables.get(\"patientState\");",
									"    console.log(\"exp_task_title: \" + exp_task_title);",
									"    pm.expect(jsonData.data[0].taskName).to.eql(exp_task_title);",
									"});",
									"",
									"pm.test(\"Verify task task_description\", function () {",
									"    console.log(\"inquiry_date: \"+pm.variables.get(\"inquiryreferral_create_date_time\").slice(0,10));",
									"    var exp_task_desc = \"Inquiry date: \" + moment(pm.variables.get(\"inquiryreferral_create_date_time\").slice(0,10)).format('MM/DD/YYYY')",
									"        + \"\\nInquirer First name: \" + pm.variables.get(\"inquirerFirstName\")",
									"        + \"\\nInquirer Last name: \" + pm.variables.get(\"inquirerLastName\")",
									"        + \"\\nInquiry type: someoneelse\\nRelation: \" + pm.variables.get(\"relation\")",
									"        + \"\\nPatient first name: \" + pm.variables.get(\"patientFirstName\")",
									"        + \"\\nPatient last name: \" + pm.variables.get(\"patientLastName\")",
									"        + \"\\nPatient’s current state: \" + pm.variables.get(\"patientState\")",
									"        + \"\\nPatient’s age: \" + pm.variables.get(\"age\")",
									"        + \"\\nPatient’s DOB: \" + pm.variables.get(\"dob\")",
									"        + \"\\nPreferred contact method: \" + pm.variables.get(\"patientPreferredContact\")",
									"        + \"\\nMobile phone: \" + pm.variables.get(\"Mobile\")",
									"        + \"\\nEmail: \" + pm.variables.get(\"Email\")",
									"        + \"\\nAdditional notes: \" + pm.variables.get(\"AdditionalNotes\")",
									"        + \"\\nAnything else we should know? \" + pm.variables.get(\"tellUsMore\")",
									"        + \"\\nHow they heard about Equip: \" + pm.variables.get(\"equipSourceName\")",
									"        + \"\\nHow was this inquiry information gathered? \" + pm.variables.get(\"information_source\") + \"\\n\";",
									"    console.log(\"exp_task_desc: \" + exp_task_desc);",
									"    console.log(\"act_task_desc: \" + jsonData.data[0].taskDescription);",
									"    pm.expect(jsonData.data[0].taskDescription).to.eql(exp_task_desc);",
									"});",
									"",
									"pm.test(\"Verify task is assigned\", function () {",
									"    pm.expect(jsonData.data[0].assignee.externalId).to.eql(pm.variables.get(\"assigneeUserId\"));",
									"});",
									"",
									"pm.test(\"Verify task not linked to any patient\", function () {",
									"    let keys = Object.keys(jsonData.data[0]);",
									"    pm.expect(keys).to.not.include(\"patient\");",
									"});",
									"",
									"pm.test(\"Verify task task_due_date\", function () {",
									"",
									"    var d = new Date();",
									"    d.setDate(d.getDate());",
									"    console.log(d);",
									"    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];",
									"    var day = days[d.getDay()];",
									"    console.log(day);",
									"    var days_to_add = 2;",
									"    if (day.localeCompare(\"Thursday\") == 0 || day.localeCompare(\"Friday\") == 0) {",
									"        days_to_add = days_to_add + 2;",
									"    } else if (day.localeCompare(\"Saturday\") == 0 || day.localeCompare(\"Sunday\") == 0) {",
									"        days_to_add = days_to_add + 1;",
									"    }",
									"    console.log(days_to_add);",
									"    d.setDate(d.getDate() + days_to_add);",
									"    console.log(d);",
									"    var d3 = d.toISOString().slice(0, 10);",
									"    d = d3.split(\"T\")[0];",
									"    pm.expect(jsonData.data[0].taskDueDate).to.contains(d);",
									"});",
									"",
									"pm.test(\"Verify task priority is high\", function () {",
									"    pm.expect(jsonData.data[0].taskPriorityId).to.eql(3);",
									"});",
									"",
									"pm.test(\"Verify task status is to-do\", function () {",
									"    pm.expect(jsonData.data[0].status.taskStatusId).to.eql(1);",
									"});",
									"",
									"pm.test(\"Verify task category is Inquiry\", function () {",
									"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Inquiry\");",
									"});",
									"",
									"pm.test(\"Verify task sub-category is Inbound outreach\", function () {",
									"    pm.expect(jsonData.data[0].subCategory.categoryName).to.eql(\"Inbound outreach\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0d4e2b13-3fff-44ea-b6ca-b7410704c788",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"composition",
								"tasks"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Inquiry - Someone else",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50a32c1b-642c-4e1a-a12d-1497dbb70a8e",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 4000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquiry external id\", function () {\r",
									"    pm.expect(jsonData.inquiryExternalId).to.eql(pm.environment.get(\"inquiryExternalId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquiry task ext id\", function () {\r",
									"    pm.expect(jsonData.taskExternalId).to.eql(pm.environment.get(\"taskExternalId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquirer first name\", function () {\r",
									"    pm.expect(jsonData.inquirerFirstName).to.eql(pm.environment.get(\"inquirerFirstName\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquirer first name\", function () {\r",
									"    pm.expect(jsonData.inquirerLastName).to.eql(pm.environment.get(\"inquirerLastName\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquirer phone number\", function () {\r",
									"    pm.expect(jsonData.inquirerPhone).to.eql(pm.environment.get(\"Mobile\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquirer mobile number\", function () {\r",
									"    pm.expect(jsonData.inquirerMobile).to.eql(pm.environment.get(\"Mobile\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquirer Email\", function () {\r",
									"    pm.expect(jsonData.inquirerEmail).to.eql(pm.environment.get(\"Email\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquirer relationWithPatient\", function () {\r",
									"    pm.expect(jsonData.relationWithPatient).to.eql(pm.environment.get(\"relation\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquirer preferredContact\", function () {\r",
									"    pm.expect(jsonData.preferredContact).to.eql(\"both\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1510c3ec-84e9-4c30-92d2-87c1866aa8a1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "980ae1f5-d8d6-4963-aac2-99ef062aa344",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/{{inquiryExternalId}}?type=inquiry",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"{{inquiryExternalId}}"
							],
							"query": [
								{
									"key": "type",
									"value": "inquiry"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add-referral-Direct",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bf52a5cc-33db-49f9-a176-77b83b11ca28",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let states = [\"Alaska\", \"Alabama\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"District of Columbia\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Puerto Rico\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\", \"Outside US\", \"Unknown\"];",
									"",
									"var equip_source;",
									"if (pm.environment.name === \"qa\") {",
									"    equip_source = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equip_source = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equip_source);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"let relationWithPatientList = [\"Case Manager/Discharge Planner\", \"Dietitian\", \"Eating disorder coach/advocate\", \"Nurse\", \"Physician: Adolescent Medicine/Eating Disorder Specialist\", \"Physician: Endocrinologist\", \"Physician: Family Medicine\", \"Physician: Gastroenterologist\", \"Physician: Other specialist\", \"Physician: PCP (non-peds)\", \"Physician: Pediatrician\", \"Physician Assistant\", \"Nurse Practitioner\", \"Practice Manager\", \"Psychiatrist\", \"Psychologist\", \"Referral Coordinator\", \"School nurse\", \"School therapist/counselor\", \"Therapist\", \"Insurance Company\", \"Payor Case Manager\", \"Community org/non-profit\", \"Community professional\", \"Executive\", \"Outreach Professional\", \"Other\"];",
									"",
									"let subcateogry_relation_with_patient_map = [",
									"    {",
									"        \"subcategory\": \"Health plan employee\",",
									"        \"relation_to_patient\": [\"Payor Case Manager\", \"Insurance Company\"]",
									"    },",
									"    {",
									"        \"subcategory\": \"Another professional\",",
									"        \"relation_to_patient\": [\"Community professional\", \"Outreach Professional\", \"Other\", \"Executive\", \"Community org/non-profit\"]",
									"    },",
									"    {",
									"        \"subcategory\": \"Provider\",",
									"        \"relation_to_patient\": [\"Physician: Gastroenterologist\", \"Physician: Other specialist\", \"Physician: PCP (non-peds)\", \"Physician: Pediatrician\", \"Physician Assistant\", \"Nurse Practitioner\", \"Practice Manager\", \"Psychiatrist\", \"Psychologist\", \"Referral Coordinator\", \"School nurse\", \"School therapist/counselor\", \"Therapist\", \"Case Manager/Discharge Planner\", \"Treatment Center (eating disorder)\", \"Dietitian\", \"Eating disorder coach/advocate\", \"Nurse\", \"Physician: Adolescent Medicine/Eating Disorder Specialist\", \"Physician: Endocrinologist\", \"Physician: Family Medicine\"]",
									"    }",
									"]",
									"",
									"randomSubCategory = ld.sample(subcateogry_relation_with_patient_map);",
									"randomSubCategoryName = randomSubCategory.subcategory;",
									"randomRelationToPatient = ld.sample(randomSubCategory.relation_to_patient);",
									"",
									"console.log(randomSubCategoryName);",
									"console.log(randomRelationToPatient);",
									"",
									"let age = ld.random(6, 24);",
									"// let dob = moment().subtract(age, 'years').format('MM/DD/YYYY');",
									"let dob = moment().subtract(age, 'years').format('YYYY-MM-DD');",
									"",
									"pm.environment.set(\"referrerFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set(\"referrerLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"referrerEmail\", \"qa\" + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"referrerMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set(\"patientLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"contactPatientDirectly\", \"Direct\");",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"state\", ld.sample(states));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", age);",
									"pm.environment.set(\"relationWithPatient\", randomRelationToPatient);",
									"pm.environment.set(\"relationToPatientSubCategory\", randomSubCategoryName);",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d57b3469-adff-41a5-bcc5-37892f850ee6",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify referralExternalId is generated\", function () {",
									"    pm.expect(jsonData.referralExternalId).length.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"referralExternalId\", jsonData.referralExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "69f7db04-2616-49a7-9ebe-4bd035497989",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"referrerFirstName\": \"{{referrerFirstName}}\",\n    \"referrerLastName\": \"{{referrerLastName}}\",\n    \"referrerPhone\": \"{{referrerMobile}}\",\n    \"referrerMobile\": \"{{referrerMobile}}\",\n    \"referrerEmail\": \"{{referrerEmail}}\",\n    \"relationWithPatient\": \"{{relationWithPatient}}\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{state}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientAge\": {{patientAge}},\n    \"patientPhone\": \"{{patientMobile}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"\",\n    \"patientPreferredContact\": \"\",\n    \"contactPatientDirectly\": \"Yes\",\n    \"carerName\": \"\",\n    \"carerPhone\": \"\",\n    \"carerMobile\": \"\",\n    \"carerEmail\": \"\",\n    \"carerPreferredContact\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"affiliationList\": [\n        {\n            \"name\": \"Google inc. india pvt ltd\",\n            \"latitude\": \"2\",\n            \"longitude\": \"3\",\n            \"addressLine1\": \"111 8th Ave\",\n            \"addressLine2\": \"APT 1074\",\n            \"city\": \"{{state}}\",\n            \"state\": \"{{state}}\",\n            \"zipCode\": \"85283\"\n        }\n    ],\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-referral",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-referral"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46403ce8-6893-4427-8e4a-d049d1c249d0",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task name\", function () {\r",
									"    exp_task_title = \"Referral-\" + pm.variables.get(\"patientFirstName\") + \" \" + pm.variables.get(\"patientLastName\") + \"-\" + pm.variables.get(\"state\") + \"\";\r",
									"    // console.log(\"exp_task_title: \" + exp_task_title);\r",
									"    pm.expect(jsonData.data[0].taskName).to.eql(exp_task_title);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task task_description\", function () {\r",
									"    var exp_task_desc = \"Referrer First name: \" + pm.variables.get(\"referrerFirstName\")\r",
									"        + \"\\nReferrer Last name: \" + pm.variables.get(\"referrerLastName\")\r",
									"        + \"\\nAffiliation: \" + pm.variables.get(\"affiliation\")\r",
									"        + \"\\nEmail: \" + pm.variables.get(\"referrerEmail\")\r",
									"        + \"\\nOffice phone: \" + pm.variables.get(\"referrerMobile\")\r",
									"        + \"\\nRelation to patient: \" + \"(\" + pm.variables.get(\"relationToPatientSubCategory\") + \") \" + pm.variables.get(\"relationWithPatient\")\r",
									"        + \"\\nPatient first name: \" + pm.variables.get(\"patientFirstName\")\r",
									"        + \"\\nPatient last name: \" + pm.variables.get(\"patientLastName\")\r",
									"        + \"\\nPatient’s current state: \" + pm.variables.get(\"state\")\r",
									"        + \"\\nPatient’s age: \" + pm.variables.get(\"patientAge\")\r",
									"        + \"\\nPatient’s DOB: \" + pm.variables.get(\"patientDateOfBirth\")\r",
									"        + \"\\nPreferred contact method: \" + pm.variables.get(\"contactPatientDirectly\")\r",
									"        + \"\\nPatient mobile phone: \" + pm.variables.get(\"patientMobile\")\r",
									"        + \"\\nAdditional notes: \" + pm.variables.get(\"AdditionalNotes\")\r",
									"        + \"\\nAnything else we should know? \" + pm.variables.get(\"tellUsMore\")\r",
									"        + \"\\nHow they heard about Equip: \" + pm.variables.get(\"equipSourceName\")\r",
									"        + \"\\nHow was this referral information gathered? Webform\\n\";\r",
									"    console.log(\"exp_task_desc: \" + exp_task_desc);\r",
									"    console.log(\"act_task_desc: \" + jsonData.data[0].taskDescription);\r",
									"    pm.expect(jsonData.data[0].taskDescription).to.eql(exp_task_desc);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task is assigned\", function () {\r",
									"    pm.expect(jsonData.data[0].assignee.externalId).to.eql(pm.variables.get(\"assigneeUserId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task not linked to any patient\", function () {\r",
									"    let keys = Object.keys(jsonData.data[0]);\r",
									"    pm.expect(keys).to.not.include(\"patient\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task task_due_date\", function () {\r",
									"\r",
									"    var d = new Date();\r",
									"    d.setDate(d.getDate());\r",
									"    // console.log(d);\r",
									"    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r",
									"    var day = days[d.getDay()];\r",
									"    // console.log(day);\r",
									"    var days_to_add = 2;\r",
									"    if (day.localeCompare(\"Thursday\") == 0 || day.localeCompare(\"Friday\") == 0) {\r",
									"        days_to_add = days_to_add + 2;\r",
									"    } else if (day.localeCompare(\"Thursday\") == 0 || day.localeCompare(\"Friday\") == 0) {\r",
									"        days_to_add = days_to_add + 1;\r",
									"    }\r",
									"    // console.log(days_to_add);\r",
									"    d.setDate(d.getDate() + days_to_add);\r",
									"    // console.log(d);\r",
									"    var d3 = d.toISOString().slice(0, 10);\r",
									"    d = d3.split(\"T\")[0];\r",
									"    pm.expect(jsonData.data[0].taskDueDate).to.contains(d);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task priority is high\", function () {\r",
									"    pm.expect(jsonData.data[0].taskPriorityId).to.eql(3);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task status is to-do\", function () {\r",
									"    pm.expect(jsonData.data[0].status.taskStatusId).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task category is Inquiry\", function () {\r",
									"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Referral\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task sub-category is Inbound outreach\", function () {\r",
									"    pm.expect(jsonData.data[0].subCategory.categoryName).to.eql(\"Inbound outreach\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "edc693db-db91-45cf-b30b-c9da807f464e",
								"exec": [
									"",
									"const affiliation = \"Google inc. india pvt ltd, 111 8th Ave, APT 1074, \" + pm.variables.get(\"state\") + \", \" + pm.variables.get(\"state\") + \", 85283\";",
									"console.log(\"affiliation: \" + affiliation);",
									"pm.environment.set(\"affiliation\", affiliation);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e4a9f839-0553-4d56-92ec-da0822c7b17a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"composition",
								"tasks"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add-referral-Carer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e44ea619-de7b-4ec0-9f12-1d4df8746f49",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let states = [\"Alaska\", \"Alabama\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"District of Columbia\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Puerto Rico\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\", \"Outside US\", \"Unknown\"];",
									"",
									"var equip_source;",
									"if (pm.environment.name === \"qa\") {",
									"    equip_source = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equip_source = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equip_source);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"const information_source = [",
									"    \"Chat\",",
									"    \"Email\",",
									"    \"Fax\",",
									"    \"In-person\",",
									"    \"Live phone call\",",
									"    \"Voicemail\"",
									"]",
									"",
									"let subcateogry_relation_with_patient_map = [",
									"    {",
									"        \"subcategory\": \"Health plan employee\",",
									"        \"relation_to_patient\": [\"Payor Case Manager\", \"Insurance Company\"]",
									"    },",
									"    {",
									"        \"subcategory\": \"Another professional\",",
									"        \"relation_to_patient\": [\"Community professional\", \"Outreach Professional\", \"Other\", \"Executive\", \"Community org/non-profit\"]",
									"    },",
									"    {",
									"        \"subcategory\": \"Provider\",",
									"        \"relation_to_patient\": [\"Physician: Gastroenterologist\", \"Physician: Other specialist\", \"Physician: PCP (non-peds)\", \"Physician: Pediatrician\", \"Physician Assistant\", \"Nurse Practitioner\", \"Practice Manager\", \"Psychiatrist\", \"Psychologist\", \"Referral Coordinator\", \"School nurse\", \"School therapist/counselor\", \"Therapist\", \"Case Manager/Discharge Planner\", \"Treatment Center (eating disorder)\", \"Dietitian\", \"Eating disorder coach/advocate\", \"Nurse\", \"Physician: Adolescent Medicine/Eating Disorder Specialist\", \"Physician: Endocrinologist\", \"Physician: Family Medicine\"]",
									"    }",
									"]",
									"",
									"randomSubCategory = ld.sample(subcateogry_relation_with_patient_map);",
									"randomSubCategoryName = randomSubCategory.subcategory;",
									"randomRelationToPatient = ld.sample(randomSubCategory.relation_to_patient);",
									"",
									"let age = ld.random(6, 24);",
									"let dob = moment().subtract(age, 'years').format('MM/DD/YYYY');",
									"",
									"pm.environment.set(\"referrerFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set(\"referrerLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"referrerEmail\", \"qa\" + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"referrerMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set(\"patientLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"contactPatientDirectly\", \"Carer\");",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"state\", ld.sample(states));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", age);",
									"pm.environment.set(\"CarerFirstName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"CarerLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"CarerMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"information_source\", ld.sample(information_source));",
									"pm.environment.set(\"relationWithPatient\", randomRelationToPatient);",
									"pm.environment.set(\"relationToPatientSubCategory\", randomSubCategoryName);",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "386c661c-5247-4b36-a88d-f88f20377e02",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify referralExternalId is generated\", function () {",
									"    pm.expect(jsonData.referralExternalId).length.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"referralExternalId\", jsonData.referralExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6ec89591-a0e3-4a23-93a9-82c5b545afc2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"referrerFirstName\": \"{{referrerFirstName}}\",\n    \"referrerLastName\": \"{{referrerLastName}}\",\n    \"referrerPhone\": \"{{referrerMobile}}\",\n    \"referrerMobile\": \"{{referrerMobile}}\",\n    \"referrerEmail\": \"{{referrerEmail}}\",\n    \"relationWithPatient\": \"{{relationWithPatient}}\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{state}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientAge\": \"{{age}}\",\n    \"patientPhone\": \"\",\n    \"patientMobile\": \"\",\n    \"patientEmail\": \"\",\n    \"patientPreferredContact\": \"\",\n    \"contactPatientDirectly\": \"No\",\n    \"carerFirstName\": \"{{CarerFirstName}}\",\n    \"carerLastName\": \"{{CarerLastName}}\",\n    \"carerPhone\": \"{{CarerMobile}}\",\n    \"carerMobile\": \"{{CarerMobile}}\",\n    \"carerEmail\": \"\",\n    \"carerPreferredContact\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"{{information_source}}\",\n    \"affiliationList\": [\n        {\n            \"name\": \"Google inc. india pvt ltd\",\n            \"latitude\": \"2\",\n            \"longitude\": \"3\",\n            \"addressLine1\": \"111 8th Ave\",\n            \"addressLine2\": \"APT 1074\",\n            \"city\": \"{{state}}\",\n            \"state\": \"{{state}}\",\n            \"zipCode\": \"85283\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-referral",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-referral"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f9d2e73-9aad-480a-9418-89fbfeb10221",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task name\", function () {\r",
									"    exp_task_title = \"Referral-\" + pm.variables.get(\"patientFirstName\") + \" \" + pm.variables.get(\"patientLastName\") + \"-\" + pm.variables.get(\"state\") + \"\";\r",
									"    console.log(\"exp_task_title: \" + exp_task_title);\r",
									"    pm.expect(jsonData.data[0].taskName).to.eql(exp_task_title);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task task_description\", function () {\r",
									"    var exp_task_desc = \"Referrer First name: \" + pm.variables.get(\"referrerFirstName\")\r",
									"        + \"\\nReferrer Last name: \" + pm.variables.get(\"referrerLastName\")\r",
									"        + \"\\nAffiliation: \" + pm.variables.get(\"affiliation\")\r",
									"        + \"\\nEmail: \" + pm.variables.get(\"referrerEmail\")\r",
									"        + \"\\nOffice phone: \" + pm.variables.get(\"referrerMobile\")\r",
									"        + \"\\nRelation to patient: \" + \"(\" + pm.variables.get(\"relationToPatientSubCategory\") + \") \" + pm.variables.get(\"relationWithPatient\")\r",
									"        + \"\\nPatient first name: \" + pm.variables.get(\"patientFirstName\")\r",
									"        + \"\\nPatient last name: \" + pm.variables.get(\"patientLastName\")\r",
									"        + \"\\nPatient’s current state: \" + pm.variables.get(\"state\")\r",
									"        + \"\\nPatient’s age: \" + pm.variables.get(\"age\")\r",
									"        + \"\\nPatient’s DOB: \" + pm.variables.get(\"patientDateOfBirth\")\r",
									"        + \"\\nPreferred contact method: \" + pm.variables.get(\"contactPatientDirectly\")\r",
									"        + \"\\nCarer Mobile phone: \" + pm.variables.get(\"CarerMobile\")\r",
									"        + \"\\nCarer name: \" + pm.variables.get(\"CarerFirstName\") + \" \" + pm.variables.get(\"CarerLastName\")\r",
									"        + \"\\nAdditional notes: \" + pm.variables.get(\"AdditionalNotes\")\r",
									"        + \"\\nAnything else we should know? \" + pm.variables.get(\"tellUsMore\")\r",
									"        + \"\\nHow they heard about Equip: \" + pm.variables.get(\"equipSourceName\")\r",
									"        + \"\\nHow was this referral information gathered? \" + pm.variables.get(\"information_source\") + \"\\n\";\r",
									"    console.log(\"exp_task_desc: \" + exp_task_desc);\r",
									"    console.log(\"act_task_desc: \" + jsonData.data[0].taskDescription);\r",
									"    pm.expect(jsonData.data[0].taskDescription).to.eql(exp_task_desc);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task is assigned\", function () {\r",
									"    let keys = Object.keys(jsonData.data[0].assignee);\r",
									"    pm.expect(keys).to.not.include(\"externalId\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task not linked to any patient\", function () {\r",
									"    let keys = Object.keys(jsonData.data[0]);\r",
									"    pm.expect(keys).to.not.include(\"patient\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task task_due_date\", function () {\r",
									"\r",
									"    var d = new Date();\r",
									"    d.setDate(d.getDate());\r",
									"    console.log(d);\r",
									"    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r",
									"    var day = days[d.getDay()];\r",
									"    console.log(day);\r",
									"    var days_to_add = 2;\r",
									"    if (day.localeCompare(\"Thursday\") == 0 || day.localeCompare(\"Friday\") == 0) {\r",
									"        days_to_add = days_to_add + 2;\r",
									"    } else if (day.localeCompare(\"Thursday\") == 0 || day.localeCompare(\"Friday\") == 0) {\r",
									"        days_to_add = days_to_add + 1;\r",
									"    }\r",
									"    console.log(days_to_add);\r",
									"    d.setDate(d.getDate() + days_to_add);\r",
									"    console.log(d);\r",
									"    var d3 = d.toISOString().slice(0, 10);\r",
									"    d = d3.split(\"T\")[0];\r",
									"    pm.expect(jsonData.data[0].taskDueDate).to.contains(d);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task priority is high\", function () {\r",
									"    pm.expect(jsonData.data[0].taskPriorityId).to.eql(3);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task status is to-do\", function () {\r",
									"    pm.expect(jsonData.data[0].status.taskStatusId).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task category is Inquiry\", function () {\r",
									"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Referral\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task sub-category is Inbound outreach\", function () {\r",
									"    pm.expect(jsonData.data[0].subCategory.categoryName).to.eql(\"Inbound outreach\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a5bf3761-3ef7-4305-be1f-43d5a323a374",
								"exec": [
									"",
									"const affiliation = \"Google inc. india pvt ltd, 111 8th Ave, APT 1074, \" + pm.variables.get(\"state\") + \", \" + pm.variables.get(\"state\") + \", 85283\";",
									"console.log(\"affiliation: \" + affiliation);",
									"pm.environment.set(\"affiliation\", affiliation);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3b4e3e80-31f8-47dd-a448-171d70b5804c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"composition",
								"tasks"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Referral",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f93b6523-c660-41d7-8ebc-15a0770c241e",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 4000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify referral external id\", function () {\r",
									"    pm.expect(jsonData.referralExternalId).to.eql(pm.environment.get(\"referralExternalId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify referral task ext id\", function () {\r",
									"    pm.expect(jsonData.taskExternalId).to.eql(pm.environment.get(\"taskExternalId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify referrer first name\", function () {\r",
									"    pm.expect(jsonData.referrerFirstName).to.eql(pm.environment.get(\"referrerFirstName\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify referrer last name\", function () {\r",
									"    pm.expect(jsonData.referrerLastName).to.eql(pm.environment.get(\"referrerLastName\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify referrer phone number\", function () {\r",
									"    pm.expect(jsonData.referrerPhone).to.eql(pm.environment.get(\"referrerMobile\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify referrer mobile number\", function () {\r",
									"    pm.expect(jsonData.referrerPhone).to.eql(pm.environment.get(\"referrerMobile\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify inquirer Email\", function () {\r",
									"    pm.expect(jsonData.referrerEmail).to.eql(pm.environment.get(\"referrerEmail\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify referrer relationWithPatient\", function () {\r",
									"    pm.expect(jsonData.relationWithPatient).to.eql(pm.environment.get(\"relationWithPatient\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "242120c2-9b43-4c72-af4f-c059d0974bbc",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "74b4dd97-d474-4de4-88b6-10324df54542",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/{{referralExternalId}}?type=referral",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"{{referralExternalId}}"
							],
							"query": [
								{
									"key": "type",
									"value": "referral"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "bea3b8f6-fa56-48ea-b483-715fd685e1f5"
		},
		{
			"name": "Create & link a patient from an inquiry task",
			"item": [
				{
					"name": "add-inquiry-self",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c4497616-c787-4eff-9f2e-41ce6fd7e504",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify inquiryExternalId is generated\", function () {",
									"    pm.expect(jsonData.inquiryExternalId).length.greaterThan(0);",
									"});",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"pm.environment.set(\"inquiryExternalId\", jsonData.inquiryExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2d355e24-1325-4c6b-bb35-2b19214529b7",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let statesList = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
									"",
									"var equipSourceList;",
									"if (pm.environment.name === \"qa\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equipSourceList);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"const payorList = [\"AIDS Healthcare Foundation\", \"ATRIO Health Plans\", \"Aetna\", \"Affinity Health Plan\", \"AgeRight Advantage Health Plan\", \"AgeWell New York\", \"Alameda Alliance for Health\", \"Alignment Health Plan\", \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"AltaMed PACE\", \"AmeriHealth Insurance Company of New Jersey (AmeriHealth) and AmeriHealth HMO, Inc.\", \"Amida Care\", \"Anthem, Inc.\", \"Arkansas Blue Cross and Blue Shield\", \"Aspire Health Plan\", \"Asuris Northwest Health\", \"Atlanticare LIFE Connection\", \"Auxilio Salud Plus\", \"Avera Health Plans, Inc.\", \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"Bienvivir Senior Health Services\", \"Blue Cross Blue Shield of Michigan\", \"Blue Cross and Blue Shield of Alabama\", \"Blue Cross and Blue Shield of Illinois\", \"Blue Cross and Blue Shield of Montana\", \"Blue Cross and Blue Shield of New Mexico\", \"Blue Cross and Blue Shield of Texas\", \"Blue Shield of California\", \"BlueCross BlueShield of Tennessee\", \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"Brand New Day\", \"Brandman Centers for Senior Care (BCSC)\", \"BridgeSpan Health Company\", \"Bright Health\", \"CHRISTUS Health Plan\", \"CalOptima\", \"CalViva Health\", \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"Care N' Care Health Plan\", \"CareFirst BCBS\", \"CareOregon\", \"Cascade Health Alliance, LLC\", \"Catholic Health LIFE\", \"CenCal Health\", \"Centene Corporation\", \"Center for Elders Independence\", \"CenterLight Healthcare\", \"Centers Plan for Healthy Living (CPHL)\", \"Centers for Medicare and Medicaid Services (CMS)\", \"Central California Alliance for Health\", \"Central Health Plan of California, Inc.\", \"Chinese Community Health Plan\", \"Cigna Corporation\", \"Clover Health\", \"Community Care Health Plan\", \"Community First Health Plans\", \"Community Health Choice, Inc. (CHC)\", \"Community Health Group\", \"Community Health Plan of Washington (CHPW)\", \"Complete Senior Care\", \"ConnectiCare, Inc.\", \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"Contra Costa Health Plan\", \"Cook Children's Health Plan (CCHP)\", \"Crystal Run Health Plans\", \"DAKOTACARE\", \"Devoted Health\", \"Driscoll Health Plan\", \"EMI Health\", \"Eddy SeniorCare\", \"El Paso First Health Plans\", \"ElderONE\", \"Elderplan, Inc.\", \"Excellus BlueCross BlueShield\", \"Fallon Health\", \"FamilyHealth Center for Older Adults (PACE)\", \"First Medical Health Plan, Inc.\", \"FirstCare Health Plans\", \"Fresno PACE for Seniors\", \"GHI, an EmblemHealth Company\", \"Gary and Mary West PACE\", \"Geisinger Health Plan\", \"Gold Coast Health Plan\", \"Golden State Medicare Health Plan\", \"HIP, an EmblemHealth Company\", \"Health Alliance (fka Health Alliance Medical Plans, Inc.)\", \"Health New England, Inc.\", \"Health Plan of San Joaquin\", \"Health Plan of San Mateo\", \"Healthfirst\", \"Highmark BCBS\", \"Highmark Health\", \"Horizon Blue Cross Blue Shield of New Jersey\", \"Humana Inc.\", \"ICHS PACE\", \"Imperial Health Plan\", \"Independence Blue Cross, LLC (Independence)\", \"Independent Health Association, Inc.\", \"Inland Empire Health Plan\", \"InnovAge\", \"InnovaCare Health Solutions\", \"Inspira LIFE\", \"Inter Valley Health Plan\", \"Kaiser Foundation Health Plan of Washington\", \"Kaiser Foundation Health Plan of the Northwest, Inc.\", \"Kaiser Foundation Health Plan, Inc.\", \"Kaiser Foundation Health Plan, Inc.- Other\", \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"Kalos Health\", \"KelseyCare Advantage\", \"Kern Health Systems, Inc.\", \"L.A. Care Health Plan\", \"LIFE St. Francis\", \"LIFE at Lourdes, Inc.\", \"Lasso Healthcare\", \"LifeWise Health Plan of Washington\", \"Longevity Health Plan\", \"Lutheran Senior LIFE at Jersey City\", \"MAPFRE Puerto Rico\", \"MVP Health Care\", \"Magellan\", \"MediExcel Health Plan\", \"Medicaid\", \"Medical Card System, Inc.\", \"Medicare\", \"Memorial Hermann Health Insurance Company\", \"MetroPlus Health Plan, Inc.\", \"Moda Health\", \"Molina Healthcare\", \"Mutual of Omaha Insurance Company\", \"NY Hotel Trades Council and Hotel Association of NYC\", \"No Insurance\", \"On Lok Lifeways\", \"Optum\", \"Oscar Insurance Corporation\", \"Other\", \"PACE CNY\", \"PacificSource Health Plans\", \"Parkland Community Health Plan\", \"Partners Health Plan\", \"Partnership HealthPlan of California\", \"Physicians Health Plan of Northern Indiana, Inc.\", \"Piedmont Community Health Plan\", \"Plan Medico Bella Vista\", \"Plan de Salud Menonita\", \"Premera Blue Cross\", \"Priority Health\", \"Private Pay\", \"ProCare Advantage\", \"Prominence Health Plan\", \"Providence Health Plan\", \"Redwood Coast PACE\", \"Regence BlueCross BlueShield of Oregon\", \"Regence BlueShield\", \"Regence BlueShield of Idaho\", \"RiverSpring Health\", \"Ryder Health Plan, Inc.\", \"SCAN Health Plan\", \"SIHO Holding, LLC dba SIHO Insurance Services\", \"SIMNSA Health Plan\", \"Samaritan Health Plans\", \"San Diego PACE\", \"San Francisco Health Plan (SFHP)\", \"Santa Clara County dba Valley Health Plan\", \"Santa Clara Family Health Plan\", \"Santa Fe Employe's Hospital Association-Coast Lines\", \"Scott and White Health Plan\", \"Scripps Health Plan\", \"Seaside Health Plan\", \"Sendero Health Plan\", \"Senior Whole Health\", \"Sentara Health Plans, Inc. (fka Optima Health)\", \"Seton Health Plan (dba Dell Children's Health Plan)\", \"Sharp Health Plan\", \"Silver Star Health Network\", \"St. Paul's PACE\", \"Stanford Health Care Advantage\", \"State of California\", \"State of New Jersey\", \"State of New York\", \"State of Oregon\", \"State of Texas\", \"State of Washington\", \"Stockton PACE\", \"Sunrise Advantage Plan\", \"Sutter Health Plus\", \"Sutter SeniorCare\", \"Texas Children's Health Plan\", \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"Total Senior Care, Inc.\", \"Triple-S Management Corporation\", \"True Health New Mexico\", \"Umpqua Health Alliance\", \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"UnitedHealthcare\", \"Univera Healthcare\", \"VNSNY CHOICE\", \"VillageCareMAX\", \"Vitality Health Plan of California\", \"WellCare Health Plans, Inc.\", \"Western Health Advantage\", \"Western Oregon Advanced Health, LLC\", \"Yamhill Community Care Organization\"];",
									"",
									"let age = ld.random(10, 30);",
									"let dob = moment().subtract(age, 'years').format('MM/DD/YYYY');",
									"",
									"let patientFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let patientLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"let dateTimeStamp = new Date().toISOString();",
									"",
									"pm.environment.set(\"patientFirstName\", patientFirstName);",
									"pm.environment.set(\"patientLastName\", patientLastName);",
									"pm.environment.set(\"patientEmail\", \"qa\" + \"+\" + patientFirstName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPhone\", \"+1 (333) 333-3333\");",
									"pm.environment.set(\"patientPreferredContact\", \"both\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", age);",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"payorName\", ld.sample(payorList));",
									"pm.environment.set(\"inquiryCreatedDateTime\", dateTimeStamp);",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c193bbfc-61e4-4f57-bc73-8449c51b2617",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquirerFirstName\": \"\",\n    \"inquirerLastName\": \"\",\n    \"inquirerPhone\": \"\",\n    \"inquirerMobile\": \"\",\n    \"inquirerEmail\": \"\",\n    \"inquirerAbout\": \"myself\",\n    \"relationWithPatient\": \"\",\n    \"preferredContact\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientAge\": {{patientAge}},\n    \"patientPhone\": \"{{patientPhone}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"{{patientEmail}}\",\n    \"patientPreferredContact\": \"{{patientPreferredContact}}\",\n    \"contactPatientDirectly\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\",\n    \"payor\": \"{{payorName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-inquiry",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get patient details from self inquiry task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a00e506-86f0-4253-9179-458d009e7d19",
								"exec": [
									"let moment = require('moment');",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"let expectedResponse = {",
									"    \"data\": [",
									"        {",
									"            \"dateOfBirth\": moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'),",
									"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
									"            \"lastName\": pm.environment.get(\"patientLastName\"),",
									"            \"phoneNumber\": pm.environment.get(\"patientPhone\"),",
									"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
									"            \"email\": pm.environment.get(\"patientEmail\"),",
									"            \"age\": pm.environment.get(\"patientAge\"),",
									"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
									"            \"state\": pm.environment.get(\"patientState\"),",
									"            \"type\": \"Inquiry\",",
									"            \"contactPrimary\": {},",
									"            \"inquiryDate\": moment().format('YYYY-MM-DD')",
									"        }",
									"    ],",
									"    \"count\": 1",
									"}",
									"pm.test(\"Verify patient details\", () => {",
									"    pm.expect(jsonData).to.eql(expectedResponse);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9f85b6cd-8cf2-4b96-bf37-6b4ba8e358ba",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7c3a9229-63b9-464e-9fe7-e3c7874aa732",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/patients?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"patients"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0990d2b-dfc8-472f-8a5d-699203ac60ed",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"patientId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f333e18e-4fda-47d5-b1b9-453cae9d0a6d",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"let gendersList = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"let pronounsList = [",
									"    \"He/Him/His\",",
									"    \"She/Her/Hers\",",
									"    \"They/Them/Theirs\",",
									"    \"Other\"",
									"];",
									"",
									"let ethnicitiesList = [",
									"    \"Asian\",",
									"    \"Black/African American\",",
									"    \"White/Caucasian\",",
									"    \"Hispanic/Latinx\",",
									"    \"Native American, Indian American, or Alaska Native\",",
									"    \"Native Hawaiian or other Pacific Islander\",",
									"    \"Middle Eastern or North African\",",
									"    \"Prefer not to answer\",",
									"    \"Other\"",
									"];",
									"",
									"let languagesList = [",
									"    \"English\",",
									"    \"Spanish\",",
									"    \"Chinese\",",
									"    \"French\",",
									"    \"Tagalog\",",
									"    \"Vietnamese\",",
									"    \"Korean\",",
									"    \"German\",",
									"    \"Russian\",",
									"    \"Italian\",",
									"    \"Portuguese\",",
									"    \"Polish\",",
									"    \"Japanese\",",
									"    \"Persian\",",
									"    \"Greek\",",
									"    \"Serbo-Croatian\",",
									"    \"Armenian\",",
									"    \"Yiddish\",",
									"    \"American Sign Language (ASL)\"",
									"];",
									"",
									"let sexList = [",
									"    \"Male\",",
									"    \"Female\"",
									"];",
									"",
									"let timezonesList = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\"",
									"];",
									"",
									"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"//Save the variables to be used in next request for validation",
									"// pm.environment.set(\"patientFirstName\", firstName);",
									"// pm.environment.set(\"patientLastName\", lastName);",
									"// pm.environment.set(\"patientEmail\", email);",
									"// pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"// pm.environment.set(\"patientChosenName\", chosenName);",
									"pm.environment.set(\"patientDateOfBirth\", moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'));",
									"// pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"// pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
									"// pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"// pm.environment.set(\"patientState\", ld.sample(statesList));",
									"// pm.environment.set(\"patientCountry\", \"US\");",
									"// pm.environment.set(\"patientZip\", zip.toString());",
									"// pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"// pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"// pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
									"// pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
									"// pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
									"// pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
									"// pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
									"// pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
									"// pm.environment.set(\"patientSex\", ld.sample(sexList));",
									"// pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
									"// pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));",
									"",
									"pm.environment.set(\"patientPhoneNumber\", pm.environment.get(\"patientMobile\").slice(2));",
									"",
									"    //  \"dateOfBirth\": moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'),",
									"    //         \"firstName\": pm.environment.get(\"patientFirstName\"),",
									"    //         \"lastName\": pm.environment.get(\"patientLastName\"),",
									"    //         \"phoneNumber\": pm.environment.get(\"patientPhone\"),",
									"    //         \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
									"    //         \"email\": pm.environment.get(\"patientEmail\"),",
									"    //         \"age\": pm.environment.get(\"patientAge\"),",
									"    //         \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
									"    //         \"state\": pm.environment.get(\"patientState\"),",
									"    //         \"type\": \"Inquiry\",",
									"    //         \"contactPrimary\": {},",
									"    //         \"inquiryDate\": moment().format('YYYY-MM-DD')",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "67696602-c6e6-49c7-84a6-11da12fe3a8e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"state\": \"{{patientState}}\",\n    \"taskExternalId\": \"{{taskExternalId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Patient by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c3bdd28-c02f-4fcd-a623-2a0de91b2062",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Verify patient details\", function () {",
									"    pm.expect(jsonData.userId).to.eql(pm.environment.get(\"patientId\"));",
									"    pm.expect(jsonData.firstName).to.eql(pm.environment.get(\"patientFirstName\"));",
									"    pm.expect(jsonData.lastName).to.eql(pm.environment.get(\"patientLastName\"));",
									"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"patientEmail\"));",
									"    pm.expect(jsonData.phoneNumber).to.eql(pm.environment.get(\"patientPhoneNumber\"));",
									"    // pm.expect(jsonData.chosenName).to.eql(pm.environment.get(\"patientChosenName\"));",
									"    pm.expect(jsonData.dateOfBirth).to.eql(pm.environment.get(\"patientDateOfBirth\"));",
									"    // pm.expect(jsonData.addressLine1).to.eql(pm.environment.get(\"patientAddressLine1\"));",
									"    // pm.expect(jsonData.addressLine2).to.eql(pm.environment.get(\"patientAddressLine2\"));",
									"    // pm.expect(jsonData.city).to.eql(pm.environment.get(\"patientCity\"));",
									"    pm.expect(jsonData.state).to.eql(pm.environment.get(\"patientState\"));",
									"    // pm.expect(jsonData.country).to.eql(pm.environment.get(\"patientCountry\"));",
									"    // pm.expect(jsonData.zip).to.eql(pm.environment.get(\"patientZip\"));",
									"    // pm.expect(jsonData.latitude.toFixed(4)).to.eql(pm.environment.get(\"patientLatitude\"));",
									"    // pm.expect(jsonData.longitude.toFixed(4)).to.include(pm.environment.get(\"patientLongitude\"));",
									"    // pm.expect(JSON.stringify(jsonData.ethnicities.sort())).to.eql(pm.environment.get(\"patientEthnicities\").replaceAll(\"\\/\\\"\", \"'\"));",
									"    // pm.expect(JSON.stringify(jsonData.languages.sort())).to.eql(pm.environment.get(\"patientLanguages\").replaceAll(\"\\/\\\"\", \"'\"));",
									"    // pm.expect(jsonData.genderOnRecord).to.eql(pm.environment.get(\"patientGenderOnRecord\"));",
									"    // pm.expect(jsonData.genderOffRecord).to.eql(pm.environment.get(\"patientGenderOffRecord\"));",
									"    // pm.expect(jsonData.pronounsOnRecord).to.eql(pm.environment.get(\"patientPronounsOnRecord\"));",
									"    // pm.expect(jsonData.pronounsOffRecord).to.eql(pm.environment.get(\"patientPronounsOffRecord\"));",
									"    // pm.expect(jsonData.sex).to.eql(pm.environment.get(\"patientSex\"));",
									"    // pm.expect(jsonData.timezone).to.eql(pm.environment.get(\"patientTimezone\"));",
									"    // pm.expect(JSON.stringify(jsonData.contactPreferences.sort())).to.eql(pm.environment.get(\"patientContactPreferences\").replaceAll(\"\\/\\\"\", \"'\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c2396661-8eb6-4b4d-a9a1-8522d48f4aa7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients/{{patientId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients",
								"{{patientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5d9639b-7275-4164-b468-eaf4201c2575",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 4000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task category\", function () {\r",
									"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Inquiry\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task patient details\", function () {\r",
									"    pm.expect(jsonData.data[0].patient.externalId).to.eql(pm.variables.get(\"patientId\"));\r",
									"    pm.expect(jsonData.data[0].patient.firstName).to.eql(pm.variables.get(\"patientFirstName\"));\r",
									"    pm.expect(jsonData.data[0].patient.lastName).to.eql(pm.variables.get(\"patientLastName\"));\r",
									"    pm.expect(jsonData.data[0].patient.dateOfBirth).to.eql(pm.variables.get(\"patientDateOfBirth\"));\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify task name\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskName).to.eql(pm.variables.get(\"task_name\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_description\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskDescription).to.eql(pm.variables.get(\"task_description\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_assigned_userid\", function () {\r",
									"//     pm.expect(jsonData.taskAssignedUserId).to.eql(pm.variables.get(\"task_assigned_userid\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_createdby_userid\", function () {\r",
									"//    pm.expect(jsonData.taskDescription).to.eql(pm.variables.get(\"task_createdby_userid\"));\r",
									"//});\r",
									"\r",
									"//pm.test(\"Verify task task_due_date\", function () {\r",
									"//    pm.expect(jsonData.taskDueDate).to.eql(pm.variables.get(\"task_due_date\"));\r",
									"//});\r",
									"\r",
									"// pm.test(\"Verify task task_priority_id\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskPriorityId).to.eql(pm.variables.get(\"task_priority_id\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_status_id\", function () {\r",
									"//    pm.expect(jsonData.taskStatusId).to.eql('\"+pm.variables.get(\"task_status_id\")+\"');\r",
									"//});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "546b2e3c-b687-4089-b89f-3e7f9c2ad07f",
								"exec": [
									"// var task_name = pm.variables.get(\"task_name\");\r",
									"// console.log(task_name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ce08910a-3f96-4e74-88c9-aa71486eb9e0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"composition",
								"tasks"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "103648fc-bd03-40e4-90ff-d2fbb79e3178"
		},
		{
			"name": "Create & link a patient from a referral task",
			"item": [
				{
					"name": "add-referral-Direct",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "507fd8d4-0ce7-4f4e-847c-1ec12e6027be",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let statesList = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
									"",
									"var equipSourceList;",
									"if (pm.environment.name === \"qa\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equipSourceList);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"let age = ld.random(18, 40);",
									"let dob = moment().subtract(age, 'years').format('MM/DD/YYYY');",
									"",
									"let referrerFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let referrerLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"pm.environment.set(\"referrerFirstName\", referrerFirstName);",
									"pm.environment.set(\"referrerLastName\", referrerLastName);",
									"pm.environment.set(\"referrerEmail\", \"qa\" + \"+\" + referrerFirstName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"referrerMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"referrerPhone\", \"+1 (122) 222-2222\");",
									"pm.environment.set(\"patientFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set(\"patientLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", age);",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPhone\", \"+1 (916) 258-4561\");",
									"pm.environment.set(\"contactPatientDirectly\", \"Direct\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"affiliationCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"affiliationState\", ld.sample(statesList));",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d66ab102-2763-456c-8a7d-abbe0701f2ce",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify referralExternalId is generated\", function () {",
									"    pm.expect(jsonData.referralExternalId).length.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"referralExternalId\", jsonData.referralExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5b949af3-aa04-48c5-a502-faf4e6d5bb27",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"referrerFirstName\": \"{{referrerFirstName}}\",\n    \"referrerLastName\": \"{{referrerLastName}}\",\n    \"referrerPhone\": \"{{referrerPhone}}\",\n    \"referrerMobile\": \"{{referrerMobile}}\",\n    \"referrerEmail\": \"{{referrerEmail}}\",\n    \"relationWithPatient\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientAge\": {{patientAge}},\n    \"patientPhone\": \"{{patientPhone}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"\",\n    \"patientPreferredContact\": \"\",\n    \"contactPatientDirectly\": \"Yes\",\n    \"carerName\": \"\",\n    \"carerPhone\": \"\",\n    \"carerMobile\": \"\",\n    \"carerEmail\": \"\",\n    \"carerPreferredContact\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"affiliationList\": [\n        {\n            \"name\": \"Google inc. india pvt ltd\",\n            \"latitude\": \"2\",\n            \"longitude\": \"3\",\n            \"addressLine1\": \"111 8th Ave\",\n            \"addressLine2\": \"APT 1074\",\n            \"city\": \"{{affiliationCity}}\",\n            \"state\": \"{{affiliationState}}\",\n            \"zipCode\": \"85283\"\n        }\n    ],\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-referral",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-referral"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get patient details from direct referral task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8bfe3b6-ff91-4a50-a7c8-ed71f69f1ba8",
								"exec": [
									"let moment = require('moment');",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"let expectedResponse = {",
									"    \"data\": [",
									"        {",
									"            \"dateOfBirth\": moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'),",
									"            \"firstName\": pm.environment.get(\"patientFirstName\"),",
									"            \"lastName\": pm.environment.get(\"patientLastName\"),",
									"            \"phoneNumber\": pm.environment.get(\"patientPhone\"),",
									"            \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
									"            \"age\": pm.environment.get(\"patientAge\"),",
									"            \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
									"            \"state\": pm.environment.get(\"patientState\"),",
									"            \"type\": \"Referral\",",
									"            \"contactReferral\": {",
									"                \"firstName\": pm.environment.get(\"referrerFirstName\"),",
									"                \"lastName\": pm.environment.get(\"referrerLastName\"),",
									"                \"email\": pm.environment.get(\"referrerEmail\"),",
									"                \"phoneNumber\": pm.environment.get(\"referrerPhone\"),//This need to be changed once the bug EQ-5057 fixes, replace referrerMobile with referrerPhone",
									"                \"mobileNumber\": pm.environment.get(\"referrerMobile\")",
									"            },",
									"            \"referralAffiliation\": {",
									"                \"name\": \"Google inc. india pvt ltd\",",
									"                \"addressLine1\": \"111 8th Ave\",",
									"                \"addressLine2\": \"APT 1074\",",
									"                \"city\": pm.environment.get(\"affiliationCity\"),",
									"                \"state\": pm.environment.get(\"affiliationState\"),",
									"                \"zipCode\": \"85283\"",
									"            },",
									"            \"contactPrimary\": {},",
									"            \"informationSource\": \"Webform\",",
									"            \"contactPatientDirectly\": true,",
									"            \"inquiryDate\": moment().format('YYYY-MM-DD')",
									"        }",
									"    ],",
									"    \"count\": 1",
									"}",
									"",
									"pm.test(\"Verify patient details\", () => {",
									"    console.log(\"actual: \" + JSON.stringify(jsonData));",
									"    console.log(\"actual: \" + JSON.stringify(expectedResponse));",
									"    pm.expect(jsonData).to.eql(expectedResponse);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3519e8a3-06be-496d-9e35-99b2f2add159",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5e1b3f4f-2489-497d-89ff-79187d7db7cc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/inquiry-referral/patients?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"patients"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b014db98-ed44-463e-a16b-255785d517e5",
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"pm.test(\"Verify id is generated\", function () {",
									"    pm.expect(jsonData.id).length.greaterThan(0);",
									"});",
									"",
									"pm.environment.set(\"patientId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d96263ea-c5d0-47d0-b97f-64846902a096",
								"exec": [
									"let ld = require('lodash');",
									"let moment = require('moment');",
									"",
									"let gendersList = [",
									"    \"Cis-gender male\",",
									"    \"Cis-gender female\",",
									"    \"Non-binary\",",
									"    \"Other\",",
									"    \"Unknown\",",
									"    \"Transgender male\",",
									"    \"Transgender female\"",
									"];",
									"",
									"let pronounsList = [",
									"    \"He/Him/His\",",
									"    \"She/Her/Hers\",",
									"    \"They/Them/Theirs\",",
									"    \"Other\"",
									"];",
									"",
									"let ethnicitiesList = [",
									"    \"Asian\",",
									"    \"Black/African American\",",
									"    \"White/Caucasian\",",
									"    \"Hispanic/Latinx\",",
									"    \"Native American, Indian American, or Alaska Native\",",
									"    \"Native Hawaiian or other Pacific Islander\",",
									"    \"Middle Eastern or North African\",",
									"    \"Prefer not to answer\",",
									"    \"Other\"",
									"];",
									"",
									"let languagesList = [",
									"    \"English\",",
									"    \"Spanish\",",
									"    \"Chinese\",",
									"    \"French\",",
									"    \"Tagalog\",",
									"    \"Vietnamese\",",
									"    \"Korean\",",
									"    \"German\",",
									"    \"Russian\",",
									"    \"Italian\",",
									"    \"Portuguese\",",
									"    \"Polish\",",
									"    \"Japanese\",",
									"    \"Persian\",",
									"    \"Greek\",",
									"    \"Serbo-Croatian\",",
									"    \"Armenian\",",
									"    \"Yiddish\",",
									"    \"American Sign Language (ASL)\"",
									"];",
									"",
									"let sexList = [",
									"    \"Male\",",
									"    \"Female\"",
									"];",
									"",
									"let timezonesList = [",
									"    \"Hawaii Standard Time\",",
									"    \"Hawaii-Aleutian Time\",",
									"    \"Alaska Time\",",
									"    \"Pacific Time\",",
									"    \"Arizona\",",
									"    \"Mountain Time\",",
									"    \"Central Time\",",
									"    \"Eastern Time\"",
									"];",
									"",
									"let contactPreferences = [\"Email\", \"No preference\", \"Phone\", \"Unknown\"];",
									"",
									"let statesList = [\"AK\", \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"Outside US\", \"Unknown\"];",
									"",
									"let addressLine2List = [\"Apt 1\", \"Apt 2\", \"Apt 3\", \"Unit #1\", \"Unit #2\", \"Unit #3\", \"Apt 2L\", \"Apt 2R\"];",
									"",
									"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let lastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"let chosenName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let email = \"qa\" + \"+\" + firstName + \"+\" + Date.now() + \"@equip.health\";",
									"let zip = Math.floor(10000 + Math.random() * 90000);",
									"",
									"//Generate random Date of Birth in YYYY-MM-DD Format",
									"function randomDate(start, end) {",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
									"}",
									"let date = randomDate(new Date(1990, 00, 01), new Date());",
									"let dateOfBirth = date.getFullYear() + '-' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date.getDate()).slice(-2);",
									"",
									"//Save the variables to be used in next request for validation",
									"// pm.environment.set(\"patientFirstName\", firstName);",
									"// pm.environment.set(\"patientLastName\", lastName);",
									"// pm.environment.set(\"patientEmail\", email);",
									"// pm.environment.set(\"patientPhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));",
									"// pm.environment.set(\"patientChosenName\", chosenName);",
									"pm.environment.set(\"patientDateOfBirth\", moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'));",
									"// pm.environment.set(\"patientAddressLine1\", pm.variables.replaceIn('{{$randomStreetAddress}}'));",
									"// pm.environment.set(\"patientAddressLine2\", ld.sample(addressLine2List));",
									"// pm.environment.set(\"patientCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"// pm.environment.set(\"patientState\", ld.sample(statesList));",
									"// pm.environment.set(\"patientCountry\", \"US\");",
									"// pm.environment.set(\"patientZip\", zip.toString());",
									"// pm.environment.set(\"patientLatitude\", pm.variables.replaceIn('{{$randomLatitude}}'));",
									"// pm.environment.set(\"patientLongitude\", pm.variables.replaceIn('{{$randomLongitude}}'));",
									"// pm.environment.set(\"patientEthnicities\", JSON.stringify(ld.sampleSize(ethnicitiesList, 2).sort()));",
									"// pm.environment.set(\"patientLanguages\", JSON.stringify(ld.sampleSize(languagesList, 2).sort()));",
									"// pm.environment.set(\"patientGenderOnRecord\", ld.sample(gendersList));",
									"// pm.environment.set(\"patientGenderOffRecord\", ld.sample(gendersList));",
									"// pm.environment.set(\"patientPronounsOnRecord\", ld.sample(pronounsList));",
									"// pm.environment.set(\"patientPronounsOffRecord\", ld.sample(pronounsList));",
									"// pm.environment.set(\"patientSex\", ld.sample(sexList));",
									"// pm.environment.set(\"patientTimezone\", ld.sample(timezonesList));",
									"// pm.environment.set(\"patientContactPreferences\", JSON.stringify(ld.sampleSize(contactPreferences, 2).sort()));",
									"",
									"pm.environment.set(\"patientPhoneNumber\", pm.environment.get(\"patientMobile\").slice(2));",
									"",
									"    //  \"dateOfBirth\": moment(pm.environment.get(\"patientDateOfBirth\")).format('YYYY-MM-DD'),",
									"    //         \"firstName\": pm.environment.get(\"patientFirstName\"),",
									"    //         \"lastName\": pm.environment.get(\"patientLastName\"),",
									"    //         \"phoneNumber\": pm.environment.get(\"patientPhone\"),",
									"    //         \"mobileNumber\": pm.environment.get(\"patientMobile\"),",
									"    //         \"email\": pm.environment.get(\"patientEmail\"),",
									"    //         \"age\": pm.environment.get(\"patientAge\"),",
									"    //         \"taskExternalId\": pm.environment.get(\"taskExternalId\"),",
									"    //         \"state\": pm.environment.get(\"patientState\"),",
									"    //         \"type\": \"Inquiry\",",
									"    //         \"contactPrimary\": {},",
									"    //         \"inquiryDate\": moment().format('YYYY-MM-DD')",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "60543de3-e8ac-4e63-8cb9-7b3849d139f3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{patientFirstName}}\",\n    \"lastName\": \"{{patientLastName}}\",\n    \"dateOfBirth\": \"{{patientDateOfBirth}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"phoneNumber\": \"{{patientPhoneNumber}}\",\n    \"state\": \"{{patientState}}\",\n    \"taskExternalId\": \"{{taskExternalId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Patient by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4bdb4e4-7378-4f1b-b7ad-93c15fe97217",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"pm.test(\"Response has a JSON body\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Verify patient details\", function () {",
									"    pm.expect(jsonData.userId).to.eql(pm.environment.get(\"patientId\"));",
									"    pm.expect(jsonData.firstName).to.eql(pm.environment.get(\"patientFirstName\"));",
									"    pm.expect(jsonData.lastName).to.eql(pm.environment.get(\"patientLastName\"));",
									"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"patientEmail\"));",
									"    pm.expect(jsonData.phoneNumber).to.eql(pm.environment.get(\"patientPhoneNumber\"));",
									"    // pm.expect(jsonData.chosenName).to.eql(pm.environment.get(\"patientChosenName\"));",
									"    pm.expect(jsonData.dateOfBirth).to.eql(pm.environment.get(\"patientDateOfBirth\"));",
									"    // pm.expect(jsonData.addressLine1).to.eql(pm.environment.get(\"patientAddressLine1\"));",
									"    // pm.expect(jsonData.addressLine2).to.eql(pm.environment.get(\"patientAddressLine2\"));",
									"    // pm.expect(jsonData.city).to.eql(pm.environment.get(\"patientCity\"));",
									"    pm.expect(jsonData.state).to.eql(pm.environment.get(\"patientState\"));",
									"    // pm.expect(jsonData.country).to.eql(pm.environment.get(\"patientCountry\"));",
									"    // pm.expect(jsonData.zip).to.eql(pm.environment.get(\"patientZip\"));",
									"    // pm.expect(jsonData.latitude.toFixed(4)).to.eql(pm.environment.get(\"patientLatitude\"));",
									"    // pm.expect(jsonData.longitude.toFixed(4)).to.include(pm.environment.get(\"patientLongitude\"));",
									"    // pm.expect(JSON.stringify(jsonData.ethnicities.sort())).to.eql(pm.environment.get(\"patientEthnicities\").replaceAll(\"\\/\\\"\", \"'\"));",
									"    // pm.expect(JSON.stringify(jsonData.languages.sort())).to.eql(pm.environment.get(\"patientLanguages\").replaceAll(\"\\/\\\"\", \"'\"));",
									"    // pm.expect(jsonData.genderOnRecord).to.eql(pm.environment.get(\"patientGenderOnRecord\"));",
									"    // pm.expect(jsonData.genderOffRecord).to.eql(pm.environment.get(\"patientGenderOffRecord\"));",
									"    // pm.expect(jsonData.pronounsOnRecord).to.eql(pm.environment.get(\"patientPronounsOnRecord\"));",
									"    // pm.expect(jsonData.pronounsOffRecord).to.eql(pm.environment.get(\"patientPronounsOffRecord\"));",
									"    // pm.expect(jsonData.sex).to.eql(pm.environment.get(\"patientSex\"));",
									"    // pm.expect(jsonData.timezone).to.eql(pm.environment.get(\"patientTimezone\"));",
									"    // pm.expect(JSON.stringify(jsonData.contactPreferences.sort())).to.eql(pm.environment.get(\"patientContactPreferences\").replaceAll(\"\\/\\\"\", \"'\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2a3336a9-e525-4edd-a8d4-ea74bd7c988d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/patients/{{patientId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"patients",
								"{{patientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf770303-a615-420c-9bec-9f0de6e3b56b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 4000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task category\", function () {\r",
									"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Referral\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task patient details\", function () {\r",
									"    pm.expect(jsonData.data[0].patient.externalId).to.eql(pm.variables.get(\"patientId\"));\r",
									"    pm.expect(jsonData.data[0].patient.firstName).to.eql(pm.variables.get(\"patientFirstName\"));\r",
									"    pm.expect(jsonData.data[0].patient.lastName).to.eql(pm.variables.get(\"patientLastName\"));\r",
									"    pm.expect(jsonData.data[0].patient.dateOfBirth).to.eql(pm.variables.get(\"patientDateOfBirth\"));\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify task name\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskName).to.eql(pm.variables.get(\"task_name\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_description\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskDescription).to.eql(pm.variables.get(\"task_description\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_assigned_userid\", function () {\r",
									"//     pm.expect(jsonData.taskAssignedUserId).to.eql(pm.variables.get(\"task_assigned_userid\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_createdby_userid\", function () {\r",
									"//    pm.expect(jsonData.taskDescription).to.eql(pm.variables.get(\"task_createdby_userid\"));\r",
									"//});\r",
									"\r",
									"\r",
									"//pm.test(\"Verify task task_due_date\", function () {\r",
									"//    pm.expect(jsonData.taskDueDate).to.eql(pm.variables.get(\"task_due_date\"));\r",
									"//});\r",
									"\r",
									"// pm.test(\"Verify task task_priority_id\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskPriorityId).to.eql(pm.variables.get(\"task_priority_id\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_status_id\", function () {\r",
									"//    pm.expect(jsonData.taskStatusId).to.eql('\"+pm.variables.get(\"task_status_id\")+\"');\r",
									"//});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "feaf4c17-4a11-447a-8fb2-c144e1620d88",
								"exec": [
									"// var task_name = pm.variables.get(\"task_name\");\r",
									"// console.log(task_name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6f33ae88-7415-40d2-bd2b-fb00d6d39f10",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"composition",
								"tasks"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "c1fe0084-1778-4275-b818-23758db60ea1"
		},
		{
			"name": "Verify inquiry task is closed for patients age below 6 and above 24",
			"item": [
				{
					"name": "add-inquiry-self below age 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e947a62-0d79-4c53-9f61-702406695b05",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify inquiryExternalId is generated\", function () {",
									"    pm.expect(jsonData.inquiryExternalId).length.greaterThan(0);",
									"});",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"pm.environment.set(\"inquiryExternalId\", jsonData.inquiryExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1da9b3d9-c759-494a-96ab-65baa5d14a18",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let statesList = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
									"",
									"var equipSourceList;",
									"if (pm.environment.name === \"qa\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equipSourceList);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"const payorList = [\"AIDS Healthcare Foundation\", \"ATRIO Health Plans\", \"Aetna\", \"Affinity Health Plan\", \"AgeRight Advantage Health Plan\", \"AgeWell New York\", \"Alameda Alliance for Health\", \"Alignment Health Plan\", \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"AltaMed PACE\", \"AmeriHealth Insurance Company of New Jersey (AmeriHealth) and AmeriHealth HMO, Inc.\", \"Amida Care\", \"Anthem, Inc.\", \"Arkansas Blue Cross and Blue Shield\", \"Aspire Health Plan\", \"Asuris Northwest Health\", \"Atlanticare LIFE Connection\", \"Auxilio Salud Plus\", \"Avera Health Plans, Inc.\", \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"Bienvivir Senior Health Services\", \"Blue Cross Blue Shield of Michigan\", \"Blue Cross and Blue Shield of Alabama\", \"Blue Cross and Blue Shield of Illinois\", \"Blue Cross and Blue Shield of Montana\", \"Blue Cross and Blue Shield of New Mexico\", \"Blue Cross and Blue Shield of Texas\", \"Blue Shield of California\", \"BlueCross BlueShield of Tennessee\", \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"Brand New Day\", \"Brandman Centers for Senior Care (BCSC)\", \"BridgeSpan Health Company\", \"Bright Health\", \"CHRISTUS Health Plan\", \"CalOptima\", \"CalViva Health\", \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"Care N' Care Health Plan\", \"CareFirst BCBS\", \"CareOregon\", \"Cascade Health Alliance, LLC\", \"Catholic Health LIFE\", \"CenCal Health\", \"Centene Corporation\", \"Center for Elders Independence\", \"CenterLight Healthcare\", \"Centers Plan for Healthy Living (CPHL)\", \"Centers for Medicare and Medicaid Services (CMS)\", \"Central California Alliance for Health\", \"Central Health Plan of California, Inc.\", \"Chinese Community Health Plan\", \"Cigna Corporation\", \"Clover Health\", \"Community Care Health Plan\", \"Community First Health Plans\", \"Community Health Choice, Inc. (CHC)\", \"Community Health Group\", \"Community Health Plan of Washington (CHPW)\", \"Complete Senior Care\", \"ConnectiCare, Inc.\", \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"Contra Costa Health Plan\", \"Cook Children's Health Plan (CCHP)\", \"Crystal Run Health Plans\", \"DAKOTACARE\", \"Devoted Health\", \"Driscoll Health Plan\", \"EMI Health\", \"Eddy SeniorCare\", \"El Paso First Health Plans\", \"ElderONE\", \"Elderplan, Inc.\", \"Excellus BlueCross BlueShield\", \"Fallon Health\", \"FamilyHealth Center for Older Adults (PACE)\", \"First Medical Health Plan, Inc.\", \"FirstCare Health Plans\", \"Fresno PACE for Seniors\", \"GHI, an EmblemHealth Company\", \"Gary and Mary West PACE\", \"Geisinger Health Plan\", \"Gold Coast Health Plan\", \"Golden State Medicare Health Plan\", \"HIP, an EmblemHealth Company\", \"Health Alliance (fka Health Alliance Medical Plans, Inc.)\", \"Health New England, Inc.\", \"Health Plan of San Joaquin\", \"Health Plan of San Mateo\", \"Healthfirst\", \"Highmark BCBS\", \"Highmark Health\", \"Horizon Blue Cross Blue Shield of New Jersey\", \"Humana Inc.\", \"ICHS PACE\", \"Imperial Health Plan\", \"Independence Blue Cross, LLC (Independence)\", \"Independent Health Association, Inc.\", \"Inland Empire Health Plan\", \"InnovAge\", \"InnovaCare Health Solutions\", \"Inspira LIFE\", \"Inter Valley Health Plan\", \"Kaiser Foundation Health Plan of Washington\", \"Kaiser Foundation Health Plan of the Northwest, Inc.\", \"Kaiser Foundation Health Plan, Inc.\", \"Kaiser Foundation Health Plan, Inc.- Other\", \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"Kalos Health\", \"KelseyCare Advantage\", \"Kern Health Systems, Inc.\", \"L.A. Care Health Plan\", \"LIFE St. Francis\", \"LIFE at Lourdes, Inc.\", \"Lasso Healthcare\", \"LifeWise Health Plan of Washington\", \"Longevity Health Plan\", \"Lutheran Senior LIFE at Jersey City\", \"MAPFRE Puerto Rico\", \"MVP Health Care\", \"Magellan\", \"MediExcel Health Plan\", \"Medicaid\", \"Medical Card System, Inc.\", \"Medicare\", \"Memorial Hermann Health Insurance Company\", \"MetroPlus Health Plan, Inc.\", \"Moda Health\", \"Molina Healthcare\", \"Mutual of Omaha Insurance Company\", \"NY Hotel Trades Council and Hotel Association of NYC\", \"No Insurance\", \"On Lok Lifeways\", \"Optum\", \"Oscar Insurance Corporation\", \"Other\", \"PACE CNY\", \"PacificSource Health Plans\", \"Parkland Community Health Plan\", \"Partners Health Plan\", \"Partnership HealthPlan of California\", \"Physicians Health Plan of Northern Indiana, Inc.\", \"Piedmont Community Health Plan\", \"Plan Medico Bella Vista\", \"Plan de Salud Menonita\", \"Premera Blue Cross\", \"Priority Health\", \"Private Pay\", \"ProCare Advantage\", \"Prominence Health Plan\", \"Providence Health Plan\", \"Redwood Coast PACE\", \"Regence BlueCross BlueShield of Oregon\", \"Regence BlueShield\", \"Regence BlueShield of Idaho\", \"RiverSpring Health\", \"Ryder Health Plan, Inc.\", \"SCAN Health Plan\", \"SIHO Holding, LLC dba SIHO Insurance Services\", \"SIMNSA Health Plan\", \"Samaritan Health Plans\", \"San Diego PACE\", \"San Francisco Health Plan (SFHP)\", \"Santa Clara County dba Valley Health Plan\", \"Santa Clara Family Health Plan\", \"Santa Fe Employe's Hospital Association-Coast Lines\", \"Scott and White Health Plan\", \"Scripps Health Plan\", \"Seaside Health Plan\", \"Sendero Health Plan\", \"Senior Whole Health\", \"Sentara Health Plans, Inc. (fka Optima Health)\", \"Seton Health Plan (dba Dell Children's Health Plan)\", \"Sharp Health Plan\", \"Silver Star Health Network\", \"St. Paul's PACE\", \"Stanford Health Care Advantage\", \"State of California\", \"State of New Jersey\", \"State of New York\", \"State of Oregon\", \"State of Texas\", \"State of Washington\", \"Stockton PACE\", \"Sunrise Advantage Plan\", \"Sutter Health Plus\", \"Sutter SeniorCare\", \"Texas Children's Health Plan\", \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"Total Senior Care, Inc.\", \"Triple-S Management Corporation\", \"True Health New Mexico\", \"Umpqua Health Alliance\", \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"UnitedHealthcare\", \"Univera Healthcare\", \"VNSNY CHOICE\", \"VillageCareMAX\", \"Vitality Health Plan of California\", \"WellCare Health Plans, Inc.\", \"Western Health Advantage\", \"Western Oregon Advanced Health, LLC\", \"Yamhill Community Care Organization\"];",
									"",
									"let age = ld.random(6, 30);",
									"let dob = moment().subtract(2190, 'days').format('MM/DD/YYYY');",
									"",
									"let patientFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let patientLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"let dateTimeStamp = new Date().toISOString();",
									"",
									"pm.environment.set(\"patientFirstName\", patientFirstName);",
									"pm.environment.set(\"patientLastName\", patientLastName);",
									"pm.environment.set(\"patientEmail\", \"qa\" + \"+\" + patientFirstName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPhone\", \"+1 (333) 333-3333\");",
									"pm.environment.set(\"patientPreferredContact\", \"both\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", 25);",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"payorName\", ld.sample(payorList));",
									"pm.environment.set(\"inquiryCreatedDateTime\", dateTimeStamp);",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7995e24d-fa09-4a1c-a72c-132c5d88f8e2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquirerFirstName\": \"\",\n    \"inquirerLastName\": \"\",\n    \"inquirerPhone\": \"\",\n    \"inquirerMobile\": \"\",\n    \"inquirerEmail\": \"\",\n    \"inquirerAbout\": \"myself\",\n    \"relationWithPatient\": \"\",\n    \"preferredContact\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientPhone\": \"{{patientPhone}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"{{patientEmail}}\",\n    \"patientPreferredContact\": \"{{patientPreferredContact}}\",\n    \"contactPatientDirectly\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\",\n    \"payor\": \"{{payorName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-inquiry",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec0a997e-a5fb-41af-905d-70d354174a11",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 4000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task category\", function () {\r",
									"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Inquiry\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task details\", function () {\r",
									"    pm.expect(jsonData.data[0].status.taskStatusId).to.eql(5);\r",
									"    pm.expect(jsonData.data[0].status.taskStatusName).to.eql(\"Closed\");\r",
									"    pm.expect(jsonData.data[0].voidReason).to.eql(\"Not eligible - Wrong age\");\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify task name\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskName).to.eql(pm.variables.get(\"task_name\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_description\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskDescription).to.eql(pm.variables.get(\"task_description\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_assigned_userid\", function () {\r",
									"//     pm.expect(jsonData.taskAssignedUserId).to.eql(pm.variables.get(\"task_assigned_userid\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_createdby_userid\", function () {\r",
									"//    pm.expect(jsonData.taskDescription).to.eql(pm.variables.get(\"task_createdby_userid\"));\r",
									"//});\r",
									"\r",
									"//pm.test(\"Verify task task_due_date\", function () {\r",
									"//    pm.expect(jsonData.taskDueDate).to.eql(pm.variables.get(\"task_due_date\"));\r",
									"//});\r",
									"\r",
									"// pm.test(\"Verify task task_priority_id\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskPriorityId).to.eql(pm.variables.get(\"task_priority_id\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_status_id\", function () {\r",
									"//    pm.expect(jsonData.taskStatusId).to.eql('\"+pm.variables.get(\"task_status_id\")+\"');\r",
									"//});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9929aba8-9d04-4f40-8e2c-2e97b2023a1a",
								"exec": [
									"// var task_name = pm.variables.get(\"task_name\");\r",
									"// console.log(task_name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "202bf352-1b98-428d-b285-5107460e8e00",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"composition",
								"tasks"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add-inquiry-self above age 24",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56602ae7-43a5-45cd-9b75-6275e10973c3",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify inquiryExternalId is generated\", function () {",
									"    pm.expect(jsonData.inquiryExternalId).length.greaterThan(0);",
									"});",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"pm.environment.set(\"inquiryExternalId\", jsonData.inquiryExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "35a4b27b-cba4-474d-84cc-be5ace43c159",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let statesList = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
									"",
									"var equipSourceList;",
									"if (pm.environment.name === \"qa\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equipSourceList);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"const payorList = [\"AIDS Healthcare Foundation\", \"ATRIO Health Plans\", \"Aetna\", \"Affinity Health Plan\", \"AgeRight Advantage Health Plan\", \"AgeWell New York\", \"Alameda Alliance for Health\", \"Alignment Health Plan\", \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"AltaMed PACE\", \"AmeriHealth Insurance Company of New Jersey (AmeriHealth) and AmeriHealth HMO, Inc.\", \"Amida Care\", \"Anthem, Inc.\", \"Arkansas Blue Cross and Blue Shield\", \"Aspire Health Plan\", \"Asuris Northwest Health\", \"Atlanticare LIFE Connection\", \"Auxilio Salud Plus\", \"Avera Health Plans, Inc.\", \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"Bienvivir Senior Health Services\", \"Blue Cross Blue Shield of Michigan\", \"Blue Cross and Blue Shield of Alabama\", \"Blue Cross and Blue Shield of Illinois\", \"Blue Cross and Blue Shield of Montana\", \"Blue Cross and Blue Shield of New Mexico\", \"Blue Cross and Blue Shield of Texas\", \"Blue Shield of California\", \"BlueCross BlueShield of Tennessee\", \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"Brand New Day\", \"Brandman Centers for Senior Care (BCSC)\", \"BridgeSpan Health Company\", \"Bright Health\", \"CHRISTUS Health Plan\", \"CalOptima\", \"CalViva Health\", \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"Care N' Care Health Plan\", \"CareFirst BCBS\", \"CareOregon\", \"Cascade Health Alliance, LLC\", \"Catholic Health LIFE\", \"CenCal Health\", \"Centene Corporation\", \"Center for Elders Independence\", \"CenterLight Healthcare\", \"Centers Plan for Healthy Living (CPHL)\", \"Centers for Medicare and Medicaid Services (CMS)\", \"Central California Alliance for Health\", \"Central Health Plan of California, Inc.\", \"Chinese Community Health Plan\", \"Cigna Corporation\", \"Clover Health\", \"Community Care Health Plan\", \"Community First Health Plans\", \"Community Health Choice, Inc. (CHC)\", \"Community Health Group\", \"Community Health Plan of Washington (CHPW)\", \"Complete Senior Care\", \"ConnectiCare, Inc.\", \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"Contra Costa Health Plan\", \"Cook Children's Health Plan (CCHP)\", \"Crystal Run Health Plans\", \"DAKOTACARE\", \"Devoted Health\", \"Driscoll Health Plan\", \"EMI Health\", \"Eddy SeniorCare\", \"El Paso First Health Plans\", \"ElderONE\", \"Elderplan, Inc.\", \"Excellus BlueCross BlueShield\", \"Fallon Health\", \"FamilyHealth Center for Older Adults (PACE)\", \"First Medical Health Plan, Inc.\", \"FirstCare Health Plans\", \"Fresno PACE for Seniors\", \"GHI, an EmblemHealth Company\", \"Gary and Mary West PACE\", \"Geisinger Health Plan\", \"Gold Coast Health Plan\", \"Golden State Medicare Health Plan\", \"HIP, an EmblemHealth Company\", \"Health Alliance (fka Health Alliance Medical Plans, Inc.)\", \"Health New England, Inc.\", \"Health Plan of San Joaquin\", \"Health Plan of San Mateo\", \"Healthfirst\", \"Highmark BCBS\", \"Highmark Health\", \"Horizon Blue Cross Blue Shield of New Jersey\", \"Humana Inc.\", \"ICHS PACE\", \"Imperial Health Plan\", \"Independence Blue Cross, LLC (Independence)\", \"Independent Health Association, Inc.\", \"Inland Empire Health Plan\", \"InnovAge\", \"InnovaCare Health Solutions\", \"Inspira LIFE\", \"Inter Valley Health Plan\", \"Kaiser Foundation Health Plan of Washington\", \"Kaiser Foundation Health Plan of the Northwest, Inc.\", \"Kaiser Foundation Health Plan, Inc.\", \"Kaiser Foundation Health Plan, Inc.- Other\", \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"Kalos Health\", \"KelseyCare Advantage\", \"Kern Health Systems, Inc.\", \"L.A. Care Health Plan\", \"LIFE St. Francis\", \"LIFE at Lourdes, Inc.\", \"Lasso Healthcare\", \"LifeWise Health Plan of Washington\", \"Longevity Health Plan\", \"Lutheran Senior LIFE at Jersey City\", \"MAPFRE Puerto Rico\", \"MVP Health Care\", \"Magellan\", \"MediExcel Health Plan\", \"Medicaid\", \"Medical Card System, Inc.\", \"Medicare\", \"Memorial Hermann Health Insurance Company\", \"MetroPlus Health Plan, Inc.\", \"Moda Health\", \"Molina Healthcare\", \"Mutual of Omaha Insurance Company\", \"NY Hotel Trades Council and Hotel Association of NYC\", \"No Insurance\", \"On Lok Lifeways\", \"Optum\", \"Oscar Insurance Corporation\", \"Other\", \"PACE CNY\", \"PacificSource Health Plans\", \"Parkland Community Health Plan\", \"Partners Health Plan\", \"Partnership HealthPlan of California\", \"Physicians Health Plan of Northern Indiana, Inc.\", \"Piedmont Community Health Plan\", \"Plan Medico Bella Vista\", \"Plan de Salud Menonita\", \"Premera Blue Cross\", \"Priority Health\", \"Private Pay\", \"ProCare Advantage\", \"Prominence Health Plan\", \"Providence Health Plan\", \"Redwood Coast PACE\", \"Regence BlueCross BlueShield of Oregon\", \"Regence BlueShield\", \"Regence BlueShield of Idaho\", \"RiverSpring Health\", \"Ryder Health Plan, Inc.\", \"SCAN Health Plan\", \"SIHO Holding, LLC dba SIHO Insurance Services\", \"SIMNSA Health Plan\", \"Samaritan Health Plans\", \"San Diego PACE\", \"San Francisco Health Plan (SFHP)\", \"Santa Clara County dba Valley Health Plan\", \"Santa Clara Family Health Plan\", \"Santa Fe Employe's Hospital Association-Coast Lines\", \"Scott and White Health Plan\", \"Scripps Health Plan\", \"Seaside Health Plan\", \"Sendero Health Plan\", \"Senior Whole Health\", \"Sentara Health Plans, Inc. (fka Optima Health)\", \"Seton Health Plan (dba Dell Children's Health Plan)\", \"Sharp Health Plan\", \"Silver Star Health Network\", \"St. Paul's PACE\", \"Stanford Health Care Advantage\", \"State of California\", \"State of New Jersey\", \"State of New York\", \"State of Oregon\", \"State of Texas\", \"State of Washington\", \"Stockton PACE\", \"Sunrise Advantage Plan\", \"Sutter Health Plus\", \"Sutter SeniorCare\", \"Texas Children's Health Plan\", \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"Total Senior Care, Inc.\", \"Triple-S Management Corporation\", \"True Health New Mexico\", \"Umpqua Health Alliance\", \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"UnitedHealthcare\", \"Univera Healthcare\", \"VNSNY CHOICE\", \"VillageCareMAX\", \"Vitality Health Plan of California\", \"WellCare Health Plans, Inc.\", \"Western Health Advantage\", \"Western Oregon Advanced Health, LLC\", \"Yamhill Community Care Organization\"];",
									"",
									"let age = ld.random(6, 30);",
									"let dob = moment().subtract(9131, 'days').format('MM/DD/YYYY');",
									"",
									"let patientFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let patientLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"let dateTimeStamp = new Date().toISOString();",
									"",
									"pm.environment.set(\"patientFirstName\", patientFirstName);",
									"pm.environment.set(\"patientLastName\", patientLastName);",
									"pm.environment.set(\"patientEmail\", \"qa\" + \"+\" + patientFirstName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPhone\", \"+1 (333) 333-3333\");",
									"pm.environment.set(\"patientPreferredContact\", \"both\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", 25);",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"payorName\", ld.sample(payorList));",
									"pm.environment.set(\"inquiryCreatedDateTime\", dateTimeStamp);",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3b95eef6-e3e6-45a3-a4cf-586b2c2f6b30",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquirerFirstName\": \"\",\n    \"inquirerLastName\": \"\",\n    \"inquirerPhone\": \"\",\n    \"inquirerMobile\": \"\",\n    \"inquirerEmail\": \"\",\n    \"inquirerAbout\": \"myself\",\n    \"relationWithPatient\": \"\",\n    \"preferredContact\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientPhone\": \"{{patientPhone}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"{{patientEmail}}\",\n    \"patientPreferredContact\": \"{{patientPreferredContact}}\",\n    \"contactPatientDirectly\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\",\n    \"payor\": \"{{payorName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-inquiry",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84e32581-2f85-4d35-a6a3-8e2e8ca6a3df",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 4000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task category\", function () {\r",
									"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Inquiry\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task details\", function () {\r",
									"    pm.expect(jsonData.data[0].status.taskStatusId).to.eql(5);\r",
									"    pm.expect(jsonData.data[0].status.taskStatusName).to.eql(\"Closed\");\r",
									"    pm.expect(jsonData.data[0].voidReason).to.eql(\"Not eligible - Wrong age\");\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify task name\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskName).to.eql(pm.variables.get(\"task_name\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_description\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskDescription).to.eql(pm.variables.get(\"task_description\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_assigned_userid\", function () {\r",
									"//     pm.expect(jsonData.taskAssignedUserId).to.eql(pm.variables.get(\"task_assigned_userid\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_createdby_userid\", function () {\r",
									"//    pm.expect(jsonData.taskDescription).to.eql(pm.variables.get(\"task_createdby_userid\"));\r",
									"//});\r",
									"\r",
									"//pm.test(\"Verify task task_due_date\", function () {\r",
									"//    pm.expect(jsonData.taskDueDate).to.eql(pm.variables.get(\"task_due_date\"));\r",
									"//});\r",
									"\r",
									"// pm.test(\"Verify task task_priority_id\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskPriorityId).to.eql(pm.variables.get(\"task_priority_id\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_status_id\", function () {\r",
									"//    pm.expect(jsonData.taskStatusId).to.eql('\"+pm.variables.get(\"task_status_id\")+\"');\r",
									"//});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5a63e9cf-80a7-4cbc-b400-9d438537de53",
								"exec": [
									"// var task_name = pm.variables.get(\"task_name\");\r",
									"// console.log(task_name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7ff7585f-9d2b-4445-a069-11dde655b56e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"composition",
								"tasks"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "a09c4b1e-d107-46e3-b4cf-f6f04de93f63"
		},
		{
			"name": "Verify inquiry task is not closed for patients ages 6-24",
			"item": [
				{
					"name": "add-inquiry-self age 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a384a3ef-f816-458b-b683-daf476901480",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify inquiryExternalId is generated\", function () {",
									"    pm.expect(jsonData.inquiryExternalId).length.greaterThan(0);",
									"});",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"pm.environment.set(\"inquiryExternalId\", jsonData.inquiryExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "857d4449-7876-4c7e-a10e-651cf8cce1ac",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let statesList = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
									"",
									"var equipSourceList;",
									"if (pm.environment.name === \"qa\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equipSourceList);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"const payorList = [\"AIDS Healthcare Foundation\", \"ATRIO Health Plans\", \"Aetna\", \"Affinity Health Plan\", \"AgeRight Advantage Health Plan\", \"AgeWell New York\", \"Alameda Alliance for Health\", \"Alignment Health Plan\", \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"AltaMed PACE\", \"AmeriHealth Insurance Company of New Jersey (AmeriHealth) and AmeriHealth HMO, Inc.\", \"Amida Care\", \"Anthem, Inc.\", \"Arkansas Blue Cross and Blue Shield\", \"Aspire Health Plan\", \"Asuris Northwest Health\", \"Atlanticare LIFE Connection\", \"Auxilio Salud Plus\", \"Avera Health Plans, Inc.\", \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"Bienvivir Senior Health Services\", \"Blue Cross Blue Shield of Michigan\", \"Blue Cross and Blue Shield of Alabama\", \"Blue Cross and Blue Shield of Illinois\", \"Blue Cross and Blue Shield of Montana\", \"Blue Cross and Blue Shield of New Mexico\", \"Blue Cross and Blue Shield of Texas\", \"Blue Shield of California\", \"BlueCross BlueShield of Tennessee\", \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"Brand New Day\", \"Brandman Centers for Senior Care (BCSC)\", \"BridgeSpan Health Company\", \"Bright Health\", \"CHRISTUS Health Plan\", \"CalOptima\", \"CalViva Health\", \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"Care N' Care Health Plan\", \"CareFirst BCBS\", \"CareOregon\", \"Cascade Health Alliance, LLC\", \"Catholic Health LIFE\", \"CenCal Health\", \"Centene Corporation\", \"Center for Elders Independence\", \"CenterLight Healthcare\", \"Centers Plan for Healthy Living (CPHL)\", \"Centers for Medicare and Medicaid Services (CMS)\", \"Central California Alliance for Health\", \"Central Health Plan of California, Inc.\", \"Chinese Community Health Plan\", \"Cigna Corporation\", \"Clover Health\", \"Community Care Health Plan\", \"Community First Health Plans\", \"Community Health Choice, Inc. (CHC)\", \"Community Health Group\", \"Community Health Plan of Washington (CHPW)\", \"Complete Senior Care\", \"ConnectiCare, Inc.\", \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"Contra Costa Health Plan\", \"Cook Children's Health Plan (CCHP)\", \"Crystal Run Health Plans\", \"DAKOTACARE\", \"Devoted Health\", \"Driscoll Health Plan\", \"EMI Health\", \"Eddy SeniorCare\", \"El Paso First Health Plans\", \"ElderONE\", \"Elderplan, Inc.\", \"Excellus BlueCross BlueShield\", \"Fallon Health\", \"FamilyHealth Center for Older Adults (PACE)\", \"First Medical Health Plan, Inc.\", \"FirstCare Health Plans\", \"Fresno PACE for Seniors\", \"GHI, an EmblemHealth Company\", \"Gary and Mary West PACE\", \"Geisinger Health Plan\", \"Gold Coast Health Plan\", \"Golden State Medicare Health Plan\", \"HIP, an EmblemHealth Company\", \"Health Alliance (fka Health Alliance Medical Plans, Inc.)\", \"Health New England, Inc.\", \"Health Plan of San Joaquin\", \"Health Plan of San Mateo\", \"Healthfirst\", \"Highmark BCBS\", \"Highmark Health\", \"Horizon Blue Cross Blue Shield of New Jersey\", \"Humana Inc.\", \"ICHS PACE\", \"Imperial Health Plan\", \"Independence Blue Cross, LLC (Independence)\", \"Independent Health Association, Inc.\", \"Inland Empire Health Plan\", \"InnovAge\", \"InnovaCare Health Solutions\", \"Inspira LIFE\", \"Inter Valley Health Plan\", \"Kaiser Foundation Health Plan of Washington\", \"Kaiser Foundation Health Plan of the Northwest, Inc.\", \"Kaiser Foundation Health Plan, Inc.\", \"Kaiser Foundation Health Plan, Inc.- Other\", \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"Kalos Health\", \"KelseyCare Advantage\", \"Kern Health Systems, Inc.\", \"L.A. Care Health Plan\", \"LIFE St. Francis\", \"LIFE at Lourdes, Inc.\", \"Lasso Healthcare\", \"LifeWise Health Plan of Washington\", \"Longevity Health Plan\", \"Lutheran Senior LIFE at Jersey City\", \"MAPFRE Puerto Rico\", \"MVP Health Care\", \"Magellan\", \"MediExcel Health Plan\", \"Medicaid\", \"Medical Card System, Inc.\", \"Medicare\", \"Memorial Hermann Health Insurance Company\", \"MetroPlus Health Plan, Inc.\", \"Moda Health\", \"Molina Healthcare\", \"Mutual of Omaha Insurance Company\", \"NY Hotel Trades Council and Hotel Association of NYC\", \"No Insurance\", \"On Lok Lifeways\", \"Optum\", \"Oscar Insurance Corporation\", \"Other\", \"PACE CNY\", \"PacificSource Health Plans\", \"Parkland Community Health Plan\", \"Partners Health Plan\", \"Partnership HealthPlan of California\", \"Physicians Health Plan of Northern Indiana, Inc.\", \"Piedmont Community Health Plan\", \"Plan Medico Bella Vista\", \"Plan de Salud Menonita\", \"Premera Blue Cross\", \"Priority Health\", \"Private Pay\", \"ProCare Advantage\", \"Prominence Health Plan\", \"Providence Health Plan\", \"Redwood Coast PACE\", \"Regence BlueCross BlueShield of Oregon\", \"Regence BlueShield\", \"Regence BlueShield of Idaho\", \"RiverSpring Health\", \"Ryder Health Plan, Inc.\", \"SCAN Health Plan\", \"SIHO Holding, LLC dba SIHO Insurance Services\", \"SIMNSA Health Plan\", \"Samaritan Health Plans\", \"San Diego PACE\", \"San Francisco Health Plan (SFHP)\", \"Santa Clara County dba Valley Health Plan\", \"Santa Clara Family Health Plan\", \"Santa Fe Employe's Hospital Association-Coast Lines\", \"Scott and White Health Plan\", \"Scripps Health Plan\", \"Seaside Health Plan\", \"Sendero Health Plan\", \"Senior Whole Health\", \"Sentara Health Plans, Inc. (fka Optima Health)\", \"Seton Health Plan (dba Dell Children's Health Plan)\", \"Sharp Health Plan\", \"Silver Star Health Network\", \"St. Paul's PACE\", \"Stanford Health Care Advantage\", \"State of California\", \"State of New Jersey\", \"State of New York\", \"State of Oregon\", \"State of Texas\", \"State of Washington\", \"Stockton PACE\", \"Sunrise Advantage Plan\", \"Sutter Health Plus\", \"Sutter SeniorCare\", \"Texas Children's Health Plan\", \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"Total Senior Care, Inc.\", \"Triple-S Management Corporation\", \"True Health New Mexico\", \"Umpqua Health Alliance\", \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"UnitedHealthcare\", \"Univera Healthcare\", \"VNSNY CHOICE\", \"VillageCareMAX\", \"Vitality Health Plan of California\", \"WellCare Health Plans, Inc.\", \"Western Health Advantage\", \"Western Oregon Advanced Health, LLC\", \"Yamhill Community Care Organization\"];",
									"",
									"let age = ld.random(6, 30);",
									"let dob = moment().subtract(2191, 'days').format('MM/DD/YYYY');",
									"",
									"let patientFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let patientLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"let dateTimeStamp = new Date().toISOString();",
									"",
									"pm.environment.set(\"patientFirstName\", patientFirstName);",
									"pm.environment.set(\"patientLastName\", patientLastName);",
									"pm.environment.set(\"patientEmail\", \"qa\" + \"+\" + patientFirstName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPhone\", \"+1 (333) 333-3333\");",
									"pm.environment.set(\"patientPreferredContact\", \"both\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", 25);",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"payorName\", ld.sample(payorList));",
									"pm.environment.set(\"inquiryCreatedDateTime\", dateTimeStamp);",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "00362ce6-0890-41f1-92b4-ff489087e9f2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquirerFirstName\": \"\",\n    \"inquirerLastName\": \"\",\n    \"inquirerPhone\": \"\",\n    \"inquirerMobile\": \"\",\n    \"inquirerEmail\": \"\",\n    \"inquirerAbout\": \"myself\",\n    \"relationWithPatient\": \"\",\n    \"preferredContact\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientPhone\": \"{{patientPhone}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"{{patientEmail}}\",\n    \"patientPreferredContact\": \"{{patientPreferredContact}}\",\n    \"contactPatientDirectly\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\",\n    \"payor\": \"{{payorName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-inquiry",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e701be1e-afed-466a-9a43-f7409df7f291",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 4000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task category\", function () {\r",
									"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Inquiry\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task details\", function () {\r",
									"    pm.expect(jsonData.data[0].status.taskStatusId).to.eql(1);\r",
									"    pm.expect(jsonData.data[0].status.taskStatusName).to.eql(\"To do\");\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify task name\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskName).to.eql(pm.variables.get(\"task_name\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_description\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskDescription).to.eql(pm.variables.get(\"task_description\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_assigned_userid\", function () {\r",
									"//     pm.expect(jsonData.taskAssignedUserId).to.eql(pm.variables.get(\"task_assigned_userid\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_createdby_userid\", function () {\r",
									"//    pm.expect(jsonData.taskDescription).to.eql(pm.variables.get(\"task_createdby_userid\"));\r",
									"//});\r",
									"\r",
									"//pm.test(\"Verify task task_due_date\", function () {\r",
									"//    pm.expect(jsonData.taskDueDate).to.eql(pm.variables.get(\"task_due_date\"));\r",
									"//});\r",
									"\r",
									"// pm.test(\"Verify task task_priority_id\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskPriorityId).to.eql(pm.variables.get(\"task_priority_id\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_status_id\", function () {\r",
									"//    pm.expect(jsonData.taskStatusId).to.eql('\"+pm.variables.get(\"task_status_id\")+\"');\r",
									"//});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0040e6ae-b5e0-41cc-93d9-85d93b318674",
								"exec": [
									"// var task_name = pm.variables.get(\"task_name\");\r",
									"// console.log(task_name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "13908d52-aa00-4987-b29a-aea8df3a2a5e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"composition",
								"tasks"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add-inquiry-self age 24",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8becf7c3-ccf3-46b0-875b-481f8acacb2a",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify inquiryExternalId is generated\", function () {",
									"    pm.expect(jsonData.inquiryExternalId).length.greaterThan(0);",
									"});",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"pm.environment.set(\"inquiryExternalId\", jsonData.inquiryExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d4f516df-30a1-4846-8005-2e34e4b2eab0",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let statesList = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
									"",
									"var equipSourceList;",
									"if (pm.environment.name === \"qa\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equipSourceList);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"const payorList = [\"AIDS Healthcare Foundation\", \"ATRIO Health Plans\", \"Aetna\", \"Affinity Health Plan\", \"AgeRight Advantage Health Plan\", \"AgeWell New York\", \"Alameda Alliance for Health\", \"Alignment Health Plan\", \"AllCare IPA, fka Mid Rogue IPA HealthPlan\", \"AltaMed PACE\", \"AmeriHealth Insurance Company of New Jersey (AmeriHealth) and AmeriHealth HMO, Inc.\", \"Amida Care\", \"Anthem, Inc.\", \"Arkansas Blue Cross and Blue Shield\", \"Aspire Health Plan\", \"Asuris Northwest Health\", \"Atlanticare LIFE Connection\", \"Auxilio Salud Plus\", \"Avera Health Plans, Inc.\", \"Beacon Health and Social Service, Inc. dba Beacon of LIFE PACE Program\", \"Bienvivir Senior Health Services\", \"Blue Cross Blue Shield of Michigan\", \"Blue Cross and Blue Shield of Alabama\", \"Blue Cross and Blue Shield of Illinois\", \"Blue Cross and Blue Shield of Montana\", \"Blue Cross and Blue Shield of New Mexico\", \"Blue Cross and Blue Shield of Texas\", \"Blue Shield of California\", \"BlueCross BlueShield of Tennessee\", \"BlueCross BlueShield of Western New York and BlueShield of Northeastern New York\", \"Brand New Day\", \"Brandman Centers for Senior Care (BCSC)\", \"BridgeSpan Health Company\", \"Bright Health\", \"CHRISTUS Health Plan\", \"CalOptima\", \"CalViva Health\", \"Capital District Physicians' Health Plan, Inc. (CDPHP)\", \"Care N' Care Health Plan\", \"CareFirst BCBS\", \"CareOregon\", \"Cascade Health Alliance, LLC\", \"Catholic Health LIFE\", \"CenCal Health\", \"Centene Corporation\", \"Center for Elders Independence\", \"CenterLight Healthcare\", \"Centers Plan for Healthy Living (CPHL)\", \"Centers for Medicare and Medicaid Services (CMS)\", \"Central California Alliance for Health\", \"Central Health Plan of California, Inc.\", \"Chinese Community Health Plan\", \"Cigna Corporation\", \"Clover Health\", \"Community Care Health Plan\", \"Community First Health Plans\", \"Community Health Choice, Inc. (CHC)\", \"Community Health Group\", \"Community Health Plan of Washington (CHPW)\", \"Complete Senior Care\", \"ConnectiCare, Inc.\", \"Consolidated Association of Railroad Employees Health Care (CARE)\", \"Contra Costa Health Plan\", \"Cook Children's Health Plan (CCHP)\", \"Crystal Run Health Plans\", \"DAKOTACARE\", \"Devoted Health\", \"Driscoll Health Plan\", \"EMI Health\", \"Eddy SeniorCare\", \"El Paso First Health Plans\", \"ElderONE\", \"Elderplan, Inc.\", \"Excellus BlueCross BlueShield\", \"Fallon Health\", \"FamilyHealth Center for Older Adults (PACE)\", \"First Medical Health Plan, Inc.\", \"FirstCare Health Plans\", \"Fresno PACE for Seniors\", \"GHI, an EmblemHealth Company\", \"Gary and Mary West PACE\", \"Geisinger Health Plan\", \"Gold Coast Health Plan\", \"Golden State Medicare Health Plan\", \"HIP, an EmblemHealth Company\", \"Health Alliance (fka Health Alliance Medical Plans, Inc.)\", \"Health New England, Inc.\", \"Health Plan of San Joaquin\", \"Health Plan of San Mateo\", \"Healthfirst\", \"Highmark BCBS\", \"Highmark Health\", \"Horizon Blue Cross Blue Shield of New Jersey\", \"Humana Inc.\", \"ICHS PACE\", \"Imperial Health Plan\", \"Independence Blue Cross, LLC (Independence)\", \"Independent Health Association, Inc.\", \"Inland Empire Health Plan\", \"InnovAge\", \"InnovaCare Health Solutions\", \"Inspira LIFE\", \"Inter Valley Health Plan\", \"Kaiser Foundation Health Plan of Washington\", \"Kaiser Foundation Health Plan of the Northwest, Inc.\", \"Kaiser Foundation Health Plan, Inc.\", \"Kaiser Foundation Health Plan, Inc.- Other\", \"Kaiser Foundation Health Plan, Inc.- SoCal\", \"Kalos Health\", \"KelseyCare Advantage\", \"Kern Health Systems, Inc.\", \"L.A. Care Health Plan\", \"LIFE St. Francis\", \"LIFE at Lourdes, Inc.\", \"Lasso Healthcare\", \"LifeWise Health Plan of Washington\", \"Longevity Health Plan\", \"Lutheran Senior LIFE at Jersey City\", \"MAPFRE Puerto Rico\", \"MVP Health Care\", \"Magellan\", \"MediExcel Health Plan\", \"Medicaid\", \"Medical Card System, Inc.\", \"Medicare\", \"Memorial Hermann Health Insurance Company\", \"MetroPlus Health Plan, Inc.\", \"Moda Health\", \"Molina Healthcare\", \"Mutual of Omaha Insurance Company\", \"NY Hotel Trades Council and Hotel Association of NYC\", \"No Insurance\", \"On Lok Lifeways\", \"Optum\", \"Oscar Insurance Corporation\", \"Other\", \"PACE CNY\", \"PacificSource Health Plans\", \"Parkland Community Health Plan\", \"Partners Health Plan\", \"Partnership HealthPlan of California\", \"Physicians Health Plan of Northern Indiana, Inc.\", \"Piedmont Community Health Plan\", \"Plan Medico Bella Vista\", \"Plan de Salud Menonita\", \"Premera Blue Cross\", \"Priority Health\", \"Private Pay\", \"ProCare Advantage\", \"Prominence Health Plan\", \"Providence Health Plan\", \"Redwood Coast PACE\", \"Regence BlueCross BlueShield of Oregon\", \"Regence BlueShield\", \"Regence BlueShield of Idaho\", \"RiverSpring Health\", \"Ryder Health Plan, Inc.\", \"SCAN Health Plan\", \"SIHO Holding, LLC dba SIHO Insurance Services\", \"SIMNSA Health Plan\", \"Samaritan Health Plans\", \"San Diego PACE\", \"San Francisco Health Plan (SFHP)\", \"Santa Clara County dba Valley Health Plan\", \"Santa Clara Family Health Plan\", \"Santa Fe Employe's Hospital Association-Coast Lines\", \"Scott and White Health Plan\", \"Scripps Health Plan\", \"Seaside Health Plan\", \"Sendero Health Plan\", \"Senior Whole Health\", \"Sentara Health Plans, Inc. (fka Optima Health)\", \"Seton Health Plan (dba Dell Children's Health Plan)\", \"Sharp Health Plan\", \"Silver Star Health Network\", \"St. Paul's PACE\", \"Stanford Health Care Advantage\", \"State of California\", \"State of New Jersey\", \"State of New York\", \"State of Oregon\", \"State of Texas\", \"State of Washington\", \"Stockton PACE\", \"Sunrise Advantage Plan\", \"Sutter Health Plus\", \"Sutter SeniorCare\", \"Texas Children's Health Plan\", \"The Basics at Jan Werner (fka Jan Werner Adult Day Care Center)\", \"Total Senior Care, Inc.\", \"Triple-S Management Corporation\", \"True Health New Mexico\", \"Umpqua Health Alliance\", \"Union Pacific Railroad Employes Health Systems (UPREHS)\", \"UnitedHealthcare\", \"Univera Healthcare\", \"VNSNY CHOICE\", \"VillageCareMAX\", \"Vitality Health Plan of California\", \"WellCare Health Plans, Inc.\", \"Western Health Advantage\", \"Western Oregon Advanced Health, LLC\", \"Yamhill Community Care Organization\"];",
									"",
									"let age = ld.random(6, 30);",
									"let dob = moment().subtract(9130, 'days').format('MM/DD/YYYY');",
									"",
									"let patientFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let patientLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"let dateTimeStamp = new Date().toISOString();",
									"",
									"pm.environment.set(\"patientFirstName\", patientFirstName);",
									"pm.environment.set(\"patientLastName\", patientLastName);",
									"pm.environment.set(\"patientEmail\", \"qa\" + \"+\" + patientFirstName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPhone\", \"+1 (333) 333-3333\");",
									"pm.environment.set(\"patientPreferredContact\", \"both\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", 25);",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"payorName\", ld.sample(payorList));",
									"pm.environment.set(\"inquiryCreatedDateTime\", dateTimeStamp);",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d084f2f2-3be0-4b38-a9cc-2f37c1722b77",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquirerFirstName\": \"\",\n    \"inquirerLastName\": \"\",\n    \"inquirerPhone\": \"\",\n    \"inquirerMobile\": \"\",\n    \"inquirerEmail\": \"\",\n    \"inquirerAbout\": \"myself\",\n    \"relationWithPatient\": \"\",\n    \"preferredContact\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientPhone\": \"{{patientPhone}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"{{patientEmail}}\",\n    \"patientPreferredContact\": \"{{patientPreferredContact}}\",\n    \"contactPatientDirectly\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\",\n    \"payor\": \"{{payorName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-inquiry",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8995d96-a0a8-49d5-977b-0b9c134e6543",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 4000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task category\", function () {\r",
									"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Inquiry\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task details\", function () {\r",
									"    pm.expect(jsonData.data[0].status.taskStatusId).to.eql(1);\r",
									"    pm.expect(jsonData.data[0].status.taskStatusName).to.eql(\"To do\");\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify task name\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskName).to.eql(pm.variables.get(\"task_name\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_description\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskDescription).to.eql(pm.variables.get(\"task_description\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_assigned_userid\", function () {\r",
									"//     pm.expect(jsonData.taskAssignedUserId).to.eql(pm.variables.get(\"task_assigned_userid\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_createdby_userid\", function () {\r",
									"//    pm.expect(jsonData.taskDescription).to.eql(pm.variables.get(\"task_createdby_userid\"));\r",
									"//});\r",
									"\r",
									"//pm.test(\"Verify task task_due_date\", function () {\r",
									"//    pm.expect(jsonData.taskDueDate).to.eql(pm.variables.get(\"task_due_date\"));\r",
									"//});\r",
									"\r",
									"// pm.test(\"Verify task task_priority_id\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskPriorityId).to.eql(pm.variables.get(\"task_priority_id\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_status_id\", function () {\r",
									"//    pm.expect(jsonData.taskStatusId).to.eql('\"+pm.variables.get(\"task_status_id\")+\"');\r",
									"//});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "35f9f0d0-9855-42d2-93db-17a2b2d893c9",
								"exec": [
									"// var task_name = pm.variables.get(\"task_name\");\r",
									"// console.log(task_name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b9b31c4f-ae52-4f58-998a-671e6e73cafb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"composition",
								"tasks"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "b2ce4445-15f5-4eaf-a6bc-36a212cd47c9"
		},
		{
			"name": "Verify referral task is not closed for patients ages out of ages 6-24",
			"item": [
				{
					"name": "add-referral-Direct below age 6",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d1b513e4-3325-417d-9710-5f2ff650eb4b",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let statesList = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
									"",
									"var equipSourceList;",
									"if (pm.environment.name === \"qa\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equipSourceList);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"let age = ld.random(18, 40);",
									"let dob = moment().subtract(2190, 'days').format('MM/DD/YYYY');",
									"",
									"let referrerFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let referrerLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"pm.environment.set(\"referrerFirstName\", referrerFirstName);",
									"pm.environment.set(\"referrerLastName\", referrerLastName);",
									"pm.environment.set(\"referrerEmail\", \"qa\" + \"+\" + referrerFirstName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"referrerMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"referrerPhone\", \"+1 (122) 222-2222\");",
									"pm.environment.set(\"patientFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set(\"patientLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", age);",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPhone\", \"+1 (916) 258-4561\");",
									"pm.environment.set(\"contactPatientDirectly\", \"Direct\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"affiliationCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"affiliationState\", ld.sample(statesList));",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2d2a054d-08a8-4f4e-a4d9-29261caa5410",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify referralExternalId is generated\", function () {",
									"    pm.expect(jsonData.referralExternalId).length.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"referralExternalId\", jsonData.referralExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "511d5158-c5a3-4eac-9dc7-7b73b979c26f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"referrerFirstName\": \"{{referrerFirstName}}\",\n    \"referrerLastName\": \"{{referrerLastName}}\",\n    \"referrerPhone\": \"{{referrerPhone}}\",\n    \"referrerMobile\": \"{{referrerMobile}}\",\n    \"referrerEmail\": \"{{referrerEmail}}\",\n    \"relationWithPatient\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientPhone\": \"{{patientPhone}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"\",\n    \"patientPreferredContact\": \"\",\n    \"contactPatientDirectly\": \"Yes\",\n    \"carerName\": \"\",\n    \"carerPhone\": \"\",\n    \"carerMobile\": \"\",\n    \"carerEmail\": \"\",\n    \"carerPreferredContact\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"affiliationList\": [\n        {\n            \"name\": \"Google inc. india pvt ltd\",\n            \"latitude\": \"2\",\n            \"longitude\": \"3\",\n            \"addressLine1\": \"111 8th Ave\",\n            \"addressLine2\": \"APT 1074\",\n            \"city\": \"{{affiliationCity}}\",\n            \"state\": \"{{affiliationState}}\",\n            \"zipCode\": \"85283\"\n        }\n    ],\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-referral",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-referral"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aae40bbd-98f6-4303-9465-0efe0e767d31",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 4000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task category\", function () {\r",
									"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Referral\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task details\", function () {\r",
									"    pm.expect(jsonData.data[0].status.taskStatusId).to.eql(1);\r",
									"    pm.expect(jsonData.data[0].status.taskStatusName).to.eql(\"To do\");\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify task name\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskName).to.eql(pm.variables.get(\"task_name\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_description\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskDescription).to.eql(pm.variables.get(\"task_description\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_assigned_userid\", function () {\r",
									"//     pm.expect(jsonData.taskAssignedUserId).to.eql(pm.variables.get(\"task_assigned_userid\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_createdby_userid\", function () {\r",
									"//    pm.expect(jsonData.taskDescription).to.eql(pm.variables.get(\"task_createdby_userid\"));\r",
									"//});\r",
									"\r",
									"\r",
									"//pm.test(\"Verify task task_due_date\", function () {\r",
									"//    pm.expect(jsonData.taskDueDate).to.eql(pm.variables.get(\"task_due_date\"));\r",
									"//});\r",
									"\r",
									"// pm.test(\"Verify task task_priority_id\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskPriorityId).to.eql(pm.variables.get(\"task_priority_id\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_status_id\", function () {\r",
									"//    pm.expect(jsonData.taskStatusId).to.eql('\"+pm.variables.get(\"task_status_id\")+\"');\r",
									"//});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d55f6ef2-b22b-48e8-b8e5-9e06cd8a4cd7",
								"exec": [
									"// var task_name = pm.variables.get(\"task_name\");\r",
									"// console.log(task_name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "60260f21-bd12-4a87-9a5e-9aee26f03bdd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"composition",
								"tasks"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add-referral-Direct age 6",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "dfbc3328-8f01-44de-8c29-634d39b59879",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let statesList = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
									"",
									"var equipSourceList;",
									"if (pm.environment.name === \"qa\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equipSourceList);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"let age = ld.random(18, 40);",
									"let dob = moment().subtract(2191, 'days').format('MM/DD/YYYY');",
									"",
									"let referrerFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let referrerLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"pm.environment.set(\"referrerFirstName\", referrerFirstName);",
									"pm.environment.set(\"referrerLastName\", referrerLastName);",
									"pm.environment.set(\"referrerEmail\", \"qa\" + \"+\" + referrerFirstName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"referrerMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"referrerPhone\", \"+1 (122) 222-2222\");",
									"pm.environment.set(\"patientFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set(\"patientLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", age);",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPhone\", \"+1 (916) 258-4561\");",
									"pm.environment.set(\"contactPatientDirectly\", \"Direct\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"affiliationCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"affiliationState\", ld.sample(statesList));",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6f854690-7b78-407e-83d3-cbe27ff0689b",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify referralExternalId is generated\", function () {",
									"    pm.expect(jsonData.referralExternalId).length.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"referralExternalId\", jsonData.referralExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "03c36d4b-6aa4-4c93-a09c-49fab01dfff1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"referrerFirstName\": \"{{referrerFirstName}}\",\n    \"referrerLastName\": \"{{referrerLastName}}\",\n    \"referrerPhone\": \"{{referrerPhone}}\",\n    \"referrerMobile\": \"{{referrerMobile}}\",\n    \"referrerEmail\": \"{{referrerEmail}}\",\n    \"relationWithPatient\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientPhone\": \"{{patientPhone}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"\",\n    \"patientPreferredContact\": \"\",\n    \"contactPatientDirectly\": \"Yes\",\n    \"carerName\": \"\",\n    \"carerPhone\": \"\",\n    \"carerMobile\": \"\",\n    \"carerEmail\": \"\",\n    \"carerPreferredContact\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"affiliationList\": [\n        {\n            \"name\": \"Google inc. india pvt ltd\",\n            \"latitude\": \"2\",\n            \"longitude\": \"3\",\n            \"addressLine1\": \"111 8th Ave\",\n            \"addressLine2\": \"APT 1074\",\n            \"city\": \"{{affiliationCity}}\",\n            \"state\": \"{{affiliationState}}\",\n            \"zipCode\": \"85283\"\n        }\n    ],\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-referral",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-referral"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf458a8e-94eb-46d3-bd28-e1b20284cfdc",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 4000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task category\", function () {\r",
									"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Referral\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task details\", function () {\r",
									"    pm.expect(jsonData.data[0].status.taskStatusId).to.eql(1);\r",
									"    pm.expect(jsonData.data[0].status.taskStatusName).to.eql(\"To do\");\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify task name\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskName).to.eql(pm.variables.get(\"task_name\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_description\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskDescription).to.eql(pm.variables.get(\"task_description\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_assigned_userid\", function () {\r",
									"//     pm.expect(jsonData.taskAssignedUserId).to.eql(pm.variables.get(\"task_assigned_userid\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_createdby_userid\", function () {\r",
									"//    pm.expect(jsonData.taskDescription).to.eql(pm.variables.get(\"task_createdby_userid\"));\r",
									"//});\r",
									"\r",
									"//pm.test(\"Verify task task_due_date\", function () {\r",
									"//    pm.expect(jsonData.taskDueDate).to.eql(pm.variables.get(\"task_due_date\"));\r",
									"//});\r",
									"\r",
									"// pm.test(\"Verify task task_priority_id\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskPriorityId).to.eql(pm.variables.get(\"task_priority_id\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_status_id\", function () {\r",
									"//    pm.expect(jsonData.taskStatusId).to.eql('\"+pm.variables.get(\"task_status_id\")+\"');\r",
									"//});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "079f53f7-cd49-4032-b3c2-44c1c17f7cef",
								"exec": [
									"// var task_name = pm.variables.get(\"task_name\");\r",
									"// console.log(task_name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ea39d78c-5610-4ebb-b0a0-888d2a876388",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"composition",
								"tasks"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add-referral-Direct above age 24",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0ae10698-aee0-4bf7-bc54-80cbb4c9935b",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let statesList = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
									"",
									"var equipSourceList;",
									"if (pm.environment.name === \"qa\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equipSourceList);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"let age = ld.random(18, 40);",
									"let dob = moment().subtract(8766, 'days').format('MM/DD/YYYY');",
									"",
									"let referrerFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let referrerLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"pm.environment.set(\"referrerFirstName\", referrerFirstName);",
									"pm.environment.set(\"referrerLastName\", referrerLastName);",
									"pm.environment.set(\"referrerEmail\", \"qa\" + \"+\" + referrerFirstName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"referrerMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"referrerPhone\", \"+1 (122) 222-2222\");",
									"pm.environment.set(\"patientFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set(\"patientLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", age);",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPhone\", \"+1 (916) 258-4561\");",
									"pm.environment.set(\"contactPatientDirectly\", \"Direct\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"affiliationCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"affiliationState\", ld.sample(statesList));",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "146f4d31-1937-4c5e-85e3-7fde096aaf68",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify referralExternalId is generated\", function () {",
									"    pm.expect(jsonData.referralExternalId).length.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"referralExternalId\", jsonData.referralExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "744a4466-8714-4f6e-b0a8-57b765972449",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"referrerFirstName\": \"{{referrerFirstName}}\",\n    \"referrerLastName\": \"{{referrerLastName}}\",\n    \"referrerPhone\": \"{{referrerPhone}}\",\n    \"referrerMobile\": \"{{referrerMobile}}\",\n    \"referrerEmail\": \"{{referrerEmail}}\",\n    \"relationWithPatient\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientPhone\": \"{{patientPhone}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"\",\n    \"patientPreferredContact\": \"\",\n    \"contactPatientDirectly\": \"Yes\",\n    \"carerName\": \"\",\n    \"carerPhone\": \"\",\n    \"carerMobile\": \"\",\n    \"carerEmail\": \"\",\n    \"carerPreferredContact\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"affiliationList\": [\n        {\n            \"name\": \"Google inc. india pvt ltd\",\n            \"latitude\": \"2\",\n            \"longitude\": \"3\",\n            \"addressLine1\": \"111 8th Ave\",\n            \"addressLine2\": \"APT 1074\",\n            \"city\": \"{{affiliationCity}}\",\n            \"state\": \"{{affiliationState}}\",\n            \"zipCode\": \"85283\"\n        }\n    ],\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-referral",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-referral"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3d71ba99-82e0-4f64-8bfb-0fe4f08a383e",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 4000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task category\", function () {\r",
									"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Referral\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task details\", function () {\r",
									"    pm.expect(jsonData.data[0].status.taskStatusId).to.eql(1);\r",
									"    pm.expect(jsonData.data[0].status.taskStatusName).to.eql(\"To do\");\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify task name\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskName).to.eql(pm.variables.get(\"task_name\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_description\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskDescription).to.eql(pm.variables.get(\"task_description\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_assigned_userid\", function () {\r",
									"//     pm.expect(jsonData.taskAssignedUserId).to.eql(pm.variables.get(\"task_assigned_userid\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_createdby_userid\", function () {\r",
									"//    pm.expect(jsonData.taskDescription).to.eql(pm.variables.get(\"task_createdby_userid\"));\r",
									"//});\r",
									"\r",
									"\r",
									"//pm.test(\"Verify task task_due_date\", function () {\r",
									"//    pm.expect(jsonData.taskDueDate).to.eql(pm.variables.get(\"task_due_date\"));\r",
									"//});\r",
									"\r",
									"// pm.test(\"Verify task task_priority_id\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskPriorityId).to.eql(pm.variables.get(\"task_priority_id\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_status_id\", function () {\r",
									"//    pm.expect(jsonData.taskStatusId).to.eql('\"+pm.variables.get(\"task_status_id\")+\"');\r",
									"//});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b749a077-4788-4f7c-bfc5-951f29cbffa4",
								"exec": [
									"// var task_name = pm.variables.get(\"task_name\");\r",
									"// console.log(task_name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "73455d64-dedf-4f67-b4ef-572b67bec53b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"composition",
								"tasks"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add-referral-Direct age 24",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "acb16f62-1d18-4636-88b3-a5f2ff029df9",
								"exec": [
									"let moment = require('moment');",
									"let ld = require('lodash');",
									"",
									"let statesList = [  \"Alaska\",  \"Alabama\",  \"Arizona\",  \"Arkansas\",  \"California\",  \"Colorado\",  \"Connecticut\",  \"Delaware\",  \"District of Columbia\",  \"Florida\",  \"Georgia\",  \"Hawaii\",  \"Idaho\",  \"Illinois\",  \"Indiana\",  \"Iowa\",  \"Kansas\",  \"Kentucky\",  \"Louisiana\",  \"Maine\",  \"Maryland\",  \"Massachusetts\",  \"Michigan\",  \"Minnesota\",  \"Mississippi\",  \"Missouri\",  \"Montana\",  \"Nebraska\",  \"Nevada\",  \"New Hampshire\",  \"New Jersey\",  \"New Mexico\",  \"New York\",  \"North Carolina\",  \"North Dakota\",  \"Ohio\",  \"Oklahoma\",  \"Oregon\",  \"Pennsylvania\",  \"Puerto Rico\",  \"Rhode Island\",  \"South Carolina\",  \"South Dakota\",  \"Tennessee\",  \"Texas\",  \"Utah\",  \"Vermont\",  \"Virginia\",  \"Washington\",  \"West Virginia\",  \"Wisconsin\",  \"Wyoming\",  \"Outside US\",  \"Unknown\"];",
									"",
									"var equipSourceList;",
									"if (pm.environment.name === \"qa\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"b0548d60-6706-66f4-39ce-64244ac9b488\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"73d0851d-ef86-3fde-eb42-e76456cc06bc\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"e78a85ff-d5bb-e9b6-aa52-4207f4514579\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"03b05531-9533-334c-18cf-788ef65a54f2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"537513f8-9f48-a8d5-28c5-df4292aaae9f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"69e56306-2342-8564-0d97-dfa0ac133a2e\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"20331916-2e8c-8e23-6fef-2d7051594e8d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"da1241be-41f5-bd47-1c58-53b22d71dacd\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"5e58b996-1a5a-19d6-b0ee-ca47d2898055\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"d212a73b-8e40-0c7d-b040-86cf1d1457b1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"f5968f05-8073-23e5-2e70-343d65100791\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"9fb76684-e848-69d9-e2d8-b576fc815f2f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"cf6a2fca-837e-bdb2-421a-9e7676bedb77\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"ccab06ed-4abd-682e-a49a-a6a0c01cd225\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"3df90a84-dcaf-2490-0135-f5a843991ed7\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"edf08f1b-9c83-f220-a240-d1cada96eb60\"",
									"        }",
									"    ];",
									"}",
									"else if (pm.environment.name === \"dev\") {",
									"    equipSourceList = [",
									"        {",
									"            \"equip_source_name\": \"Dietitian\",",
									"            \"equip_source_external_id\": \"78b47636-5172-758f-8385-9725544f1a27\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Doctor\\/clinician\",",
									"            \"equip_source_external_id\": \"c3e7e93d-89d9-3b66-5299-12ff47bdc7a2\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Eating disorder organization\",",
									"            \"equip_source_external_id\": \"27d60a8e-a74a-32b8-18c9-cd8ca70e84d1\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip employee\",",
									"            \"equip_source_external_id\": \"34cc0d41-9cc4-5bfa-1325-79603b87683d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip event\\/webinar\",",
									"            \"equip_source_external_id\": \"be509e34-811d-708a-00cd-9b13e21f984b\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Equip patient\\/family\",",
									"            \"equip_source_external_id\": \"7411a661-e243-fed8-b509-58c5fcd96f5f\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Friend or family member\",",
									"            \"equip_source_external_id\": \"335da8a6-e12e-85b2-9a19-70c435ff673d\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Google\\/search\",",
									"            \"equip_source_external_id\": \"a0824f84-d5bd-3785-371a-73259f0845f3\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Health insurance\\/payor\",",
									"            \"equip_source_external_id\": \"79673f1c-b875-2b44-25e0-70908d982fb4\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Hospital\\/medical center\",",
									"            \"equip_source_external_id\": \"46c0fcde-3e98-1d3c-55e2-13daaffbf1cb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Newsletter\",",
									"            \"equip_source_external_id\": \"acd544bc-263c-8e0e-3956-65731516d082\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Other\",",
									"            \"equip_source_external_id\": \"d5be92a6-6b6f-4024-7055-afdcea602ba5\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Press\",",
									"            \"equip_source_external_id\": \"35d60ffc-1f2a-fa9b-f9fc-199e340a3432\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"School\",",
									"            \"equip_source_external_id\": \"7eba105e-a97f-d018-a8cf-89e102f576eb\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Social media\",",
									"            \"equip_source_external_id\": \"221c88cf-739d-2d87-8cb4-c247e776ec14\"",
									"        },",
									"        {",
									"            \"equip_source_name\": \"Therapist\",",
									"            \"equip_source_external_id\": \"de8df45c-0565-a59c-2623-994ee857e4a3\"",
									"        }",
									"    ];",
									"}",
									"let random_equip_source = ld.sample(equipSourceList);",
									"let equip_source_id = random_equip_source.equip_source_external_id;",
									"let equip_source_name = random_equip_source.equip_source_name;",
									"",
									"let age = ld.random(18, 40);",
									"let dob = moment().subtract(8765, 'days').format('MM/DD/YYYY');",
									"",
									"let referrerFirstName = pm.variables.replaceIn('{{$randomFirstName}}');",
									"let referrerLastName = pm.variables.replaceIn('{{$randomLastName}}');",
									"",
									"pm.environment.set(\"referrerFirstName\", referrerFirstName);",
									"pm.environment.set(\"referrerLastName\", referrerLastName);",
									"pm.environment.set(\"referrerEmail\", \"qa\" + \"+\" + referrerFirstName + \"+\" + Date.now() + \"@equip.health\");",
									"pm.environment.set(\"referrerMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"referrerPhone\", \"+1 (122) 222-2222\");",
									"pm.environment.set(\"patientFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set(\"patientLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.environment.set(\"patientState\", ld.sample(statesList));",
									"pm.environment.set(\"patientDateOfBirth\", dob);",
									"pm.environment.set(\"patientAge\", age);",
									"pm.environment.set(\"patientMobile\", \"+1 (207) 344-4381\");",
									"pm.environment.set(\"patientPhone\", \"+1 (916) 258-4561\");",
									"pm.environment.set(\"contactPatientDirectly\", \"Direct\");",
									"pm.environment.set(\"AdditionalNotes\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"tellUsMore\", pm.variables.replaceIn('{{$randomPhrase}}'));",
									"pm.environment.set(\"equipSourceExternalId\", equip_source_id);",
									"pm.environment.set(\"equipSourceName\", equip_source_name);",
									"pm.environment.set(\"affiliationCity\", pm.variables.replaceIn('{{$randomCity}}'));",
									"pm.environment.set(\"affiliationState\", ld.sample(statesList));",
									"",
									"var assigneeUserId, assigneeUserName;",
									"if (pm.environment.name === \"qa\") {",
									"    pm.environment.set(\"assigneeUserId\", \"f64a7075-a2bb-4c6c-8d2d-b8ac9a7f1ffc\");",
									"    pm.environment.set(\"assigneeUserName\", \"Bala 000analyst\");",
									"} else {",
									"    pm.environment.set(\"assigneeUserId\", \"42bd1c96-995d-45c0-bd0b-cee0e167b864\");",
									"    pm.environment.set(\"assigneeUserName\", \"Balakrishna Deema\");",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "13a48e74-ae0a-4591-a29e-cd69c172b2da",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify referralExternalId is generated\", function () {",
									"    pm.expect(jsonData.referralExternalId).length.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 4000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"pm.environment.set(\"referralExternalId\", jsonData.referralExternalId);",
									"pm.environment.set(\"taskExternalId\", jsonData.taskExternalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8e24c860-5ecc-43f2-8f85-73dba6a91b7a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"referrerFirstName\": \"{{referrerFirstName}}\",\n    \"referrerLastName\": \"{{referrerLastName}}\",\n    \"referrerPhone\": \"{{referrerPhone}}\",\n    \"referrerMobile\": \"{{referrerMobile}}\",\n    \"referrerEmail\": \"{{referrerEmail}}\",\n    \"relationWithPatient\": \"\",\n    \"notes\": \"{{AdditionalNotes}}\",\n    \"equipSourceExternalId\": \"{{equipSourceExternalId}}\",\n    \"patientFirstName\": \"{{patientFirstName}}\",\n    \"patientLastName\": \"{{patientLastName}}\",\n    \"patientState\": \"{{patientState}}\",\n    \"patientBirthDate\": \"{{patientDateOfBirth}}\",\n    \"patientPhone\": \"{{patientPhone}}\",\n    \"patientMobile\": \"{{patientMobile}}\",\n    \"patientEmail\": \"\",\n    \"patientPreferredContact\": \"\",\n    \"contactPatientDirectly\": \"Yes\",\n    \"carerName\": \"\",\n    \"carerPhone\": \"\",\n    \"carerMobile\": \"\",\n    \"carerEmail\": \"\",\n    \"carerPreferredContact\": \"\",\n    \"tellUsMore\": \"{{tellUsMore}}\",\n    \"informationSource\": \"Webform\",\n    \"affiliationList\": [\n        {\n            \"name\": \"Google inc. india pvt ltd\",\n            \"latitude\": \"2\",\n            \"longitude\": \"3\",\n            \"addressLine1\": \"111 8th Ave\",\n            \"addressLine2\": \"APT 1074\",\n            \"city\": \"{{affiliationCity}}\",\n            \"state\": \"{{affiliationState}}\",\n            \"zipCode\": \"85283\"\n        }\n    ],\n    \"taskAssignedUserId\": \"{{assigneeUserId}}\",\n    \"taskAssignedUserName\": \"{{assigneeUserName}}\",\n    \"taskCreatedByUserId\": \"{{assigneeUserId}}\",\n    \"taskCreatedByUserName\": \"{{assigneeUserName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/inquiry-referral/add-referral",
							"host": [
								"{{host}}"
							],
							"path": [
								"inquiry-referral",
								"add-referral"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "847e2e4b-9e75-4859-bd78-c789fa59afdd",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 4000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task category\", function () {\r",
									"    pm.expect(jsonData.data[0].category.categoryName).to.eql(\"Referral\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify task details\", function () {\r",
									"    pm.expect(jsonData.data[0].status.taskStatusId).to.eql(1);\r",
									"    pm.expect(jsonData.data[0].status.taskStatusName).to.eql(\"To do\");\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify task name\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskName).to.eql(pm.variables.get(\"task_name\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_description\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskDescription).to.eql(pm.variables.get(\"task_description\"));\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify task task_assigned_userid\", function () {\r",
									"//     pm.expect(jsonData.taskAssignedUserId).to.eql(pm.variables.get(\"task_assigned_userid\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_createdby_userid\", function () {\r",
									"//    pm.expect(jsonData.taskDescription).to.eql(pm.variables.get(\"task_createdby_userid\"));\r",
									"//});\r",
									"\r",
									"//pm.test(\"Verify task task_due_date\", function () {\r",
									"//    pm.expect(jsonData.taskDueDate).to.eql(pm.variables.get(\"task_due_date\"));\r",
									"//});\r",
									"\r",
									"// pm.test(\"Verify task task_priority_id\", function () {\r",
									"//     pm.expect(jsonData.data[0].taskPriorityId).to.eql(pm.variables.get(\"task_priority_id\"));\r",
									"// });\r",
									"\r",
									"//pm.test(\"Verify task task_status_id\", function () {\r",
									"//    pm.expect(jsonData.taskStatusId).to.eql('\"+pm.variables.get(\"task_status_id\")+\"');\r",
									"//});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "357a95d9-838e-4e06-adb5-2b7d2eb2012b",
								"exec": [
									"// var task_name = pm.variables.get(\"task_name\");\r",
									"// console.log(task_name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b6d6a4f8-7e02-4fde-a614-434a13e9ef84",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{test-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/composition/tasks?filter-by=task-external-id::{{taskExternalId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"composition",
								"tasks"
							],
							"query": [
								{
									"key": "filter-by",
									"value": "task-external-id::{{taskExternalId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "734b96e0-38f2-4796-a86e-bef3892cb7e4"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "9ee0c709-3c0b-4828-8c3a-9cc265e239b9",
				"type": "text/javascript",
				"exec": [
					"collectionMethods = {",
					"    //Return random value by passing the list values",
					"    getAgeFromDOB: function (dob) {",
					"        var ageDifMs = Date.now() - new Date(dob).getTime();",
					"        var ageDate = new Date(ageDifMs); // miliseconds from epoch",
					"        return Math.abs(ageDate.getUTCFullYear() - 1970);",
					"    }",
					"}",
					"",
					"// Refresh the OAuth token if necessary",
					"console.log('Current environment: ' + pm.environment.name);",
					"",
					"if (pm.environment.name === \"qa\") {",
					"    pm.environment.set(\"vesta_audience\", \"https://equip-qa.us.auth0.com/api/v2/\");",
					"    pm.environment.set(\"token_tenant\", \"equip-qa\");",
					"    pm.environment.set(\"coookieURL\", \"https://equip-qa.us.auth0.com\");",
					"    pm.environment.set(\"vesta_client_id\", \"octk74sRPfVm7zJz314cMMzFHnGO3B2s\")",
					"    pm.environment.set(\"token_host\", \"https://equip-qa.us.auth0.com\")",
					"} else if (pm.environment.name === \"dev\") {",
					"    pm.environment.set(\"vesta_audience\", \"https://equip-dev.us.auth0.com/api/v2/\");",
					"    pm.environment.set(\"token_tenant\", \"equip-dev\");",
					"    pm.environment.set(\"coookieURL\", \"https://equip-dev.us.auth0.com\");",
					"    pm.environment.set(\"vesta_client_id\", \"hh9fZVGIShbS2xXdr7B0glheYEKOFFdw\")",
					"    pm.environment.set(\"token_host\", \"https://equip-dev.us.auth0.com\")",
					"}",
					"",
					"var tokenDate = new Date(2010, 1, 1);",
					"var tokenTimestamp = pm.environment.get(\"OAuth_Timestamp\");",
					"if (tokenTimestamp) {",
					"    tokenDate = Date.parse(tokenTimestamp);",
					"}",
					"var expiresInTime = pm.environment.get(\"ExpiresInTime\");",
					"if (!expiresInTime) {",
					"    expiresInTime = 86400000; // Set default expiration time to 24 hours (in ms)",
					"}",
					"",
					"if ((new Date() - tokenDate) >= expiresInTime || pm.environment.get(\"test-token\") === \"\") {",
					"    // clearCookies();",
					"    getToken();",
					"}",
					"",
					"var tokenAuthorizationCode1;",
					"var tokenAuthorizationCode2;",
					"//Function to generate token",
					"function getToken() {",
					"    //Clear cookies",
					"    const cookieJar = pm.cookies.jar();",
					"    cookieJar.clear(pm.environment.get(\"coookieURL\"), () => {",
					"        console.log(\"Cookies cleared!\");",
					"        cookieJar.clear(pm.environment.get(\"coookieURL\") + '/usernamepassword/login', () => {",
					"            console.log(\"CSRF cookies cleared!\");",
					"",
					"            console.log(\"Generating token...\")",
					"            //GET authorization code",
					"            pm.sendRequest({",
					"                url: pm.environment.get(\"token_host\") + '/authorize?audience=' + pm.environment.get(\"vesta_audience\")",
					"                    + '&response_type=code&client_id=' + pm.environment.get(\"vesta_client_id\")",
					"                    + '&redirect_uri=https://*.equip.health',",
					"                method: 'GET',",
					"                header: {",
					"                    'Accept': '*/*'",
					"                }",
					"            }, (err, res) => {",
					"                let responseHeaderData = res.headers.get('Location').split('=');",
					"                let token = responseHeaderData[1].split('&');",
					"                tokenAuthorizationCode1 = token[0];",
					"                console.log(tokenAuthorizationCode1);",
					"",
					"                //POST request to login to vesta",
					"                let url = pm.environment.get(\"token_host\") + '/usernamepassword/login';",
					"                pm.sendRequest({",
					"                    url: url,",
					"                    method: 'POST',",
					"                    header: {",
					"                        'Accept': '*/*',",
					"                        'Content-Type': 'application/x-www-form-urlencoded',",
					"                    },",
					"                    body: {",
					"                        mode: 'urlencoded',",
					"                        urlencoded: [",
					"                            { key: \"username\", value: pm.environment.get(\"vesta_username\") },",
					"                            { key: \"password\", value: pm.environment.get(\"vesta_password\") },",
					"                            { key: \"state\", value: tokenAuthorizationCode1 },",
					"                            { key: \"tenant\", value: pm.environment.get(\"token_tenant\") },",
					"                            { key: \"client_id\", value: pm.environment.get(\"vesta_client_id\") },",
					"                            { key: \"redirect_uri\", value: \"https://*.equip.health\" },",
					"                            { key: \"response_type\", value: \"code\" },",
					"                            { key: \"connection\", value: \"Username-Password-Authentication\" }",
					"                        ]",
					"                    }",
					"                }, (err, res) => {",
					"                    const $ = cheerio.load(res.text());",
					"                    var wresult = ($(\"input\")[1])['attribs'].value; // get wresult",
					"                    var wctx = ($(\"input\")[2])['attribs'].value; // get wctx",
					"",
					"                    //POST request to get resume state",
					"                    let url = pm.environment.get(\"token_host\") + '/login/callback';",
					"                    pm.sendRequest({",
					"                        url: url,",
					"                        method: 'POST',",
					"                        header: {",
					"                            'Accept': '*/*',",
					"                            'Content-Type': 'application/x-www-form-urlencoded',",
					"                        },",
					"                        body: {",
					"                            mode: 'urlencoded',",
					"                            urlencoded: [",
					"                                { key: \"wa\", value: \"wsignin1.0\" },",
					"                                { key: \"wresult\", value: wresult },",
					"                                { key: \"wctx\", value: wctx }",
					"                            ]",
					"                        }",
					"                    }, (err, res) => {",
					"                        //GET authorization code",
					"                        pm.sendRequest({",
					"                            url: pm.environment.get(\"token_host\")",
					"                                + '/authorize?audience=' + pm.environment.get(\"vesta_audience\")",
					"                                + '&response_type=code&client_id=' + pm.environment.get(\"vesta_client_id\")",
					"                                + '&redirect_uri=https://*.equip.health',",
					"                            method: 'GET',",
					"                            header: {",
					"                                'Accept': '*/*'",
					"                            }",
					"                        }, (err, res) => {",
					"                            console.log(res);",
					"                            let responseHeaderData = res.headers.get('Location').split('=');",
					"                            let token = responseHeaderData[1].split('&');",
					"                            // console.log(token[0]);",
					"                            tokenAuthorizationCode2 = token[0];",
					"                            // Get token using POST request",
					"                            let url = pm.environment.get(\"token_host\") + '/oauth/token';",
					"                            pm.sendRequest({",
					"                                url: url,",
					"                                method: 'POST',",
					"                                header: {",
					"                                    'Accept': '*/*',",
					"                                    'Content-Type': 'application/x-www-form-urlencoded',",
					"                                },",
					"                                body: {",
					"                                    mode: 'urlencoded',",
					"                                    urlencoded: [",
					"                                        { key: \"client_id\", value: pm.environment.get(\"vesta_client_id\") },",
					"                                        { key: \"code\", value: tokenAuthorizationCode2 },",
					"                                        { key: \"audience\", value: pm.environment.get(\"vesta_audience\") },",
					"                                        { key: \"grant_type\", value: \"authorization_code\" },",
					"                                        { key: \"redirect_uri\", value: \"https://*.equip.health\" }]",
					"                                }",
					"                            }, (err, res) => {",
					"                                console.log(res.json().access_token)",
					"                                pm.environment.set(\"test-token\", res.json().access_token)",
					"                                pm.environment.set(\"OAuth_Timestamp\", new Date());",
					"",
					"                                // Set the ExpiresInTime variable to the time given in the response if it exists",
					"                                if (res.json().expires_in) {",
					"                                    expiresInTime = res.json().expires_in * 1000;",
					"                                }",
					"                                pm.environment.set(\"ExpiresInTime\", expiresInTime);",
					"                            })",
					"                        });",
					"                    });",
					"",
					"                });",
					"            });",
					"        });",
					"    });",
					"}",
					"",
					"let states = [",
					"    \"Alaska\",",
					"    \"Alabama\",",
					"    \"Arizona\",",
					"    \"Arkansas\",",
					"    \"California\",",
					"    \"Colorado\",",
					"    \"Connecticut\",",
					"    \"Delaware\",",
					"    \"District of Columbia\",",
					"    \"Florida\",",
					"    \"Georgia\",",
					"    \"Hawaii\",",
					"    \"Idaho\",",
					"    \"Illinois\",",
					"    \"Indiana\",",
					"    \"Iowa\",",
					"    \"Kansas\",",
					"    \"Kentucky\",",
					"    \"Louisiana\",",
					"    \"Maine\",",
					"    \"Maryland\",",
					"    \"Massachusetts\",",
					"    \"Michigan\",",
					"    \"Minnesota\",",
					"    \"Mississippi\",",
					"    \"Missouri\",",
					"    \"Montana\",",
					"    \"Nebraska\",",
					"    \"Nevada\",",
					"    \"New Hampshire\",",
					"    \"New Jersey\",",
					"    \"New Mexico\",",
					"    \"New York\",",
					"    \"North Carolina\",",
					"    \"North Dakota\",",
					"    \"Ohio\",",
					"    \"Oklahoma\",",
					"    \"Oregon\",",
					"    \"Pennsylvania\",",
					"    \"Puerto Rico\",",
					"    \"Rhode Island\",",
					"    \"South Carolina\",",
					"    \"South Dakota\",",
					"    \"Tennessee\",",
					"    \"Texas\",",
					"    \"Utah\",",
					"    \"Vermont\",",
					"    \"Virginia\",",
					"    \"Washington\",",
					"    \"West Virginia\",",
					"    \"Wisconsin\",",
					"    \"Wyoming\",",
					"    \"Outside US\",",
					"    \"Unknown\"",
					"];"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "5702e30d-f43c-4298-b134-0c1096f9bce1",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}